{"version":3,"sources":["webpack:///./src/templates/docs.js"],"names":["Category","allMarkdownRemark","data","edges","totalCount","title","config","siteTitle","to","sectionTitle","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","postQuery"],"mappings":"4FAAA,4IA2CeA,UA7BE,SAAC,GAAqC,IAA3BC,EAA0B,EAAlCC,KAAQD,kBAClBE,EAAsBF,EAAtBE,MAAsBF,EAAfG,WAEf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,QAAUC,IAAOC,YAC9B,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KAAKF,IAAOC,YAEvB,6BACE,kBAAC,IAAD,CAASE,cAAY,GAArB,QACO,kBAAC,OAAD,CAAMD,GAAG,eAAT,kBADP,KAGCL,EAAMO,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CACEN,MAAOM,EAAKC,KAAKC,YAAYR,MAC7BS,KAAMH,EAAKC,KAAKC,YAAYC,KAC5BC,QAASJ,EAAKC,KAAKG,QACnBC,WAAYL,EAAKC,KAAKI,WACtBC,KAAMN,EAAKC,KAAKM,OAAOD,KACvBE,SAAUR,EAAKC,KAAKC,YAAYM,SAChCC,IAAKT,EAAKC,KAAKM,OAAOD,aAsB3B,IAAMI,EAAS","file":"component---src-templates-docs-js-e31822edafaad0d2f111.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport {\n  Wrapper,\n  Header,\n  Subline,\n  Article,\n  SectionTitle,\n  Content\n} from 'components'\nimport config from '../../config/SiteConfig'\n\nconst Category = ({ data: { allMarkdownRemark } }) => {\n  const { edges, totalCount } = allMarkdownRemark\n\n  return (\n    <Wrapper>\n      <Helmet title={`'' | ${config.siteTitle}`} />\n      <Header>\n        <Link to=\"/\">{config.siteTitle}</Link>\n      </Header>\n      <div>\n        <Subline sectionTitle>\n          (See <Link to=\"/categories\">all categories</Link>)\n        </Subline>\n        {edges.map(post => (\n          <Article\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            slug={post.node.fields.slug}\n            category={post.node.frontmatter.category}\n            key={post.node.fields.slug}\n          />\n        ))}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Category\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired\n    })\n  }).isRequired\n}\n\nexport const postQuery = graphql`\n  query docs {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: \"docs\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}