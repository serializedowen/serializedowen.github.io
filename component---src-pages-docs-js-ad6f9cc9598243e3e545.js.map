{"version":3,"sources":["webpack:///./src/layouts/withENLayout.js","webpack:///./src/lang/en.js","webpack:///./src/pages/docs.js"],"names":["Component","props","i18nMessages","messages","module","exports","selectLanguage","greeting","categories","contact","readTime","blog","docs","mainPage","copyrights","Title","styled","h3","Docs","docsData","useStaticQuery","location","useLocation","title","config","siteTitle","to","id","allMarkdownRemark","distinct","map","pkgName","pathname","withENLayout"],"mappings":"2FAAA,0DAUe,aAAAA,GAAS,OAAI,SAAAC,GAC1B,OACE,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,aAAcC,MAC/B,kBAACH,EAAcC,O,mBCbrBG,EAAOC,QAAU,CACfC,eAAgB,uBAChBC,SAAU,QACVC,WAAY,aACZC,QAAS,UACTC,SAAU,kBACVC,KAAM,OACNC,KAAM,OACNC,SAAU,OACVC,WAAY,+C,kCCTd,2KAmBMC,EAnBN,UAmBcC,EAAOC,GAAV,kEAAGD,CAAH,uFAKLE,EAAO,WACX,IAAMC,EAAWC,yBAAe,cAW1BC,EAAWC,wBAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,YAAcC,IAAOC,YAClC,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KAAKF,IAAOC,YAEvB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBE,GAAG,UAEtBR,EAASS,kBAAkBC,SAASC,KAAI,SAAAC,GAAO,OAC9C,kBAAChB,EAAD,KACE,kBAAC,OAAD,CAAMW,GAAIL,EAASW,SAAW,IAAMD,GACjCA,EADH,IACY,kBAAC,IAAD,CAAkBJ,GAAG,SADjC,IAC6D,aAS1DM,sBAAaf","file":"component---src-pages-docs-js-ad6f9cc9598243e3e545.js","sourcesContent":["import React from 'react'\nimport { addLocaleData } from 'react-intl'\nimport messages from '../lang/en'\n// import en from 'react-intl/locale-data/en'\nimport Layout from './index'\n\n// import 'intl/locale-data/jsonp/en';\n\n// addLocaleData(en)\n\nexport default Component => props => {\n  return (\n    <Layout {...props} i18nMessages={messages}>\n      <Component {...props}></Component>\n    </Layout>\n  )\n}\n\n// export default props => <Layout {...props} i18nMessages={messages} />\n","module.exports = {\n  selectLanguage: 'Select your language',\n  greeting: 'Howdy',\n  categories: 'Categories',\n  contact: 'Contact',\n  readTime: '{time} Min Read',\n  blog: 'Blog',\n  docs: 'Docs',\n  mainPage: 'Home',\n  copyrights: '@SerializedOwen 2020. All rights reserved.'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport { useLocation } from '@reach/router'\nimport {\n  Wrapper,\n  Header,\n  Subline,\n  Article,\n  SectionTitle,\n  Content\n} from 'components'\nimport config from '../../config/SiteConfig'\nimport withENLayout from 'src/layouts/withENLayout'\nimport { FormattedMessage } from 'react-intl'\n\nimport styled from 'styled-components'\n\nconst Title = styled.h3`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`\nconst Docs = () => {\n  const docsData = useStaticQuery(graphql`\n    query docs {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        filter: { fields: {}, frontmatter: { category: { eq: \"docs\" } } }\n      ) {\n        distinct(field: fields___package)\n      }\n    }\n  `)\n\n  const location = useLocation()\n\n  return (\n    <Wrapper>\n      <Helmet title={`'文档列表' | ${config.siteTitle}`} />\n      <Header>\n        <Link to=\"/\">{config.siteTitle}</Link>\n      </Header>\n      <Content>\n        <SectionTitle>\n          <FormattedMessage id=\"docs\"></FormattedMessage>\n        </SectionTitle>\n        {docsData.allMarkdownRemark.distinct.map(pkgName => (\n          <Title>\n            <Link to={location.pathname + '/' + pkgName}>\n              {pkgName} <FormattedMessage id=\"docs\"></FormattedMessage> {'\\n'}\n            </Link>\n          </Title>\n        ))}\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default withENLayout(Docs)\nexport { Docs }\n\nDocs.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired\n    })\n  }).isRequired\n}\n"],"sourceRoot":""}