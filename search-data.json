[{"title":"Tap Tap Bug","date":"2020-09-10","category":"Packages","content":"\nA dead simple canvas game.\n\n<iframe src=\"/Tap-Tap-Bug/\" width=\"100%\" height=\"700px\" frameborder=\"0\"></iframe>\n"},{"title":"Markdown Cheatsheet","date":"2018-01-01","category":"General","content":"\n[View raw (TEST.md)](https://raw.github.com/adamschwartz/github-markdown-kitchen-sink/master/README.md)\n\nThis is a paragraph.\n\n    This is a paragraph.\n\n# Header 1\n\n## Header 2\n\n    Header 1\n    ========\n\n    Header 2\n    --------\n\n# Header 1\n\n## Header 2\n\n### Header 3\n\n#### Header 4\n\n##### Header 5\n\n###### Header 6\n\n    # Header 1\n    ## Header 2\n    ### Header 3\n    #### Header 4\n    ##### Header 5\n    ###### Header 6\n\n# Header 1\n\n## Header 2\n\n### Header 3\n\n#### Header 4\n\n##### Header 5\n\n###### Header 6\n\n    # Header 1 #\n    ## Header 2 ##\n    ### Header 3 ###\n    #### Header 4 ####\n    ##### Header 5 #####\n    ###### Header 6 ######\n\n> Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> ## This is a header.\n>\n> 1. This is the first list item.\n> 2. This is the second list item.\n>\n> Here's some example code:\n>\n>     Markdown.generate();\n\n    > ## This is a header.\n    > 1. This is the first list item.\n    > 2. This is the second list item.\n    >\n    > Here's some example code:\n    >\n    >     Markdown.generate();\n\n- Red\n- Green\n- Blue\n\n* Red\n* Green\n* Blue\n\n- Red\n- Green\n- Blue\n\n```markdown\n- Red\n- Green\n- Blue\n\n* Red\n* Green\n* Blue\n\n- Red\n- Green\n- Blue\n```\n\n1. Buy flour and salt\n1. Mix together with water\n1. Bake\n\n```markdown\n1. Buy flour and salt\n1. Mix together with water\n1. Bake\n```\n\nParagraph:\n\n    Code\n\n<!-- -->\n\n    Paragraph:\n\n        Code\n\n---\n\n---\n\n---\n\n---\n\n---\n\n    * * *\n\n    ***\n\n    *****\n\n    - - -\n\n    ---------------------------------------\n\nThis is [an example](http://example.com 'Example') link.\n\n[This link](http://example.com) has no title attr.\n\nThis is [an example][id] reference-style link.\n\n[id]: http://example.com 'Optional Title'\n\n    This is [an example](http://example.com \"Example\") link.\n\n    [This link](http://example.com) has no title attr.\n\n    This is [an example] [id] reference-style link.\n\n    [id]: http://example.com \"Optional Title\"\n\n_single asterisks_\n\n_single underscores_\n\n**double underscores**\n\n    *single asterisks*\n\n    _single underscores_\n\n    **double asterisks**\n\n    __double underscores__\n\nThis paragraph has some `code` in it.\n\n    This paragraph has some `code` in it.\n\n![Alt Text](https://placehold.it/200x50 'Image Title')\n\n    ![Alt Text](https://placehold.it/200x50 \"Image Title\")\n"},{"title":"Button ripple effect w/ simple css","date":"2020-09-10","category":"CSS Tricks","content":"\n[Google Material Design](https://material.io) followed button ripple effect\n\n<style>\n  .wrapper {\n    background: #fff;\n    padding: 20px 30px;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\n  }\n  .wrapper .text {\n    font-size: 35px;\n    font-weight: 600;\n  }\n  .wrapper p {\n    font-size: 20px;\n    font-weight: 500;\n    line-height: 20px;\n  }\n  .wrapper .btns {\n    display: flex;\n    margin: 30px 0 20px 0;\n  }\n  .btns button {\n    position: relative;\n    margin: 0 20px;\n    height: 60px;\n    border: none;\n    width: 200px;\n    display: block;\n    line-height: 60px;\n    border-radius: 30px;\n    text-decoration: none;\n    color: #fff;\n    font-size: 18px;\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    overflow: hidden;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  }\n  .btns button:first-child {\n    background: linear-gradient(-90deg, #f5ce62, #e85a19);\n  }\n  .btns button:last-child {\n    background: linear-gradient(90deg, #0162c8, #55e7fc);\n  }\n  .btns button > span {\n    position: absolute;\n    background: #fff;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    pointer-events: none;\n    animation: ripples 0.6s linear infinite;\n  }\n  @keyframes ripples {\n    0% {\n      width: 0px;\n      height: 0px;\n      opacity: 0.5;\n    }\n    100% {\n      width: 500px;\n      height: 500px;\n      opacity: 0;\n    }\n  }\n</style>\n<div class=\"wrapper\">\n  <div class=\"text\">\n    Button Ripple Effect\n  </div>\n  <p>\n    using HTML CSS & JavaScript\n  </p>\n  <div class=\"btns\">\n    <button>Click me</button>\n    <button>Click me</button>\n\n  </div>\n</div>\n\n<script type=\"text/javascript\">\n\n\nconst buttons = document.querySelectorAll('button')\n  buttons.forEach(button => {\n    button.onclick = function(e) {\n\n      console.log(e)\n      let x = e.clientX - e.target.offsetLeft\n      let y = e.clientY - e.target.offsetTop\n      let ripple = document.createElement('span')\n      ripple.style.left = x + 'px'\n      ripple.style.top = y + 'px'\n      this.appendChild(ripple)\n      setTimeout(function() {\n        ripple.remove()\n      }, 600) // 1second = 1000ms\n    }\n})\n\n</script>\n\n```html\n<style>\n  .wrapper {\n    background: #fff;\n    padding: 20px 30px;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.25);\n  }\n  .wrapper .text {\n    font-size: 35px;\n    font-weight: 600;\n  }\n  .wrapper p {\n    font-size: 20px;\n    font-weight: 500;\n    line-height: 20px;\n  }\n  .wrapper .btns {\n    display: flex;\n    margin: 30px 0 20px 0;\n  }\n  .btns a {\n    position: relative;\n    margin: 0 20px;\n    height: 60px;\n    width: 200px;\n    display: block;\n    line-height: 60px;\n    border-radius: 30px;\n    text-decoration: none;\n    color: #fff;\n    font-size: 18px;\n    font-weight: 500;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    overflow: hidden;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  }\n  .btns a:first-child {\n    background: linear-gradient(-90deg, #f5ce62, #e85a19);\n  }\n  .btns a:last-child {\n    background: linear-gradient(90deg, #0162c8, #55e7fc);\n  }\n  .btns a > span {\n    position: absolute;\n    background: #fff;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    pointer-events: none;\n    animation: ripples 0.6s linear infinite;\n  }\n  @keyframes ripples {\n    0% {\n      width: 0px;\n      height: 0px;\n      opacity: 0.5;\n    }\n    100% {\n      width: 500px;\n      height: 500px;\n      opacity: 0;\n    }\n  }\n</style>\n```\n\n```js\nconst buttons = document.querySelectorAll('a')\nbuttons.forEach(button => {\n  button.onclick = function(e) {\n    let x = e.clientX - e.target.offsetLeft\n    let y = e.clientY - e.target.offsetTop\n    let ripple = document.createElement('span')\n    ripple.style.left = `${x}px`\n    ripple.style.top = `${y}px`\n    this.appendChild(ripple)\n    setTimeout(function() {\n      ripple.remove()\n    }, 600) // 1second = 1000ms\n  }\n})\n```\n"},{"title":"breezing-effect","date":"2020-09-18","category":"CSS Tricks","content":"\n<style>\n  @keyframes breeze {\n    0% {\n      transform: scale(1);\n      opacity: 1\n    \n    }\n    \n\n    100% {\n      opacity: 0.2;\n      transform: scale(2);\n    }\n  }\n\n  .main {\n    position: absolute;\n    left: 50%;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background-color: blue;\n    border: 1px darkblue solid\n  }\n\n  .animated {\n    animation: breeze 2s infinite\n\n  }\n</style>\n\n<div style=\"position: relative; height: 200px\">\n<div class=\"main\"></div>\n<div class=\"main animated\"></div>\n<div class=\"main animated\" style='animation-delay: 0.4s'></div>\n<div class=\"main animated\" style='animation-delay: 0.8s'></div>\n<div class=\"main animated\" style='animation-delay: 1.2s'></div>\n<div class=\"main animated\" style='animation-delay: 1.6s'></div>\n\n</div>\n\n```html\n<style>\n  @keyframes breeze {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 0.2;\n      transform: scale(2);\n    }\n  }\n\n  .main {\n    position: absolute;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background-color: blue;\n    border: 1px darkblue solid;\n  }\n\n  .animated {\n    animation: breeze 2s infinite;\n  }\n</style>\n\n<div class=\"main\"></div>\n<div class=\"main animated\"></div>\n<div class=\"main animated\" style=\"animation-delay: 0.4s\"></div>\n<div class=\"main animated\" style=\"animation-delay: 0.8s\"></div>\n<div class=\"main animated\" style=\"animation-delay: 1.2s\"></div>\n<div class=\"main animated\" style=\"animation-delay: 1.6s\"></div>\n```\n"},{"title":"Location 配置详解","date":"2020-10-15","category":"Nginx","content":"\n这篇文章来源于自己网站的需求\n\n### location 模块的语法\n\n```\nlocation optional_modifier location_match {\n\n    . . .\n\n}\n```\n\n其中 optional_modifier 代表可选的 location 修饰符, 修饰符的存在或不存在会影响 Nginx 尝试匹配位置块的方式。解释如下：\n\n- （无）：如果不存在修饰符，则该位置将解释为前缀匹配。这意味着给定的位置将与请求 URI 的开头进行匹配以确定是否匹配。\n- =：如果使用等号，则只有在请求 URI 完全匹配给定的位置才会被被视为匹配。\n- ~：如果存在波浪号修饰符，则此位置将被解释为区分大小写的正则表达式匹配。\n- ~\\*：如果使用了波浪号和星号修饰符，则位置块将被解释为不区分大小写的正则表达式匹配。\n- ^~：如果存在克拉和波浪号修饰符，则表示如果当此项被选为最佳的非正则匹配时，其他正则匹配将不在有效。\n\n#### 语法示例\n\n下列是一个前缀匹配示例，他会匹配/site, /site/page1/index.html, /site/index.html 等等\n\n```\nlocation /site {\n    . . .\n}\n```\n\n下面则是一个绝对 URI 匹配，仅当请求地址和 location_match 完全相同时才会响应。他会匹配/page1，而不会匹配/page1/index.html：\n\n```\nlocation = /page1 {\n    . . .\n}\n```\n\n下列配置会匹配`/tortoise.jpg` 但不会匹配`/FLOWER.PNG`:\n\n```\nlocation ~ \\.(jpe?g|png|gif|ico)$ {\n    . . .\n}\n```\n\n下列配置会匹配`/tortoise.jpg`和`/FLOWER.PNG`:\n\n```\nlocation ~* \\.(jpe?g|png|gif|ico)$ {\n    . . .\n}\n```\n\n#### Nginx 如何选择用哪个 location 模块 去响应请求\n\nNginx 会使用一个固定的流程为您的请求选择最佳 location 模块，而这个流程和选择 server 模块的流程非常相似。理解它对正确配置和使用 Nginx 至关重要：\n\n- 首先 Nginx 会遍历所有的前缀匹配（所有不包含正则表达式的 location 模块）并尝试匹配请求 URI。\n- 第一步，Nginx 会寻找完全匹配项（包含 = 修饰符的 location 模块），如果找到，Nginx 将停止遍历并用当前匹配来响应请求。\n- 如果没有找到完全匹配项，Nginx 接下来会去尝试寻找最长的非完全匹配项。\n  - 如果最长匹配项中有 ^~ 修饰符，那么 Nginx 会立即终止接下来的查询并用当前 location 模块来响应请求\n  - 如果不含^~ 修饰符，Nginx 会暂存当前 location 模块并继续搜索(使用栈来储存)\n- 搜索完毕后，Nginx 按顺序依次匹配 location 模块中的正则表达式部分。如果正则表达式匹配，Nginx 会终止搜索并用当前 location 模块来响应请求。\n- 如果最长非完全匹配项中没有匹配的正则表达式，则此匹配项会出栈，开始匹配第二长的非完全匹配项\n- 搜索直到栈空，并返回 404 页面\n\n> 需要注意的是，尽管通常情况下 Nginx 会匹配最长，最详细的匹配，但正则表达式是按顺序匹配的，并且在匹配时会立即返回并使用，所以配置中正则表达式的定义顺序相当重要！\n\n### location 模块中的内部重定向\n\n一般来说，当一个 location 模块已被选择来响应请求时，该请求的响应内容肯定会定义在这个 location 模块的上下文中。而不会受到其他 location 模块的干扰。\n\n但有些情况下这并不满足我们的需求，所有 Nginx 为我们提供了一些内部重定向指令来触发新一轮的 location 模块匹配流程，这些指令是：\n\n- index\n- try_files\n- rewrite\n- error_page\n\n#### index 指令\n\n如果你的配置中包含 index 指令，则匹配不到时总是会触发内部重定向。在下列例子中，我们用= 修饰符精确匹配来加快搜索过程，但当我们 location 模块中是个文件夹，并且找不到匹配项时，index 指令会内部重定向到第二个 location 模块来处理请求：\n\n```\nindex index.html;\nlocation = /exact {\n    . . .\n}\nlocation / {\n\n    . . .\n}\n```\n\n如果你要在这个例子中让匹配锁定在/exact 模块中，你可以进行下面的操作：\n\n```\nlocation = /exact {\n    index nothing_will_match;  //一个肯定不会匹配的index项\n    autoindex on;\n}\nlocation  / {\n    . . .\n}\n```\n\n#### try_files 指令\n\ntry_files 指令同样会导致内部重定向，\n\n```\nroot /var/www/main;\nlocation / {\n    try_files $uri $uri.html $uri/ /fallback/index.html;\n}\n\nlocation /fallback {\n    root /var/www/another;\n}\n```\n\n上述例子中，如果你请求/blahblah，第一个 location 模块会首先匹配并处理请求。它会尝试寻找在`/var/www/main`目录下寻找 `blahblah`文件，然后寻找`blahblah.html`文件，最后寻找`blahblah/`目录。如果这些匹配全部失败，会内部重定向到`/fallback/index.html`。这会触发第二次 location 搜索流程并匹配到第二个 location 模块中。\n\n#### rewrite 指令\n\n```\nroot /var/www/main;\nlocation / {\n    rewrite ^/rewriteme/(.*)$ /$1 last;\n    try_files $uri $uri.html $uri/ /fallback/index.html;\n}\n\nlocation /fallback {\n    root /var/www/another;\n}\n```\n\n这个例子中，`/rewriteme/hello`会先被第一个 location 模块处理，他会被重写成`/hello` 并重新开始 location 搜索流程，`/hello`依然会匹配第一个 location 模块，并开始 try_files，如果 try_files 找不到匹配项，则会跳转到 `/fallback`location 模块中。\n\n### 引用\n\n1. [Understanding Nginx Server and Location Block Selection Algorithms](https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms#matching-location-blocks)\n"},{"title":"浅入浅出 TypeScript 泛型与类型黑魔法","date":"2021-01-19","category":"TypeScript","content":"\n浅入浅出 TypeScript 泛型与类型黑魔法\n\n# 前言\n\n工作中看到很多同学对于 ts 的使用还是有局限性，包括对复杂类型和类型运算的抵触，导致写出来的代码 any 随处都是，维护、迭代时代码提示基本没有，方法名字基本靠猜，参数类型依赖文档，完全丧失了 ts 的作为强类型语言的优势。本文会在展开介绍泛型和各种类型黑魔法，为大家的 ts 工具库添砖加瓦，写出对自己和其他开发者更加友好的 ts 代码\n\n# 第一部分：泛型（Generic types）\n\n## 定义：（摘自百度百科）\n\n> 泛型是程序设计语言的一种特性。允许程序员在强类型程序设计语言中编写代码时定义一些可变部分，那些部分在使用前必须作出指明。各种程序设计语言和其编译器、运行环境对泛型的支持均不一样。将类型参数化以达到代码复用提高软件开发工作效率的一种数据类型。泛型类是引用类型，是堆对象，主要是引入了类型参数这个概念。\n\n呃，这写的是什么东西？我相信大部分人看到这个定义都会一头雾水。\n\n## 定义：(摘自本人）\n\n> **泛型就是对类型编程，把一部分在编写时候无法确定的类型转移到运行时来确定**\n\n一个非常常见的例子就是如下代码：\n\n```ts\nArray<T>\n```\n\n我们在日常写代码的时候，就往往会遇到这种情况，在处理函数之前，我们只知道接受的参数是个 Array 类型，但无法确认这个数组里面存的是什么类型，这时候我们应该用什么类型来描述这个对象？\n\n### `用 any？`\n\n这显然是不合适的，因为我们知道这个类型肯定会有诸如`Array.prototype.reduce()`, `Array.prototype.map()`等等挂在 Array 原型链上的函数，我们只是不知道`Array.prototype.map((...args) => {})`的中 args 的类型而已。\n\n### `用 Array<any>？`\n\n用 Array<any>显然也不合适，因为这之后我们在使用`Array.prototype.map((...args) => {})`的时候，args 将会是 any 类型，我们希望能有一种办法，在定义时候只约束类型是个 Array，而里面装的东西到运行时去确定。\n\n### `Array<T>`\n\n谜底就在谜面上，我们的最终选择就是使用`Array<T>` 这里面的 T 就是泛型，一个在编译时无法确定的类型。\n\n## 使用场景\n\n### 简单案例\n\n当你满心欢心的把 Array<T>放到你的代码里去，vscode 就会热情地为你泼一盆冷水：\n\n```ts\nexport function test(arr: Array<T>) {\n  return arr\n}\n```\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/53bc61b5087347c9a23ce940820624e4~tplv-k3u1fbpfcp-zoom-1.image)\n\n解决方法也很简单：\n\n我们之前刚刚提到，**泛型可以理解为对类型编程，而这个例子里的 T 不是一个具体的类型，而是一个变量**，我们只要事先声明他就好啦\n\n```ts\n// 已尖括号的形式声明在方法名的后面\nexport function test<T>(arr: Array<T>) {\n  return arr\n}\n```\n\n### 默认值\n\n```ts\nexport function test<T = string>(arr: Array<T>) {\n  return arr\n}\n```\n\n和参数的默认值类似，当使用时未提供 T 的类型时，T 会自动识别为 string\n\n### 类型继承: (extends 关键字)\n\n想象这样一个场景，我们的 test 函数需要操作 Array<T>的数据，但是我们事先就对 T 的类型有一定认识。\n\n例如：我们的 test 方法要操作 T 中一个叫 size 的属性。\n\n这时候我们就可以使用：\n\n```ts\ninterface Sizable {\n  size: number\n}\n\nexport function test<T extends Sizable>(arr: Array<T>) {\n  // 这里i.size会有代码补全。\n  arr.map(i => i.size)\n  return arr\n}\n\n// 这行代码会提示 'ese'上不包含.size这个属性  报错。\ntest(['ese'])\n```\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9cedae2751ea463b83f1aa99485efeed~tplv-k3u1fbpfcp-zoom-1.image)\n\n## 第二部分：类型黑魔法\n\n这部分是本人在日常 ts 的使用中总结出来的小技巧和偏门 API，希望也能让大家事半功倍。\n\n### 类的 constructor：\n\n#### 场景：\n\n你用工厂模式设计了一个 create 函数，用来代理类的创建（使用常见诸如单例模式，类引用计数 etc..)\n\n这时候，你自然希望将你需要的类作为泛型传入，但是这时候 create 函数的参数期望的你要创建的类的构造函数，怎么实现呢？如下：\n\n#### 实现：\n\n```ts\nexport function create<T>(ctor: { new (): T }): T {\n  return new ctor()\n}\n```\n\n![image.png](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f70e4bc44b054e1081c348b99ad3620b~tplv-k3u1fbpfcp-zoom-1.image)\n\n黑魔法就在这里，`{new (): T}` 代表一个可以 new，并返回 T 类型的对象，也就是 T 的构造函数\n\n### 映射类型 (TypeScript 已内置)\n\n#### 场景：\n\nEmployee 对象是一个后端数据库中的类型，拥有几个属性:\n\n```ts\nexport interface Employee {\n  age: number\n  sex: 'male' | 'female'\n  salary: number\n  mood: 'happy' | 'sad' | 'average'\n  workTime: '996' | '965' | '995' | '1027'\n}\n```\n\n这时候我们如果要在前端对 Employee 进行更新操作，传整个对象自然是不合理的，比如我们只想更新一位 Employee 的 mood 属性，ts 编译器就会报错，告诉我们遗漏了一部分属性\n\n![image.png](https://cdn.serializedowen.com/FoaXfjGwhtZHoc04G3W5EN3jYpj6)\n\n#### 实现：\n\n使用 Partial 类型包裹 Employee，获得一个所有参数都是可选的 Employee 类型(相当于定义是给每个属性加上了\"?\"修饰符）\n![image.png](https://cdn.serializedowen.com/FvRU3omq7cGdJRB8ykOzfmbpB9eZ)\n\n```ts\ntype Partial<T> = { [P in keyof T]?: T[P] | undefined }\n```\n\n> 他的实现也并不复杂，输入一个泛型 T，输出一个新类型，类型中每个属性都是 T 的属性加上'?'修饰符，其中 keyof T 代表 T 泛型中的属性名，T[P]代表对应属性的类型\n\n根据这个形式，我们就可以举一反三出各种类似的工具类型：\n\n```ts\ntype Required<T> = { [P in keyof T]-?: T[P] | undefined }\n```\n\n```ts\ntype Readonly<T> = { readonly [P in keyof T]: T[P] | undefined }\n```\n\n### 从复杂类型中提取基础类型\n\n#### 场景：\n\naxios 作为一个基于 Promise 的 http 请求库，大家一定都很熟悉。他的请求返回对象都是用 Promise 包裹的。\n![image.png](https://cdn.serializedowen.com/FnnvDOAiQMzQ85_AKAOWv1kqrwJg)\n\n这时候，我们可能有一个函数需要处理 Promise 返回的响应体，也就是说，我们希望可以从 Promise<AxiosResponse<any>>类型中提取出 AxiosResponse<any>的类型。\n\n#### 实现：\n\n```\ntype Depromisify<T> = T extends Promise<infer U> ? U : T\n```\n\n![image.png](https://cdn.serializedowen.com/FtFfGWkZ02lZvTa86jTn--QIavEP)\n\n看起来有点复杂？我们分步一个个讲解：\n\n- `extends`：前文介绍过，用来判断 T 泛型能否继承 Promise<infer U>这个类型\n- `T ? T : unknown`：, js 中常见的三元运算符，在 ts 中是一样的效果\n- `infer`：如其名，告诉 ts 编译器，需要推理此处的类型并存到 U 这个类型变量中\n\n用类似的手段，我们可以实现更多的工具类型：\n\n```ts\n// 如果T是一个数组，则提取数组中的对象类型\ntype FlattenArray<T> = T extends (infer U)[] : U : T\n```\n\n```ts\n// 提取函数的返回类型\ntype ReturnType<T> = T extends (...args: any[]) => infer U ? U : T\n```\n\n等等\n\n# 后记\n\nTypeScript 作为 JavaScript 的强类型超集，在保留了动态类型语言的灵活性(any)的同时，提供了各种强类型语言的优点，值得大家去学习深入。希望这篇文章能在编写 ts 代码的时候帮助到大家，早日摆脱 AnyScript 的诟病！\n\n[官方文档](https://www.typescriptlang.org/docs/handbook/generics.html)\n"},{"title":"docker-compose入门","date":"2020-10-21","category":"Docker","content":"\n### 什么是 docker-compose\n\n通俗的说，docker-compose 正如其名，是将你的多个 docker 容器服务整合起来的命令行工具。举个例子，假设你有一个 MySQL 实例和一个 Node.js 实例分别部署在两个容器中，仅需一个`docker-compose.yml`文件，docker-compose 就可以为你完成从打包到运行的所有步骤，并如果你还在苦恼手动执行各种`docker run []` 命令，这份指南可能能够帮上你。\n\n#### 安装\n\n> 如果你是在本地开发环境中使用 docker-compose，你不需要安装任何的依赖项，Docker for Windows 和 Docker for Mac 都已经内置了 docker-compose 的包\n\n在 Linux based 服务器上安装:\n\n- 在 terminal 中运行\n  `` sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m`-o /usr/local/bin/docker-compose `` 下载 docker-compose 的安装脚本\n- 为脚本添加执行权限`sudo chmod +x /usr/local/bin/docker-compose`\n- 执行脚本`sh /usr/local/bin/docker-compose`\n\n#### 容器编排\n\ndocker-compose 使用目录下的`docker-compose.yml` 作为项目的配置文件， 以上述我们举的 MySQL 和 Node.js 应用的例子\n`docker-compose.yml` 文件应该具有类似以下的结构:\n\n> 你可以在[Github](https://github.com/serializedowen/docker-compose-tutorial)上克隆和运行下文中的示例\n\n```yml\nservices:\n  mysql:\n    image: mysql:latest\n    ports:\n      - '3306:3306'\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: '123456'\n\n  webapp:\n    build: .\n    container_name: webapp\n    restart: always\n    depends_on:\n      - 'mysql'\n    environment:\n      NODE_ENV: 'production'\n    ports:\n      - '80:8080'\n```\n\n看不懂是很正常的，下面我们来一条一条详细剖析每个配置项是什么意思\n\n- `services` 表示该集合下包含的所有服务，在这个例子中我们有 mysql 和 webapp 两个服务\n- `image` 表示从官方维护的 mysql 镜像构建我们的容器\n- `port` 表示将 docker 宿主机的 3306 端口映射 docker 容器的 3306 端口上，这样我们就能在宿主上通过 localhost:3306 连接到我们的 mysql 数据库\n\n- webapp\n  - `build`: 表示 docker 从哪个文件夹开始构建镜像\n  - `container_name`: 容器名字\n  - `restart`: 表示 Dockerfile 中的 CMD 命令返回任何非 0 的状态时都将重启容器\n  - `depends_on`: 容器的依赖。在这里，webapp 容器会保证在 mysql 容器之后启动。\n  - `environment`: 需要注入的 unix 环境变量，供容器使用。\n\n> 注意：services 下的所有服务会共享同一个 docker network，这意味着你可以再 webapp 容器中通过 mysql:3306 访问到 mysql 服务，在 mysql 容器中通过 webapp:8080 访问到我们的 express 服务端， 更加详细的 networks 配置请查阅 [Networking in Compose](https://docs.docker.com/compose/networking/)\n\n> depends_on 仅仅保证容器的执行顺序，而不保证你的应用已经在可用的状态（不管可用的状态对于你的应用意味着什么）。docker 这样设计是经过了周密考虑的：为了保证应用的健壮性，你应该自行定义在容器之间服务连接错误时候的重试/重启机制。\n\n1. 接下来，你仅需要在项目目录下运行`docker-compose up` 即可看到 docker 开始构建镜像并启动服务\n2. 如果需要以后台守护进程模式启动 使用`docker-compose up -d`\n3. 用`docker-compose down`来停止运行中的容器\n4. `docker-compose build`重新构建容器\n\n运行成功后，访问http://localhost 可以看到 express 服务器的 hello world 示例，http://localhost/mysql 可以检查 mysql 连接状态\n\ndocker 官网提供的其他示例：\n\n- [Wordpress](https://docs.docker.com/compose/wordpress/)\n- [Rails](https://docs.docker.com/compose/rails/)\n- [Django](https://docs.docker.com/compose/django/)\n\n完整的配置项文档请移步[docker 官网文档](https://docs.docker.com/compose/compose-file)\n\n[原文链接](serializedowen.com/docker-compose入门)\n"},{"title":"使用lerna来管理你的npm包","date":"2020-12-09","category":"JavaScript","content":"\n### 前言\n\n相信很多同学都遇到过一个问题：随着 js 项目越来越大，许多公用的功能与组件往往会被拆分，打包，发布成为单独的 npm 包来使用，而在此过程中，往往会遇到不少问题：\n\n1. 如需修改拆分的包往往会需要`npm link`或者`git submodule`，适用性和观感很差\n2. `commit log`分散在各个仓库中，问题溯源成本大大提升\n3. 包发布需要去各个仓库操作，相当繁琐\n4. 最常用的包改动后会影响大量依赖此包的项目，（ps 改动 package.json 等），有时候还有会遗漏\n\n这时候，聪明的同学就会想到，我们把所有的代码全部移到一个仓库里去不就好了吗？是的，程序员的力量是无穷的，业界已经为我们提供了相当成熟的解决方案，那就是用: [lerna](https://lerna.js.org/) 来管理你的仓库\n\n> 有阅读源码习惯的同学可能已经对 lerna 不再陌生，例如 react，vue 等等大型项目都已经在开发环境中使用 lerna 来管理 npm 包\n\n<br/>\n\n### 什么是 lerna\n\nLerna 是一种工具，可以优化使用 git 和 npm 管理多包仓库的工作流程。\n\n> 将大型代码库分成单独的独立版本化的软件包对于代码共享非常有用。但是，跨仓库进行更改很麻烦且难以跟踪，并且跨仓库的测试变得非常复杂。为了解决这些（以及许多其他）问题，某些项目会将其代码库组织到多包存储库中。Babel，React，Angular，Ember，Meteor，Jest 等项目以及许多其他项目都在单个仓库中开发了所有软件包。\n> <br/>\n\n### 安装\n\n首先全局安装 lerna\n\n```\nnpm install --global lerna\n```\n\n<br/>\n\n### 初始化\n\n接下来新建一个 git 仓库\n\n```\nmkdir my-new-monorepo && cd my-new-monorepo\n```\n\n初始化 lerna 和 git\n\n```\nlerna init\ngit init\n```\n\n进行完这个步骤后，仓库应该大致长这样：\n\n```\nmy-new-monorepo/\n  package.json\n  lerna.json\n  packages/\n    package-1/\n      package.json\n    package-2/\n      package.json\n```\n\n接下来，就是见证奇迹的时刻，你只需要根据你的每个子项目分别运行\n\n```\nlerna import ~/path/to/your/subproject\n\n```\n\n剩下的都由 lerna 来为你搞定！包括迁移代码，迁移 git 提交日志，将他们移动到 packages/目录下，并修改`lerna.json`\n\n仓库添加完毕之后运行 `lerna bootstrap` 来安装项目依赖\n<br/>\n\n### lerna 的命令\n\n- `lerna init`: 如其名\n- `lerna bootstrap`: 初始化仓库中的所有 package，包括安装依赖，运行 preinstall，postinstall script 等等\n- `lerna import`： 导入一个本地存在的仓库成为一个新的 package\n- `lerna add [package]`：添加所有子项目都可用的共同依赖\n- `lerna publish`：打包发布所有的 package\n  - 选项：`--npm-tag [tagname]` 用指定的 npm tag 发布包，默认为 latest\n  - `--canary 或 -c` 发布一个 canary(测试)版本\n  - `--skip-git` 不执行任何 git 命令\n  - `--force-publish [packages]` 强制发布数组中列举的 package，用逗号分割，或者`*`来发布所有包\n- `lerna changed` 查看和上次发布相比哪些 package 产生了改动\n- `lerna ls` 列举该仓库中所有公开可见的 package\n- `lerna run [script]` 等同于在所有 package 中运行`npm run [script]`，前提是该 script 存在\n  <br/>\n\n### lerna.json 配置\n\n- version: 当前 npm 包的版本\n- npmClient: 默认是 \"npm\".\n- command.publish.ignoreChanges: 在运行`lerna changed`和`lerna publish`时会被忽略的 glob 匹配项，用来防止因为修改例如`README.md`后生成一个新版本\n- command.publish.message: 一个在发布新版本时会作为前缀添加到 commit 消息的配置项\n- command.publish.registry: 指定发布到的 npm 源\n- command.bootstrap.ignore: 一个记录 bootstrap 过程中哪些 package 会被忽略的 glob 匹配项数组\n- command.bootstrap.npmClientArgs: 会作为参数传给 npm 客户端, 例如`--no-package-lock`\n- packages: lerna 用来标注 package 的 glob 匹配项数组， 默认为`packages/*`\n  <br/>\n\n### 懒癌患者的救星\n\n如果你觉得记得这么多的配置项和命令实在太难了，[lerna-wizard](https://github.com/webuniverseio/lerna-wizard)就是你的救星。且看 demo：\n\n![](./demo.gif)\n\n<br/>\n\n### 潜在问题/缺陷\n\n- 为项目添加了一层额外的复杂度，开发者需要了解 monorepo 的概念和 lerna 的使用\n- 没有一个可用的 dry-run 选项，无法在不往 npm 发布包的情况下测试整个 publish 流程\n- 定义不同 npm 包之间公用的生命周期脚本比较困难\n- 仅改动一小部分代码也需要克隆整个 monorepo 和安装所有依赖\n"},{"title":"Count number of 1s","date":"2020-09-17","category":"Algorithms","content":"\nCount occurence of number 1s from 1 to an upperbound number\n\n### Question\n\n```js\nsum1s(400)\n// -> return 180\n```\n\n### Solution\n\n```js\nconst sum1s = num => {\n  let numstr\n  if (!num) return 0\n  if (typeof num === 'string') numstr = num\n  else numstr = String(num)\n\n  if (Number(numstr) === 0) return 0\n\n  const curr =\n    numstr[0] > 1\n      ? 10 ** (numstr.length - 1) +\n        numstr[0] * (numstr.length - 1) * 10 ** (numstr.length - 2)\n      : sum1s(10 ** (numstr.length - 1) - 1) + 1\n\n  return curr + sum1s(numstr.substr(1))\n}\n```\n"},{"title":"Code transformation","date":"2020-09-14","category":"Algorithms","content":"\n### target\n\n```js\nconst entry = {\n  'a.b.c.dd': 'abcdd',\n  'a.d.xx': 'adxx',\n  'a.e': 'ae'\n}\n\n// 要求转换成如下对象\nconst output = {\n  a: {\n    b: {\n      c: {\n        dd: 'abcdd'\n      }\n    },\n    d: {\n      xx: 'adxx'\n    },\n    e: 'ae'\n  }\n}\n```\n\n### answer\n\n```typescript\nconst transform = (input: { [P in string]: string }): Object => {\n  const ret = {}\n  Object.entries(input).forEach(([keys, val]) => {\n    let root = ret\n    keys.split('.').forEach((key, ind, arr) => {\n      if (ind === arr.length - 1) root[key] = val\n      else {\n        root[key] = root[key] || {}\n        root = root[key]\n      }\n    })\n  })\n  return ret\n}\n```\n"},{"title":"Get tree ancestor ids","date":"2020-09-15","category":"Algorithms","content":"\n<script>\nconst data = [\n  {\n    id: 1,\n    name: '222',\n    children: [\n      {\n        id: 2,\n        name: '34',\n        children: [\n          {\n            id: 112,\n            name: '334'\n          },\n          {\n            id: 113,\n            name: '354'\n          }\n        ]\n      }\n    ]\n  }\n]\n\nconst fn = (id, ancestors = [], current = data) => {\n  for (let i = 0; i < current.length; i++) {\n    if (current[i].id === id) return ancestors.concat(id)\n    if (current[i].children && current[i].children.length) {\n      const ret = fn(id, ancestors.concat(current[i].id), current[i].children)\n      if (ret) return ret\n    }\n  }\n}\n\nconsole.log(fn(112))\n</script>\n\n```js\nconst data = [\n  {\n    id: 1,\n    name: '222',\n    children: [\n      {\n        id: 2,\n        name: '34',\n        children: [\n          {\n            id: 112,\n            name: '334'\n          },\n          {\n            id: 113,\n            name: '354'\n          }\n        ]\n      }\n    ]\n  }\n]\n\nfunction fn(id) {}\n\n// 输出  [1, 2, 112]\nconsole.log(fn(112))\n```\n\n### answer\n\n```js\nconst fn = (id, ancestors = [], current = data) => {\n  for (let i = 0; i < current.length; i++) {\n    if (current[i].id === id) return ancestors.concat(id)\n    if (current[i].children && current[i].children.length) {\n      const ret = fn(id, ancestors.concat(current[i].id), current[i].children)\n      if (ret) return ret\n    }\n  }\n}\n```\n"},{"title":"Palindrome with length limit","date":"2020-09-16","category":"Algorithms","content":"\n### Question\n\nprint all digit formed palindrome within length limit\n\n```js\npalindrome(2)\n-> [ '11', '22', '33', '44', '55', '66', '77', '88', '99']\n```\n\n### Solution\n\n```js\nconst palindrome = length => {\n  const res = []\n  const digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n\n  const add = (current, length) => {\n    if (length <= 1) return\n    digits.forEach(digit => {\n      res.push(digit + current + digit)\n      add(digit + current + digit, length - 2)\n    })\n  }\n  digits.forEach(num => {\n    add(num, length - 1)\n    res.push(num + num)\n    add(num + num, length - 2)\n  })\n  return res.filter(num => !num.startsWith('0'))\n}\n```\n"},{"title":"How I cut GTA Online loading times by 70%","date":"2021-03-02","category":"Game","content":"\n[原文链接](https://nee.lv/2021/02/28/How-I-cut-GTA-Online-loading-times-by-70/)\n\nGTA Online. Infamous for its slow loading times. Having picked up the game again to finish some of the newer heists I was shocked (/s) to discover that it still loads just as slow as the day it was released 7 years ago.\n\nIt was time. Time to get to the bottom of this.\n\n## Recon\n\nFirst I wanted to check if someone had already solved this problem. Most of the results I found pointed towards anecdata about how the game is so sophisticated that it needs to load so long, stories on how the p2p network architecture is rubbish (not saying that it isn’t), some elaborate ways of loading into story mode and a solo session after that and a couple of mods that allowed skipping the startup R\\* logo video. Some more reading told me we could save a whopping 10-30 seconds with these combined!\n\nMeanwhile on my PC…\n\n## Benchmark\n\n```sh\n\n2\n3\n4\n5\n6\n7\n8\nStory mode load time:  ~1m 10s\nOnline mode load time: ~6m flat\nStartup menu disabled, time from R* logo until in-game (social club login time isn't counted).\n\nOld but decent CPU:   AMD FX-8350\nCheap-o SSD:          KINGSTON SA400S37120G\nWe have to have RAM:  2x Kingston 8192 MB (DDR3-1337) 99U5471\nGood-ish GPU:         NVIDIA GeForce GTX 1070\n```\n\nI know my setup is dated but what on earth could take 6x longer to load into online mode? I couldn’t measure any difference using the story-to-online loading technique as others have found before me. Even if it did work the results would be down in the noise.\n\n## I am (Not) Alone\n\nIf this poll is to be trusted then the issue is widespread enough to mildly annoy more than 80% of the player base. It’s been 7 years R\\*!\n![](./0.png)\nLooking around a bit to find who are the lucky ~20% that get sub 3 minute load times I came across a few benchmarks with high-end gaming PCs and an online mode load time of about 2 minutes. I would kill hack for a 2 minute load time! It does seem to be hardware-dependent but something doesn’t add up here…\n\nHow come their story mode still takes near a minute to load? (The M.2 one didn’t count the startup logos btw.) Also, loading story to online takes them only a minute more while I’m getting about five more. I know that their hardware specs are a lot better but surely not 5x better.\n\n## Highly accurate measurements\n\nArmed with such powerful tools as the Task Manager I began to investigate what resources could be the bottleneck.\n![](./1.png)\nAfter taking a minute to load the common resources used for both story and online modes (which is near on par with high-end PCs) GTA decides to max out a single core on my machine for four minutes and do nothing else.\n\nDisk usage? None! Network usage? There’s a bit, but it drops basically to zero after a few seconds (apart from loading the rotating info banners). GPU usage? Zero. Memory usage? Completely flat…\n\nWhat, is it mining crypto or something? I smell code. Really bad code.\n\n## Single thread-bound\n\nWhile my old AMD CPU has 8 cores and it does pack a punch, it was made in the olden days. Back when AMD’s single-thread performance was way behind Intel’s. This might not explain all of the load time differences but it should explain most of it.\n\nWhat’s odd is that it’s using up just the CPU. I was expecting vast amounts of disk reads loading up resources or loads of network requests trying to negotiate a session in the p2p network. But this? This is probably a bug.\n\n## Profiling\n\nProfilers are a great way of finding CPU bottlenecks. There’s only one problem - most of them rely on instrumenting the source code to get a perfect picture of what’s happening in the process. And I don’t have the source code. Nor do I need microsecond-perfect readings - I have 4 minutes’ worth of a bottleneck.\n\nEnter stack sampling: for closed source applications there’s only one option. Dump the running process’ stack and current instruction pointer’s location to build a calling tree in set intervals. Then add them up to get statistics on what’s going on. There’s only one profiler that I know of (might be ignorant here) that can do this on Windows. And it hasn’t been updated in over 10 years. It’s Luke Stackwalker! Someone, please give this project some love :)\n![](./2.png)\n\nNormally Luke would group the same functions together but since I don’t have debugging symbols I had to eyeball nearby addresses to guess if it’s the same place. And what do we see? Not one bottleneck but two of them!\n\n## Down the rabbit hole\n\nHaving borrowed my friend’s completely legitimate copy of the industry-standard disassembler (no, I really can’t afford the thing… gonna learn to ghidra one of these days) I went to take GTA apart.\n\n![](./3.png)\n\nThat doesn’t look right at all. Most high-profile games come with built-in protection against reverse engineering to keep away pirates, cheaters, and modders. Not that it has ever stopped them.\n\nThere seems to be some sort of an obfuscation/encryption at play here that has replaced most instructions with gibberish. Not to worry, we simply need to dump the game’s memory while it’s executing the part we want to look at. The instructions have to be de-obfuscated before running one way or another. I had Process Dump lying around, so I used that, but there are plenty of other tools available to do this sort of thing.\n\n## Problem one: It’s… strlen?!\n\nDisassembling the now-less-obfuscated dump reveals that one of the addresses has a label pulled out of somewhere! It’s strlen? Going down the call stack the next one is labeled vscan_fn and after that the labels end, tho I’m fairly confident it’s sscanf.\n![](./4.png)\nIt’s parsing something. Parsing what? Untangling the disassembly would take forever so I decided to dump some samples from the running process using x64dbg. Some debug-stepping later it turns out it’s… JSON! They’re parsing JSON. A whopping 10 megabytes worth of JSON with some 63k item entries.\n\n```json\n{\n    \"key\": \"WP_WCT_TINT_21_t2_v9_n2\",\n    \"price\": 45000,\n    \"statName\": \"CHAR_KIT_FM_PURCHASE20\",\n    \"storageType\": \"BITFIELD\",\n    \"bitShift\": 7,\n    \"bitSize\": 1,\n    \"category\": [\"CATEGORY_WEAPON_MOD\"]\n},\n\n```\n\nWhat is it? It appears to be data for a “net shop catalog” according to some references. I assume it contains a list of all the possible items and upgrades you can buy in GTA Online.\n\nClearing up some confusion: I beleive these are in-game money purchasable items, not directly linked with microtransactions.\n\nBut 10 megs? That’s nothing! And using sscanf may not be optimal but surely it’s not that bad? Well…\n\n![](./5.png)\n\nYeah, that’s gonna take a while… To be fair I had no idea most sscanf implementations called strlen so I can’t blame the developer who wrote this. I would assume it just scanned byte by byte and could stop on a NULL.\n\n## Problem two: Let’s use a Hash- … Array?\n\nTurns out the second offender is called right next to the first one. They’re both even called in the same if statement as seen in this ugly decompilation:\n\n![](./6.png)\n\nAll labels are mine, no idea what the functions/parameters are actually called.\n\nThe second problem? Right after parsing an item, it’s stored in an array (or an inlined C++ list? not sure). Each entry looks something like this:\n\n```c\n\nstruct {\n    uint64_t *hash;\n    item_t   *item;\n} entry;\n```\n\nBut before it’s stored? It checks the entire array, one by one, comparing the hash of the item to see if it’s in the list or not. With ~63k entries that’s (n^2+n)/2 = (63000^2+63000)/2 = 1984531500 checks if my math is right. Most of them useless. You have unique hashes why not use a hash map.\n\n![](./7.png)\n\nI named it hashmap while reversing but it’s clearly not_a_hashmap. And it gets even better. The hash-array-list-thing is empty before loading the JSON. And all of the items in the JSON are unique! They don’t even need to check if it’s in the list or not! They even have a function to directly insert the items! Just use that! Srsly, WAT!?\n\n## PoC\n\nNow that’s nice and all, but no one is going to take me seriously unless I test this so I can write a clickbait title for the post.\n\nThe plan? Write a .dll, inject it in GTA, hook some functions, ???, profit.\n\nThe JSON problem is hairy, I can’t realistically replace their parser. Replacing sscanf with one that doesn’t depend on strlen would be more realistic. But there’s an even easier way.\n\n- hook strlen\n- wait for a long string\n- “cache” the start and length of it\n- if it’s called again within the string’s range, return cached value\n\nSomething like:\n\n```c\nsize_t strlen_cacher(char* str)\n{\n  static char* start;\n  static char* end;\n  size_t len;\n  const size_t cap = 20000;\n\n  // if we have a \"cached\" string and current pointer is within it\n  if (start && str >= start && str <= end) {\n    // calculate the new strlen\n    len = end - str;\n\n    // if we're near the end, unload self\n    // we don't want to mess something else up\n    if (len < cap / 2)\n      MH_DisableHook((LPVOID)strlen_addr);\n\n    // super-fast return!\n    return len;\n  }\n\n  // count the actual length\n  // we need at least one measurement of the large JSON\n  // or normal strlen for other strings\n  len = builtin_strlen(str);\n\n  // if it was the really long string\n  // save it's start and end addresses\n  if (len > cap) {\n    start = str;\n    end = str + len;\n  }\n\n  // slow, boring return\n  return len;\n}\n\n\n```\n\nAnd as for the hash-array problem, it’s more straightforward - just skip the duplicate checks entirely and insert the items directly since we know the values are unique.\n\n```c\n\nchar __fastcall netcat_insert_dedupe_hooked(uint64_t catalog, uint64_t* key, uint64_t* item)\n{\n  // didn't bother reversing the structure\n  uint64_t not_a_hashmap = catalog + 88;\n\n  // no idea what this does, but repeat what the original did\n  if (!(*(uint8_t(__fastcall**)(uint64_t*))(*item + 48))(item))\n    return 0;\n\n  // insert directly\n  netcat_insert_direct(not_a_hashmap, key, &item);\n\n  // remove hooks when the last item's hash is hit\n  // and unload the .dll, we are done here :)\n  if (*key == 0x7FFFD6BE) {\n    MH_DisableHook((LPVOID)netcat_insert_dedupe_addr);\n    unload();\n  }\n\n  return 1;\n}\n\n\n```\n\n## Results\n\nWell, did it work then?\n\n```sh\n\nOriginal online mode load time:        ~6m flat\nTime with only duplication check patch: 4m 30s\nTime with only JSON parser patch:       2m 50s\nTime with both issues patched:          1m 50s\n\n(6*60 - (1*60+50)) / (6*60) = 69.4% load time improvement (nice!)\n\n```\n\nHell yes, it did! :))\n\nMost likely, this won’t solve everyone’s load times - there might be other bottlenecks on different systems, but it’s such a gaping hole that I have no idea how R\\* has missed it all these years.\n\n## tl;dr\n\n- There’s a single thread CPU bottleneck while starting up GTA Online\n- It turns out GTA struggles to parse a 10MB JSON file\n- The JSON parser itself is poorly built / naive and\n- After parsing there’s a slow item de-duplication routine\n\n## R\\* please fix\n\nIf this somehow reaches Rockstar: the problems shouldn’t take more than a day for a single dev to solve. Please do something about it :<\n\nYou could either switch to a hashmap for the de-duplication or completely skip it on startup as a faster fix. For the JSON parser - just swap out the library for a more performant one. I don’t think there’s any easier way out.\n\nty <3\n\n## Small update\n\nI was expecting to get some attention but nowhere near this much! After reaching the top of HN this post has spread like wildfire! Thank you for the overwhelming response :)\n\nI’ll do more writing if something interesting comes along, but don’t expect anything of this scale soon - there was a lot of luck involved.\n\nA few people suggested spamming this post to Rockstar’s support - please don’t! I’m sure they’ve seen this by now. Continuing would only bog down support tickets for everyone else. Social media is fair game in my book tho.\n\nSeveral HN comments suggested I add a donate button, as they would like to buy me a beer (thank you!) so I’m placing a link in the footer.\n\nThank you for reading and all the support :)\n"},{"title":"Frontend watermarking images.","date":"2020-09-08","category":"Packages","content":"\n# vue-img-watermark\n\n## Demo\n\nhttp://serializedowen.github.io/vue-img-watermark/\n\n## Installation\n\n```sh\nnpm install --save @serializedowen/vue-img-watermark\n```\n\n```\nyarn add @serializedowen/vue-img-watermark\n```\n\n## Usage\n\n```js\nimport plugin from '@serializedowen/vue-img-watermark'\n\nVue.use(plugin)\n```\n\n```html\n<img src=\"xxx\" v-watermark />\n```\n\n- put `v-watermark` on your `<img>` tag to generate watermark for your image\n- fully customizable with configuration object.\n  - use `setScopedConfig()` in `beforeCreate` hook in your vue component to scope configuration to that particular vue component\n  - use `v-watermark={{config: OptionConfig}}` to customize watermark behavior\n  - The order of precedance will be directive value > component scoped options > global options\n- register your custom rendering strategy with `registerCustomStrategy()` which you can later on use with `{mode: name of your strategy}` :grinning:\n\n## Known Issues:\n\n- [x] currently `canvas.drawImage()` has to be wrapped in a `setTimeout()` call to work, reason to be identified.\n"},{"title":"ph-logo-generator","date":"2020-09-08","category":"Packages","content":"\nPornhub flavored logo generator.\n\nDemo available at [Click Me!](https://serializedowen.github.io/pornhub-styled-logo-generator/)\n\n<iframe src=\"/pornhub-styled-logo-generator/\" width=\"100%\" height=\"500px\" frameborder=\"0\">\n"},{"title":"Love Dispatcher w/ secrets","date":"2020-05-20","category":"Packages","content":"\ncrack your way through the game\n\n<iframe src=\"/love-dispatcher/\" width=\"100%\" height=\"700px\" frameborder=\"0\"></iframe>\n"},{"title":"Hot reload .env files","date":"2020-09-08","category":"Packages","content":"\n# vue-cli-plugin-envhot\n\nSeamlessly add .env file hot reloading support for your vue-cli based projects. Never worry about rebooting webpack-dev-server again.\n\n## Features & Tips\n\n1. Reference [Here](https://cli.vuejs.org/guide/mode-and-env.html) for usage of .env file.\n1. Modify .env files in runtime and have it dynamically injected into your application\n1. Support modification, addtion, deletion of field in .env files\n1. Only works in development mode. In production mode you won't need hot reload anyway.\n1. Priority of file is `[\".env.development.local\", \".env.development\", \".env.local\", \".env\"]`, i.e., value with same key defined in '.env.local' will overwrite value defined in '.env'\n\n## Installation\n\n```bash\nyarn add vue-cli-plugin-envhot\n```\n\nOR\n\n```bash\nnpm install -S vue-cli-plugin-envhot\n```\n"},{"title":"CSS Sticky Balls","date":"2019-08-21","category":"CSS Tricks","content":"\n<div class=\"effect\">\n  <div class=\"ball1\"></div>\n  <div class=\"ball2\"></div>\n</div>\n\n<style>\n  .ball1 {\n    width: 80px;\n    height: 80px;\n    background: linear-gradient( 45deg,#4c001f,#b20049 );\n    padding: 10px;\n    border-radius: 50%;\n    position: absolute;\n\n    left: 0;\n\n    filter: blur(1px);\n    animation: bball1 6s infinite;\n  }\n  .ball2 {\n    width: 80px;\n    height: 80px;\n    background: linear-gradient( 45deg,#4c001f,#b20049 );\n    padding: 10px;\n    border-radius: 50%;\n    position: absolute;\n\n    left: 240px;\n\n    filter: blur(1px);\n    animation: bball2 6s infinite;\n  }\n  @keyframes bball1 {\n    0%,\n    100% {\n      left: 0;\n\n      width: 80px;\n      height: 80px;\n    }\n    20% {\n\n      width: 80px;\n      height: 80px;\n    }\n    85% {\n\n      left: 75px;\n      width: 90px;\n      height: 70px;\n    }\n    90% {\n\n      width: 75px;\n      height: 85px;\n    }\n    50% {\n\n      left: 110px;\n      width: 110px;\n      height: 110px;\n    }\n  }\n  @keyframes bball2 {\n    0%,\n    100% {\n      left: 240px;\n\n      width: 80px;\n      height: 80px;\n    }\n    20% {\n\n      width: 80px;\n      height: 80px;\n    }\n    85% {\n\n      left: 165px;\n      width: 90px;\n      height: 70px;\n    }\n    90% {\n\n      width: 75px;\n      height: 85px;\n    }\n    50% {\n      left: 110px;\n\n      width: 110px;\n      height: 110px;\n    }\n  }\n  .effect {\n    position: relative;\n    height: 200px;\n    background: #fff;\n  }\n</style>\n\n```html\n<div class=\"effect\">\n  <div class=\"ball1\"></div>\n  <div class=\"ball2\"></div>\n</div>\n\n<style>\n  .ball1 {\n    width: 80px;\n    height: 80px;\n    background: linear-gradient(45deg, #4c001f, #b20049);\n    padding: 10px;\n    border-radius: 50%;\n    position: absolute;\n\n    left: 0;\n\n    filter: blur(1px);\n    animation: bball1 6s infinite;\n  }\n  .ball2 {\n    width: 80px;\n    height: 80px;\n    background: linear-gradient(45deg, #4c001f, #b20049);\n    padding: 10px;\n    border-radius: 50%;\n    position: absolute;\n\n    left: 240px;\n\n    filter: blur(1px);\n    animation: bball2 6s infinite;\n  }\n  @keyframes bball1 {\n    0%,\n    100% {\n      left: 0;\n\n      width: 80px;\n      height: 80px;\n    }\n    20% {\n      width: 80px;\n      height: 80px;\n    }\n    85% {\n      left: 75px;\n      width: 90px;\n      height: 70px;\n    }\n    90% {\n      width: 75px;\n      height: 85px;\n    }\n    50% {\n      left: 110px;\n      width: 110px;\n      height: 110px;\n    }\n  }\n  @keyframes bball2 {\n    0%,\n    100% {\n      left: 240px;\n\n      width: 80px;\n      height: 80px;\n    }\n    20% {\n      width: 80px;\n      height: 80px;\n    }\n    85% {\n      left: 165px;\n      width: 90px;\n      height: 70px;\n    }\n    90% {\n      width: 75px;\n      height: 85px;\n    }\n    50% {\n      left: 110px;\n\n      width: 110px;\n      height: 110px;\n    }\n  }\n  .effect {\n    position: relative;\n    height: 200px;\n    background: #fff;\n  }\n</style>\n```\n"},{"title":"Test","date":"2018-12-25","category":"CSS Tricks","content":"\nUse table layout to force\n\nZwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich. Falsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim.\n\nSylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich. Falsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich.\n\n## Zwei flinke Boxer\n\nFalsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark.\n\n> \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich. Falsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern.\n\nZwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich. Falsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß.\n\nZwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich. Falsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß.\n\nSylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich. Falsches Üben von Xylophonmusik quält jeden größeren Zwerg. Heizölrückstoßabdämpfung. Zwei flinke Boxer jagen die quirlige Eva und ihren Mops durch Sylt. Franz jagt im komplett verwahrlosten Taxi quer durch Bayern. Zwölf Boxkämpfer jagen Viktor quer über den großen Sylter Deich. Vogel Quax zwickt Johnys Pferd Bim. Sylvia wagt quick den Jux bei Pforzheim. Polyfon zwitschernd aßen Mäxchens Vögel Rüben, Joghurt und Quark. \"Fix, Schwyz! \" quäkt Jürgen blöd vom Paß. Victor jagt zwölf Boxkämpfer quer über den großen Sylter Deich.\n"},{"title":"Ice skiing","date":"2018-12-29","category":"Trips","cover":"./IMG_1953.jpg","content":"\nBeen looking forward to this Blue Mountain skiing trip for a while. Beautiful weather, lovely hotel, life doesnt get any better than this... Right?\n![](./IMG_1947.JPG)\n\n## Until\n\nAfter about an hour waiting in line for our skiing equipment, we are finally ready to go. Holy cow I didn't expect skiing to be this hard. The gentlemen I asked said lift will take me straight to newbie area :flushed:. The view on lift was nice, but the other end of lift was expert lanes with about 40 degree descent.\n\n## The ride\n\nI lost count of how many times I fall over spinning on the track. During two of these I even lost my poles, if it wasn't for the riders behind me passing me my poles I don't know how else am I going to make it to the bottom :sweat:. I'm sure these 30 minutes will be my life time memory :(\n"},{"title":"polyfilling globalThis","date":"2020-09-15","category":"ECMA Standards","content":"\n### 定义\n\nglobalThis 提案引入了一种在任何 JavaScript 环境中访问全局变量的机制。听起来似乎是个很简单的 polyfill，但实际上实施起来我们遇到了诸多困难。\n\n根据[tc39 提案](https://github.com/tc39/proposal-global)一个正确的 polyfill 应该具有以下几点要求：\n\n1. 必须在任何 JavaScript 环境下工作，包括浏览器，浏览器 web worker，浏览器插件，Node.js，Deno，和各种 js 引擎实现\n2. 必须支持粗糙模式，严格模式，以及 js 模块\n3. 在任何执行上下文内都可用（换言之，即使在构建是被包裹在严格模式的方法中依然能保证可用）\n\n   <svg viewBox=\"0 0 843 524\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><clipPath id=\"a\"><path d=\"m-24 0h960v540h-960z\"/></clipPath><g clip-path=\"url(#a)\"><path clip-rule=\"evenodd\" d=\"m-24 0h960v540h-960z\" fill=\"#fff\" fill-rule=\"evenodd\"/><path clip-rule=\"evenodd\" d=\"m6.5 86.7h827.8v428.6h-827.8z\" fill=\"#fcca46\" fill-rule=\"evenodd\"/><path d=\"m6.5 86.7h827.8v428.6h-827.8z\" fill=\"none\" stroke=\"#b45f06\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m600.4 501c0 .6.4 1 1.1 1.4.7.3 1.7.5 3 .5s2.3-.2 3.1-.6 1.2-.8 1.2-1.4c0-.5-.2-.8-.7-1s-1.2-.2-2.1-.2h-3.4c-.4 0-.7-.1-1-.1-.4.2-.7.5-.9.7-.2.1-.3.4-.3.7zm-3.8.7c0-1.3.8-2.4 2.5-3.2v-.1c-.4-.3-.8-.6-1.1-1s-.5-1-.5-1.7c0-.5.2-1.1.5-1.6.4-.5.8-1 1.4-1.4v-.1c-.6-.4-1.1-.9-1.5-1.6s-.6-1.5-.6-2.5.2-1.8.5-2.5c.4-.7.9-1.3 1.5-1.8s1.3-.8 2.2-1.1c.8-.2 1.7-.4 2.6-.4 1 0 1.9.1 2.6.4h6.4v3.4h-3.2c.2.2.4.5.5.9.2.4.2.8.2 1.2 0 .9-.2 1.7-.5 2.4s-.8 1.2-1.4 1.6-1.3.8-2.1 1-1.6.3-2.6.3c-.7 0-1.4-.1-2.2-.3-.2.2-.4.3-.5.5s-.2.4-.2.6c0 .4.2.7.6.9s1.1.3 2 .3h3c2.1 0 3.7.3 4.8.9s1.6 1.6 1.6 3.1c0 .8-.2 1.6-.7 2.3-.4.7-1.1 1.3-1.9 1.8s-1.8.9-3 1.2-2.5.4-3.9.4c-1 0-2-.1-2.9-.2-.9-.2-1.7-.4-2.3-.7s-1.1-.7-1.5-1.2c-.1-.5-.3-1.1-.3-1.8zm7.4-10.5c.7 0 1.2-.2 1.7-.7s.7-1.1.7-2-.2-1.5-.7-1.9-1-.7-1.7-.7-1.2.2-1.7.7-.7 1.1-.7 1.9c0 .9.2 1.5.7 2s1.1.7 1.7.7zm12.1-14.6h9.3v16.4c0 .5.1.9.2 1.2s.3.6.6.8c.2.2.5.3.8.4s.6.1 1 .1.7 0 1.1-.1.9-.2 1.4-.4l1 3.5c-.4.1-.8.3-1.2.4s-.7.2-1.1.3-.8.1-1.2.2-.9.1-1.3.1c-2 0-3.5-.6-4.5-1.8s-1.5-2.8-1.5-4.8v-12.5h-4.6zm18.7 14.5c0-1.3.2-2.5.7-3.5.4-1 1.1-1.9 1.8-2.6.8-.7 1.6-1.2 2.6-1.6s2-.6 3-.6c1.1 0 2.1.2 3 .6 1 .4 1.8.9 2.6 1.6s1.4 1.6 1.8 2.6.7 2.2.7 3.5-.2 2.5-.7 3.5c-.4 1-1.1 1.9-1.8 2.6-.8.7-1.6 1.2-2.6 1.6s-2 .6-3 .6-2-.2-3-.6-1.8-.9-2.6-1.6-1.4-1.6-1.8-2.6c-.5-1-.7-2.2-.7-3.5zm4.9 0c0 1.4.3 2.5.8 3.3s1.4 1.2 2.4 1.2c1.1 0 1.9-.4 2.5-1.2.5-.8.8-1.9.8-3.3s-.3-2.5-.8-3.3-1.4-1.2-2.5-1.2-1.9.4-2.4 1.2c-.6.8-.8 1.9-.8 3.3zm15.1-14.5h4.7v5.5l-.1 2.5c.6-.6 1.3-1 2.1-1.3s1.6-.5 2.3-.5c1 0 1.9.2 2.7.6s1.5.9 2 1.6 1 1.5 1.3 2.5.5 2.1.5 3.3c0 1.4-.2 2.6-.6 3.7s-.9 2-1.5 2.7-1.4 1.3-2.2 1.7-1.7.6-2.6.6c-.7 0-1.5-.2-2.2-.5-.7-.4-1.4-.9-2.1-1.6h-.1l-.4 1.7h-3.7v-22.5zm4.7 17.9c.4.4.9.7 1.4.8.5.2.9.2 1.4.2.9 0 1.6-.4 2.2-1.1s.9-1.9.9-3.6c0-2.9-1-4.3-2.9-4.3-1 0-2 .5-2.9 1.5v6.5zm14.2.1c0-.9.2-1.7.6-2.3.4-.7 1-1.2 1.8-1.7s1.9-.8 3.2-1.1 2.9-.5 4.8-.6c-.1-.7-.4-1.3-1-1.7-.5-.4-1.4-.6-2.4-.6-.8 0-1.5.1-2.3.4s-1.6.6-2.5 1.1l-1.7-3.1c1.1-.6 2.3-1.1 3.5-1.5 1.3-.4 2.6-.6 3.9-.6 2.2 0 4 .6 5.2 1.8 1.3 1.2 1.9 3 1.9 5.4v9.1h-3.7l-.4-1.8h-.1c-.8.6-1.7 1.1-2.7 1.6-1 .4-1.9.6-3 .6-.8 0-1.5-.1-2.2-.4-.6-.2-1.2-.6-1.6-1s-.8-.9-1-1.5c-.2-.8-.3-1.4-.3-2.1zm4.5-.3c0 .5.2.9.6 1.1s.9.4 1.6.4 1.4-.1 2-.4 1.2-.7 1.8-1.1v-2.6c-1.2.1-2.2.2-2.9.3-.8.1-1.4.3-1.8.6-.4.2-.8.5-1 .8-.2.2-.3.5-.3.9zm14.7-17.7h9.3v16.4c0 .5.1.9.2 1.2s.3.6.6.8c.2.2.5.3.8.4s.6.1 1 .1.7 0 1.1-.1.9-.2 1.4-.4l1 3.5c-.4.1-.8.3-1.2.4s-.7.2-1.1.3-.8.1-1.2.2-.9.1-1.3.1c-2 0-3.5-.6-4.5-1.8s-1.5-2.8-1.5-4.8v-12.5h-4.6zm40.2 17.5c.9.6 1.8 1 2.8 1.4.9.3 1.9.5 3 .5s1.9-.1 2.3-.3c.5-.2.7-.6.7-1 0-.5-.4-.9-1.2-1.2s-1.8-.7-3.1-1c-.7-.2-1.4-.4-2.1-.7s-1.3-.6-1.8-1-1-.8-1.3-1.3-.5-1.1-.5-1.7c0-.7.2-1.4.5-2s.8-1.1 1.5-1.6c.6-.4 1.4-.8 2.3-1s1.9-.4 3.1-.4c1.4 0 2.7.2 3.8.7 1.2.5 2.2 1 3 1.5l-2.1 2.8c-.7-.4-1.5-.8-2.2-1.1-.8-.3-1.6-.4-2.4-.4-1 0-1.7.1-2.1.3s-.6.5-.6.9c0 .2.1.4.3.6s.5.4.9.5.8.3 1.3.4 1 .3 1.6.4c.8.2 1.5.4 2.2.7s1.3.6 1.9.9c.5.4 1 .8 1.3 1.3s.5 1.1.5 1.8-.2 1.4-.5 2-.8 1.2-1.5 1.6c-.6.5-1.5.8-2.4 1.1-1 .3-2.1.4-3.4.4-1.4 0-2.8-.2-4.2-.7s-2.6-1.1-3.6-1.7zm17.6-3c0-1.3.2-2.5.8-3.5.5-1 1.2-1.9 2-2.6s1.8-1.2 2.9-1.6 2.3-.6 3.5-.6c1.3 0 2.4.2 3.4.6s1.9.9 2.5 1.5l-2.2 2.9c-1.2-.8-2.4-1.2-3.5-1.2-1.4 0-2.5.4-3.3 1.2s-1.3 1.9-1.3 3.3.4 2.5 1.2 3.3 1.9 1.2 3.2 1.2c.8 0 1.6-.1 2.3-.4s1.3-.7 1.9-1.1l1.9 3c-1 .8-2 1.4-3.2 1.8s-2.3.6-3.4.6c-1.2 0-2.4-.2-3.5-.6s-2-.9-2.8-1.6-1.4-1.6-1.9-2.6c-.3-1.1-.5-2.3-.5-3.6zm18.5 0c0-1.3.2-2.5.7-3.5.4-1 1.1-1.9 1.8-2.6.8-.7 1.6-1.2 2.6-1.6s2-.6 3-.6c1.1 0 2.1.2 3 .6 1 .4 1.8.9 2.6 1.6s1.4 1.6 1.8 2.6.7 2.2.7 3.5-.2 2.5-.7 3.5c-.4 1-1.1 1.9-1.8 2.6-.8.7-1.6 1.2-2.6 1.6s-2 .6-3 .6-2-.2-3-.6-1.8-.9-2.6-1.6-1.4-1.6-1.8-2.6c-.5-1-.7-2.2-.7-3.5zm4.9 0c0 1.4.3 2.5.8 3.3s1.4 1.2 2.4 1.2c1.1 0 1.9-.4 2.5-1.2.5-.8.8-1.9.8-3.3s-.3-2.5-.8-3.3-1.4-1.2-2.5-1.2-1.9.4-2.4 1.2c-.6.8-.8 1.9-.8 3.3zm19.8 9.2v4.6h-4.7v-21.8h3.8l.4 1.6h.1c.6-.6 1.4-1.1 2.2-1.4.8-.4 1.7-.6 2.5-.6 1 0 1.9.2 2.7.6s1.5.9 2 1.6c.6.7 1 1.6 1.3 2.5.3 1 .4 2.1.4 3.3 0 1.4-.2 2.6-.6 3.6-.4 1.1-.9 1.9-1.5 2.7-.6.7-1.4 1.3-2.2 1.7s-1.7.6-2.6.6c-1.4 0-2.8-.6-4-1.7zm0-5.8c.4.4.9.7 1.4.8.5.2.9.2 1.3.2.9 0 1.6-.4 2.2-1.1s.9-1.9.9-3.6c0-2.9-1-4.3-2.9-4.3-1 0-2 .5-2.9 1.5zm14-3.4c0-1.3.2-2.5.7-3.5s1.1-1.9 1.8-2.6c.8-.7 1.7-1.3 2.6-1.6 1-.4 2-.6 3.1-.6 1.2 0 2.3.2 3.2.6s1.7.9 2.3 1.6 1.1 1.5 1.4 2.4.5 1.9.5 3c0 .4 0 .8-.1 1.2 0 .4-.1.7-.1.9h-10.7c.2 1.2.7 2.1 1.5 2.6.9.5 1.9.8 3.1.8.7 0 1.4-.1 2-.3.7-.2 1.3-.5 2-.8l1.5 2.8c-.9.6-1.9 1-3 1.4-1.1.3-2.2.5-3.2.5-1.2 0-2.4-.2-3.5-.6s-2-.9-2.8-1.6-1.4-1.6-1.9-2.6c-.2-1.1-.4-2.3-.4-3.6zm11.4-1.7c0-.9-.2-1.6-.7-2.2s-1.3-.8-2.4-.8c-.9 0-1.6.2-2.3.7s-1.1 1.2-1.3 2.3z\"/><path clip-rule=\"evenodd\" d=\"m47.3 259.5h741.9v192.9h-741.9z\" fill=\"#a1c181\" fill-rule=\"evenodd\"/><path d=\"m47.3 259.5h741.9v192.9h-741.9z\" fill=\"none\" stroke=\"#666\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m550.9 420.3h3.5l.4 2h.1c.3-.7.7-1.2 1.2-1.7s1.3-.7 2.2-.7c.7 0 1.3.2 1.8.7.5.4.8 1.1 1 1.9.3-.7.7-1.3 1.3-1.8s1.3-.8 2.2-.8c1.1 0 2 .5 2.6 1.4s.9 2.2.9 3.8v11.1h-4.4v-10.8c0-1-.3-1.5-.9-1.5s-1.1.5-1.5 1.5v10.7h-3.6v-10.8c0-1-.3-1.5-.9-1.5-.3 0-.6.1-.8.4-.2.2-.4.6-.7 1.1v10.7h-4.4zm19.6 7.9c0-1.3.2-2.5.7-3.5.4-1 1.1-1.9 1.8-2.6.8-.7 1.6-1.2 2.6-1.6s2-.6 3-.6c1.1 0 2.1.2 3 .6 1 .4 1.8.9 2.6 1.6s1.4 1.6 1.8 2.6.7 2.2.7 3.5-.2 2.5-.7 3.5c-.4 1-1.1 1.9-1.8 2.6-.8.7-1.6 1.2-2.6 1.6s-2 .6-3 .6-2-.2-3-.6-1.8-.9-2.6-1.6-1.4-1.6-1.8-2.6c-.5-1-.7-2.1-.7-3.5zm4.8 0c0 1.4.3 2.5.8 3.3s1.4 1.2 2.4 1.2c1.1 0 1.9-.4 2.5-1.2.5-.8.8-1.9.8-3.3s-.3-2.5-.8-3.3-1.4-1.2-2.5-1.2-1.9.4-2.4 1.2c-.5.9-.8 2-.8 3.3zm14.4 0c0-1.3.2-2.5.6-3.5s.9-1.9 1.5-2.6 1.4-1.3 2.2-1.6c.8-.4 1.7-.6 2.5-.6.9 0 1.7.2 2.3.5s1.2.7 1.8 1.2l-.2-2.5v-5.4h4.7v22.4h-3.8l-.4-1.6h-.1c-.6.6-1.3 1.1-2 1.4s-1.6.6-2.4.6c-1 0-1.9-.2-2.7-.6s-1.5-.9-2.1-1.6-1-1.6-1.4-2.6-.5-2.2-.5-3.5zm4.8 0c0 1.6.3 2.7.8 3.5.5.7 1.3 1.1 2.3 1.1.5 0 1-.1 1.5-.3.4-.2.9-.6 1.3-1.1v-6.4c-.4-.4-.9-.7-1.3-.8-.4-.2-.9-.2-1.4-.2-.9 0-1.6.4-2.2 1.1s-1 1.6-1 3.1zm29.7 8h-3.8l-.3-2.3h-.1c-.7.8-1.5 1.4-2.3 1.9-.9.5-1.9.7-3 .7-1.8 0-3.1-.6-3.9-1.7s-1.2-2.7-1.2-4.7v-9.8h4.7v9.2c0 1.1.2 1.8.5 2.3s.9.7 1.8.7c.6 0 1.1-.1 1.6-.4s1-.7 1.5-1.4v-10.4h4.7v15.9zm4.3-22.5h9.3v16.4c0 .5.1.9.2 1.2s.3.6.6.8c.2.2.5.3.8.4s.6.1 1 .1.7 0 1.1-.1.9-.2 1.4-.4l1 3.5c-.4.1-.8.3-1.2.4s-.7.2-1.1.3-.8.1-1.2.2-.9.1-1.3.1c-2 0-3.5-.6-4.5-1.8s-1.5-2.8-1.5-4.8v-12.5h-4.6zm19 14.5c0-1.3.2-2.5.7-3.5s1.1-1.9 1.8-2.6c.8-.7 1.7-1.3 2.6-1.6 1-.4 2-.6 3.1-.6 1.2 0 2.3.2 3.2.6s1.7.9 2.3 1.6 1.1 1.5 1.4 2.4.5 1.9.5 3c0 .4 0 .8-.1 1.2 0 .4-.1.7-.1.9h-10.7c.2 1.2.7 2.1 1.5 2.6.9.5 1.9.8 3.1.8.7 0 1.4-.1 2-.3.7-.2 1.3-.5 2-.8l1.5 2.8c-.9.6-1.9 1-3 1.4-1.1.3-2.2.5-3.2.5-1.2 0-2.4-.2-3.5-.6s-2-.9-2.8-1.6-1.4-1.6-1.9-2.6c-.1-1.1-.4-2.2-.4-3.6zm11.5-1.7c0-.9-.2-1.6-.7-2.2s-1.3-.8-2.4-.8c-.9 0-1.6.2-2.3.7s-1.1 1.2-1.3 2.3zm29 4.7c.9.6 1.8 1 2.8 1.4.9.3 1.9.5 3 .5s1.9-.1 2.3-.3c.5-.2.7-.6.7-1 0-.5-.4-.9-1.2-1.2s-1.8-.7-3.1-1c-.7-.2-1.4-.4-2.1-.7s-1.3-.6-1.8-1-1-.8-1.3-1.3-.5-1.1-.5-1.7c0-.7.2-1.4.5-2s.8-1.1 1.5-1.6 1.4-.8 2.3-1 1.9-.4 3.1-.4c1.4 0 2.7.2 3.8.7 1.2.5 2.2 1 3 1.5l-2.1 2.8c-.7-.4-1.5-.8-2.2-1.1-.8-.3-1.6-.4-2.4-.4-1 0-1.7.1-2.1.3s-.6.5-.6.9c0 .2.1.4.3.6s.5.4.9.5.8.3 1.3.4 1 .3 1.6.4c.8.2 1.5.4 2.2.7s1.3.6 1.9.9 1 .8 1.3 1.3.5 1.1.5 1.8-.2 1.4-.5 2-.8 1.2-1.5 1.6c-.6.5-1.5.8-2.4 1.1s-2.1.4-3.4.4c-1.4 0-2.8-.2-4.2-.7s-2.6-1.1-3.6-1.7zm17.5-3c0-1.3.2-2.5.8-3.5.5-1 1.2-1.9 2-2.6s1.8-1.2 2.9-1.6 2.3-.6 3.5-.6c1.3 0 2.4.2 3.4.6s1.9.9 2.5 1.5l-2.2 2.9c-1.2-.8-2.4-1.2-3.5-1.2-1.4 0-2.5.4-3.3 1.2-.9.8-1.3 1.9-1.3 3.3s.4 2.5 1.2 3.3 1.9 1.2 3.2 1.2c.8 0 1.6-.1 2.3-.4s1.3-.7 1.9-1.1l1.9 3c-1 .8-2 1.4-3.2 1.8s-2.3.6-3.4.6c-1.2 0-2.4-.2-3.5-.6s-2-.9-2.8-1.6-1.4-1.6-1.9-2.6c-.3-1.1-.5-2.2-.5-3.6zm18.6 0c0-1.3.2-2.5.7-3.5.4-1 1.1-1.9 1.8-2.6.8-.7 1.6-1.2 2.6-1.6s2-.6 3-.6c1.1 0 2.1.2 3 .6 1 .4 1.8.9 2.6 1.6s1.4 1.6 1.8 2.6.7 2.2.7 3.5-.2 2.5-.7 3.5c-.4 1-1.1 1.9-1.8 2.6-.8.7-1.6 1.2-2.6 1.6s-2 .6-3 .6-2-.2-3-.6-1.8-.9-2.6-1.6-1.4-1.6-1.8-2.6c-.5-1-.7-2.1-.7-3.5zm4.8 0c0 1.4.3 2.5.8 3.3s1.4 1.2 2.4 1.2c1.1 0 1.9-.4 2.5-1.2.5-.8.8-1.9.8-3.3s-.3-2.5-.8-3.3-1.4-1.2-2.5-1.2-1.9.4-2.4 1.2c-.5.9-.8 2-.8 3.3zm19.9 9.2v4.6h-4.7v-21.8h3.8l.4 1.6h.1c.6-.6 1.4-1.1 2.2-1.4.8-.4 1.7-.6 2.5-.6 1 0 1.9.2 2.7.6s1.5.9 2 1.6 1 1.6 1.3 2.5.4 2.1.4 3.3c0 1.4-.2 2.6-.6 3.6-.4 1.1-.9 1.9-1.5 2.7-.6.7-1.4 1.3-2.2 1.7s-1.7.6-2.6.6c-1.4 0-2.8-.6-4-1.7zm0-5.7c.4.4.9.7 1.4.8.5.2.9.2 1.3.2.9 0 1.6-.4 2.2-1.1s.9-1.9.9-3.6c0-2.9-1-4.3-2.9-4.3-1 0-2 .5-2.9 1.5zm13.9-3.5c0-1.3.2-2.5.7-3.5s1.1-1.9 1.8-2.6c.8-.7 1.7-1.3 2.6-1.6 1-.4 2-.6 3.1-.6 1.2 0 2.3.2 3.2.6s1.7.9 2.3 1.6 1.1 1.5 1.4 2.4.5 1.9.5 3c0 .4 0 .8-.1 1.2 0 .4-.1.7-.1.9h-10.7c.2 1.2.7 2.1 1.5 2.6.9.5 1.9.8 3.1.8.7 0 1.4-.1 2-.3.7-.2 1.3-.5 2-.8l1.5 2.8c-.9.6-1.9 1-3 1.4-1.1.3-2.2.5-3.2.5-1.2 0-2.4-.2-3.5-.6s-2-.9-2.8-1.6-1.4-1.6-1.9-2.6c-.1-1.1-.4-2.2-.4-3.6zm11.5-1.7c0-.9-.2-1.6-.7-2.2s-1.3-.8-2.4-.8c-.9 0-1.6.2-2.3.7s-1.1 1.2-1.3 2.3z\"/><path clip-rule=\"evenodd\" d=\"m47.3 110.9h610.6v57.8h-610.6z\" fill=\"#1c4587\" fill-rule=\"evenodd\"/><path d=\"m47.3 110.9h610.6v57.8h-610.6z\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m319.9 127h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.5h-4.5v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9zm10.6-6.8h3.1v3.7l-.2 2c.2-.2.4-.4.7-.6s.5-.4.8-.5c.3-.2.6-.3 1-.4s.7-.1 1.1-.1c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.1v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-15zm12.9 4.4h7.4v10.6h-3.1v-8.2h-4.2v-2.4zm5.7-1.6c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4-.9.5-1.5.5zm8 8.8c.6.4 1.2.7 1.8.9s1.3.3 2 .3 1.2-.1 1.6-.2.5-.4.5-.7-.3-.6-.8-.8-1.2-.4-2.1-.7c-.5-.1-.9-.3-1.4-.5l-1.2-.6c-.4-.2-.6-.5-.9-.9-.2-.3-.3-.7-.3-1.1 0-.5.1-.9.3-1.3s.6-.8 1-1c.4-.3.9-.5 1.5-.7s1.3-.2 2-.2c.9 0 1.8.2 2.6.5s1.4.6 2 1l-1.4 1.9c-.5-.3-1-.5-1.5-.7s-1-.3-1.6-.3c-.7 0-1.1.1-1.4.2s-.4.4-.4.6.1.3.2.4.3.2.6.3c.2.1.5.2.9.3.3.1.7.2 1 .3.5.1 1 .3 1.5.5s.9.4 1.2.6c.4.2.6.5.8.9.2.3.3.7.3 1.2s-.1.9-.3 1.3-.6.8-1 1.1-1 .5-1.6.7-1.4.3-2.2.3c-.9 0-1.9-.2-2.8-.5s-1.7-.7-2.4-1.1zm24.5-6.8h9.8v2.2h-9.8zm0 4h9.8v2.2h-9.8zm12.8-4h9.8v2.2h-9.8zm0 4h9.8v2.2h-9.8zm12.8-4h9.8v2.2h-9.8zm0 4h9.8v2.2h-9.8zm29.6-7c-.8.3-1.3.8-1.7 1.2-.4.5-.6 1.1-.7 1.7.1 0 .3-.1.5-.1.6 0 1 .2 1.4.5s.5.8.5 1.4c0 .7-.2 1.2-.6 1.6s-.9.6-1.5.6c-.8 0-1.4-.3-1.9-.9-.4-.6-.6-1.4-.6-2.5 0-1.2.3-2.2.9-3.1s1.6-1.6 2.8-2.2zm6 0c-.8.3-1.3.8-1.7 1.2-.4.5-.6 1.1-.7 1.7.1 0 .3-.1.5-.1.6 0 1 .2 1.4.5s.5.8.5 1.4c0 .7-.2 1.2-.6 1.6s-.9.6-1.5.6c-.8 0-1.4-.3-1.9-.9-.4-.6-.6-1.4-.6-2.5 0-1.2.3-2.2.9-3.1s1.6-1.6 2.8-2.2zm5.1 5h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.5h-4.5v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9zm10.6-6.8h3.1v3.7l-.2 2c.2-.2.4-.4.7-.6s.5-.4.8-.5c.3-.2.6-.3 1-.4s.7-.1 1.1-.1c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.1v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-15zm12.4 9.7c0-.9.2-1.6.5-2.3s.7-1.3 1.2-1.7c.5-.5 1.1-.8 1.8-1.1s1.4-.4 2.1-.4c.8 0 1.5.1 2.2.4.6.2 1.1.6 1.5 1.1.4.4.7 1 .9 1.6s.3 1.3.3 2v.8c0 .2 0 .4-.1.6h-7.1c.1.8.5 1.4 1 1.7.6.3 1.3.5 2 .5.5 0 .9-.1 1.4-.2.4-.1.9-.3 1.4-.5l1 1.9c-.6.4-1.3.7-2 .9s-1.5.3-2.2.3c-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1.1-1.2-1.7-.3-.8-.5-1.6-.5-2.4zm7.6-1.2c0-.6-.2-1.1-.5-1.5s-.8-.6-1.6-.6c-.6 0-1.1.2-1.5.5s-.7.8-.9 1.5h4.5zm20.5 7.8c0 .4.2.7.7.9s1.1.3 2 .3 1.5-.1 2.1-.4c.5-.2.8-.5.8-.9 0-.3-.2-.6-.5-.7s-.8-.2-1.4-.2h-2.3c-.2 0-.5-.1-.7-.1-.3.2-.5.3-.6.5s-.1.4-.1.6zm-2.6.5c0-.9.5-1.6 1.6-2.1v-.1c-.3-.2-.5-.4-.8-.7-.2-.3-.3-.7-.3-1.1s.1-.7.3-1.1.5-.7.9-.9v-.1c-.4-.3-.7-.6-1-1.1s-.4-1-.4-1.6.1-1.2.4-1.7c.2-.5.6-.9 1-1.2s.9-.6 1.4-.7c.6-.2 1.1-.2 1.7-.2.7 0 1.2.1 1.8.2h4.3v2.3h-2.2l.3.6c.1.2.2.5.2.8 0 .6-.1 1.1-.3 1.6s-.5.8-.9 1.1-.8.5-1.4.7-1.1.2-1.7.2c-.5 0-.9-.1-1.5-.2-.2.1-.3.2-.4.3s-.1.3-.1.4c0 .3.1.5.4.6s.8.2 1.4.2h2c1.4 0 2.5.2 3.2.6s1.1 1.1 1.1 2c0 .6-.2 1.1-.5 1.5s-.7.9-1.3 1.2c-.5.3-1.2.6-2 .8s-1.7.3-2.6.3c-.7 0-1.3-.1-1.9-.2s-1.1-.3-1.5-.5-.8-.5-1-.8c0-.3-.2-.7-.2-1.1zm5-7.1c.4 0 .8-.1 1.1-.4s.5-.7.5-1.3-.2-1-.5-1.3-.7-.4-1.1-.4-.8.1-1.1.4-.5.7-.5 1.3.2 1 .5 1.3.7.4 1.1.4zm8-9.7h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm12.5 9.7c0-.9.1-1.7.4-2.3.3-.7.7-1.3 1.2-1.8s1.1-.8 1.7-1.1c.7-.2 1.3-.4 2-.4s1.4.1 2 .4c.7.2 1.2.6 1.7 1.1s.9 1.1 1.2 1.8.5 1.5.5 2.3c0 .9-.2 1.7-.5 2.4s-.7 1.3-1.2 1.7c-.5.5-1.1.8-1.7 1.1-.6.2-1.3.4-2 .4s-1.4-.1-2-.4c-.6-.2-1.2-.6-1.7-1.1s-.9-1-1.2-1.7c-.2-.8-.4-1.6-.4-2.4zm3.2 0c0 .9.2 1.7.5 2.2.4.5.9.8 1.6.8s1.3-.3 1.6-.8c.4-.5.5-1.3.5-2.2s-.2-1.6-.5-2.2c-.4-.5-.9-.8-1.6-.8s-1.3.3-1.6.8-.5 1.2-.5 2.2zm10.1-9.7h3.1v3.7l-.1 1.7c.4-.4.9-.7 1.4-.9s1-.3 1.5-.3c.7 0 1.2.1 1.8.4.5.2 1 .6 1.3 1.1s.6 1 .8 1.7.3 1.4.3 2.2c0 .9-.1 1.7-.4 2.4-.2.7-.6 1.3-1 1.8s-.9.9-1.5 1.1c-.5.2-1.1.4-1.7.4-.5 0-1-.1-1.5-.4-.5-.2-1-.6-1.4-1h.2l-.3 1.2h-2.5zm3.2 12c.3.2.6.4.9.5s.6.2.9.2c.6 0 1.1-.2 1.5-.7s.6-1.3.6-2.4c0-1.9-.6-2.9-1.9-2.9-.7 0-1.3.3-2 1zm9.4 0c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1s1.3-.6 2.2-.8 2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.2c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c0-.5-.1-.9-.1-1.4zm3-.2c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5s-.2.5-.2.7zm9.8-11.8h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm28 6.8h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.5h-4.5v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9zm10.6-6.8h3.1v3.7l-.2 2c.2-.2.4-.4.7-.6s.5-.4.8-.5c.3-.2.6-.3 1-.4s.7-.1 1.1-.1c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.1v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-15zm13 4.4h7.4v10.6h-3.1v-8.2h-4.2v-2.4zm5.7-1.6c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4-.9.5-1.5.5zm7.9 8.8c.6.4 1.2.7 1.8.9s1.3.3 2 .3 1.2-.1 1.6-.2.5-.4.5-.7-.3-.6-.8-.8-1.2-.4-2.1-.7c-.5-.1-.9-.3-1.4-.5s-.8-.4-1.2-.6-.6-.5-.9-.9c-.2-.3-.3-.7-.3-1.1 0-.5.1-.9.3-1.3s.6-.8 1-1c.4-.3.9-.5 1.5-.7s1.3-.2 2-.2c.9 0 1.8.2 2.6.5s1.4.6 2 1l-1.4 1.9c-.5-.3-1-.5-1.5-.7s-1-.3-1.6-.3c-.7 0-1.1.1-1.4.2s-.4.4-.4.6.1.3.2.4.3.2.6.3c.2.1.5.2.9.3s.7.2 1 .3c.5.1 1 .3 1.5.5s.9.4 1.2.6c.4.2.6.5.8.9.2.3.3.7.3 1.2s-.1.9-.3 1.3-.6.8-1 1.1-1 .5-1.6.7-1.4.3-2.2.3c-.9 0-1.9-.2-2.8-.5s-1.7-.7-2.4-1.1zm11.6-4.5c1.5-.7 2.3-1.7 2.4-3-.2 0-.3.1-.4.1-.6 0-1.1-.2-1.4-.5-.4-.4-.5-.8-.5-1.4s.2-1.2.6-1.5c.4-.4.9-.6 1.5-.6.8 0 1.4.3 1.8.9s.6 1.4.6 2.5c0 1.2-.3 2.2-.9 3.1s-1.5 1.6-2.8 2.2zm6 0c1.5-.7 2.3-1.7 2.4-3-.2 0-.3.1-.4.1-.6 0-1.1-.2-1.4-.5-.4-.4-.5-.8-.5-1.4s.2-1.2.6-1.5c.4-.4.9-.6 1.5-.6.8 0 1.4.3 1.8.9s.6 1.4.6 2.5c0 1.2-.3 2.2-.9 3.1s-1.5 1.6-2.8 2.2zm-438.8 31.6c-1.1-.9-2-1.9-2.6-3.1s-1-2.6-1-4.2c0-1.5.3-2.9 1-4.1.6-1.2 1.5-2.3 2.6-3.1l.7.7c-1.1.9-1.9 1.9-2.4 3s-.8 2.3-.8 3.6.2 2.6.8 3.6c.5 1.1 1.3 2 2.4 3zm2.8-13.4h1.3l.9 6.6c0 .4.1.9.1 1.3.1.4.1.8.1 1.3.1-.4.2-.9.3-1.3s.2-.9.3-1.3l1.1-3.9h.9l1.1 3.9c.1.4.2.9.3 1.3s.2.9.4 1.3h.1c0-.4.1-.9.1-1.3s.1-.9.1-1.3l.8-6.6h1.3l-1.5 10.5h-1.5l-1.2-4.4c-.1-.3-.1-.6-.2-.9s-.1-.6-.2-.9c-.1.3-.1.6-.2.9s-.1.6-.2.9l-1.2 4.4h-1.4zm10.9 2.8h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3c.3 0 .6.1.8.3s.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm5.6 1.6h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm9 3.9c0-.6.1-1.2.3-1.7s.5-.9.8-1.3.7-.6 1.1-.8.9-.3 1.3-.3c.5 0 .9.1 1.2.3.4.2.7.4 1.1.7v-4.5h1.3v11.4h-1.1l-.1-1c-.3.3-.7.6-1.1.9-.4.2-.9.4-1.4.4s-1-.1-1.4-.3-.8-.5-1.1-.8-.5-.8-.7-1.3c-.1-.5-.2-1.1-.2-1.7zm1.4-.1c0 .9.2 1.7.6 2.2s1 .8 1.7.8c.8 0 1.5-.4 2.2-1.2v-3.9c-.4-.3-.7-.6-1-.7s-.7-.2-1-.2-.7.1-1 .2-.5.3-.8.6c-.2.3-.4.6-.5.9-.1.5-.2.9-.2 1.3zm8.2.1c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3-.8.6-1.2.8c-.5.2-.9.3-1.5.3s-1-.1-1.5-.3-.9-.5-1.2-.8-.6-.8-.8-1.3-.3-1.1-.3-1.7zm1.4 0c0 .4.1.9.2 1.2.1.4.3.7.5.9s.5.5.8.6.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.7-.2 1.2zm7.4-3.9h1.3l1 4.5c.1.4.1.7.2 1.1s.1.7.2 1.1h.1c.1-.4.1-.7.2-1.1s.2-.7.2-1.1l.9-4h1.1l1 4c.1.4.2.7.2 1.1s.2.7.2 1.1h.1c.1-.4.2-.7.2-1.1.1-.4.1-.7.2-1.1l.9-4.5h1.2l-1.7 7.8h-1.6l-.9-3.9c-.1-.4-.1-.7-.2-1.1s-.1-.7-.2-1.1c-.1.3-.1.7-.2 1s-.1.8-.2 1.2l-.9 3.9h-1.6zm11.1-2.8h3.2c.6 0 1.1.1 1.6.2s.9.3 1.2.5.6.6.8 1 .3.9.3 1.5-.1 1-.3 1.4-.5.7-.8 1-.7.5-1.2.6-1 .2-1.6.2h-1.9v4.2h-1.3zm3.1 5.3c.9 0 1.6-.2 2-.5s.7-.9.7-1.6c0-.8-.2-1.3-.7-1.6-.4-.3-1.1-.4-2-.4h-1.7v4.2h1.7zm7.2-2.5h1.1l.1 1.8c.4-.6.9-1.1 1.5-1.5s1.3-.5 2-.5c.3 0 .5 0 .8.1.2 0 .5.1.8.2l-.3 1.1c-.3-.1-.5-.2-.7-.2s-.4-.1-.8-.1c-.6 0-1.1.2-1.7.5-.5.3-1 .9-1.5 1.7v4.6h-1.3zm8.2 3.9c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3-.8.6-1.2.8c-.5.2-.9.3-1.5.3s-1-.1-1.5-.3-.9-.5-1.2-.8-.6-.8-.8-1.3-.3-1.1-.3-1.7zm1.4 0c0 .4.1.9.2 1.2.1.4.3.7.5.9s.5.5.8.6.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.7-.2 1.2zm11.3-.2-2.7-3.8h1.5l1.2 1.7c.1.2.3.4.4.7.2.2.3.4.5.7h.1c.2-.2.3-.4.5-.7.1-.2.3-.5.4-.7l1.2-1.7h1.4l-2.8 3.9 3 3.9h-1.4l-1.4-1.8c-.2-.2-.3-.4-.5-.7-.2-.2-.3-.5-.5-.7h-.1c-.2.2-.3.5-.5.7s-.3.5-.5.7l-1.3 1.8h-1.4zm6.9 6.2c.1 0 .2.1.3.1h.4c.5 0 1-.2 1.3-.5s.6-.7.8-1.2l.2-.6-3.6-7.8h1.3l1.9 4.3c.1.3.3.7.5 1.1s.3.8.5 1.1h.1c.1-.4.3-.8.4-1.1.1-.4.3-.8.4-1.1l1.7-4.3h1.2l-3.4 8.4c-.1.4-.3.7-.5 1.1-.2.3-.4.6-.7.9l-.9.6c-.3.1-.7.2-1.2.2-.4 0-.7-.1-1-.2zm11.8-9.3c0-.4.1-.7.4-1s.6-.4.9-.4c.4 0 .7.1.9.4s.4.6.4 1-.1.7-.4 1c-.2.2-.6.4-.9.4-.4 0-.7-.1-.9-.4-.3-.3-.4-.6-.4-1zm-.4 9.7c.7-.3 1.2-.7 1.5-1.1s.5-.9.5-1.6h-.4c-.3 0-.6-.1-.9-.3s-.4-.5-.4-.9.1-.7.4-.9.6-.3.9-.3c.5 0 .8.2 1.1.6.2.4.4.9.4 1.5 0 .9-.2 1.7-.8 2.4s-1.2 1.1-2.1 1.5zm17-10.3h1l.1 1c.2-.4.4-.7.7-.9s.6-.3 1.1-.3c.8 0 1.3.4 1.5 1.3.2-.4.5-.7.8-1 .3-.2.6-.4 1.1-.4s1 .2 1.2.6c.3.4.4 1 .4 1.8v5.6h-1.3v-5.5c0-.9-.3-1.4-.8-1.4-.3 0-.5.1-.7.3s-.4.5-.6.9v5.6h-1v-5.5c0-.9-.3-1.4-.9-1.4-.3 0-.5.1-.7.3s-.4.5-.6.9v5.6h-1.3zm10 5.7c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4c-.3-.1-.6-.2-1-.2-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7c-.3-.2-.3-.5-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2c.2.1.4.1.6.1.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5zm8.4-5.6h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3c.3 0 .6.1.8.3s.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm5.6 1.6h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm11.4 1h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9s.2.5.3.7c.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm7.6 4.7c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4c-.3-.1-.6-.2-1-.2-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7c-.3-.2-.3-.5-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2c.2.1.4.1.6.1.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5zm8.4-5.6h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3c.3 0 .6.1.8.3s.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm5.6 1.6h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm9.9 5.8c.4.3.9.6 1.4.8s1.1.3 1.8.3 1.2-.1 1.6-.3c.3-.2.5-.5.5-.9 0-.3-.2-.6-.6-.8s-1-.5-2-.7c-.4-.1-.8-.2-1.2-.4-.4-.1-.7-.3-.9-.5-.3-.2-.5-.4-.6-.6-.2-.2-.2-.5-.2-.8s.1-.6.2-.9.4-.5.6-.7c.3-.2.6-.4 1-.5s.9-.2 1.4-.2c.6 0 1.2.1 1.7.3.6.2 1 .4 1.4.7l-.6.8c-.3-.2-.7-.4-1.1-.6-.4-.1-.9-.2-1.3-.2s-.7 0-.9.1-.4.1-.6.2c-.1.1-.3.2-.3.4-.1.1-.1.3-.1.4 0 .3.2.6.7.8.4.2 1 .4 1.7.6 1.1.3 1.8.6 2.3.9s.8.8.8 1.4c0 .3-.1.6-.2.9s-.4.5-.7.7-.7.4-1.1.5-.9.2-1.5.2c-.8 0-1.5-.1-2.1-.4-.6-.2-1.2-.5-1.7-.9zm18.8-5.8h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3c.3 0 .6.1.8.3s.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm5 5.5c0-.6.1-1.2.3-1.7s.5-.9.8-1.3.7-.6 1.1-.8.9-.3 1.3-.3c.5 0 .9.1 1.2.3.4.2.7.4 1.1.7v-4.5h1.3v11.4h-1.1l-.1-1c-.3.3-.7.6-1.1.9-.4.2-.9.4-1.4.4s-1-.1-1.4-.3-.8-.5-1.1-.8-.5-.8-.7-1.3c-.1-.5-.2-1.1-.2-1.7zm1.4-.1c0 .9.2 1.7.6 2.2s1 .8 1.7.8c.8 0 1.5-.4 2.2-1.2v-3.9c-.4-.3-.7-.6-1-.7s-.7-.2-1-.2-.7.1-1 .2-.5.3-.8.6c-.2.3-.4.6-.5.9-.1.5-.2.9-.2 1.3zm8.4.1c0-.6.1-1.2.3-1.7s.5-.9.9-1.3.8-.6 1.2-.8c.5-.2 1-.3 1.5-.3.6 0 1 .1 1.5.3s.8.4 1.1.8c.3.3.5.7.7 1.1s.2.9.2 1.5v.7h-6.1c0 .4.1.8.2 1.1.2.3.4.6.6.8.3.2.6.4.9.5.4.1.7.2 1.2.2s.9-.1 1.2-.2c.4-.1.8-.3 1.1-.5l.5.9c-.4.2-.8.5-1.3.6-.5.2-1 .3-1.7.3-.6 0-1.1-.1-1.6-.3s-1-.5-1.3-.8-.7-.8-.9-1.3-.2-1-.2-1.6zm6.3-.7c0-.8-.2-1.4-.6-1.8s-1-.6-1.7-.6c-.3 0-.6.1-.9.2s-.6.3-.8.5-.4.5-.6.8-.3.6-.3 1h4.9zm3.7-3.2h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm11.4 1h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9s.2.5.3.7c.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm7.7-1h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3c.3 0 .6.1.8.3s.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm7.4 2.6h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9s.2.5.3.7c.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm7.6 8.9c.1 0 .2.1.3.1h.4c.5 0 1-.2 1.3-.5s.6-.7.8-1.2l.2-.6-3.6-7.8h1.3l1.9 4.3c.1.3.3.7.5 1.1s.3.8.5 1.1h.1c.1-.4.3-.8.4-1.1s.3-.8.4-1.1l1.7-4.3h1.2l-3.4 8.4c-.1.4-.3.7-.5 1.1-.2.3-.4.6-.7.9l-.9.6c-.3.1-.7.2-1.2.2-.4 0-.7-.1-1-.2zm18.8-6c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3-.8.6-1.2.8c-.5.2-.9.3-1.5.3s-1-.1-1.5-.3-.9-.5-1.2-.8-.6-.8-.8-1.3-.3-1.1-.3-1.7zm1.4 0c0 .4.1.9.2 1.2.1.4.3.7.5.9s.5.5.8.6.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.7-.2 1.2zm8.8-3.9h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm19.2 0h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm9.4 5.7c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4-.6-.2-1-.2c-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7c-.3-.2-.3-.5-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2.4.1.6.1c.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5s0 .5 0 .7zm7.8-5.6h1.3l1.8 4.4c.2.4.3.8.5 1.2.1.4.3.7.4 1.1h.1c.1-.4.3-.7.4-1.1s.3-.8.5-1.2l1.8-4.4h1.3l-3.4 7.7h-1.5zm10.2 0h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3.6.1.8.3.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm6.4 10.6c0 .4.2.7.6 1s1.1.4 1.9.4c.4 0 .9 0 1.2-.1.4-.1.7-.2.9-.4.3-.1.5-.3.6-.5s.2-.4.2-.6c0-.4-.2-.6-.5-.8-.3-.1-.7-.2-1.3-.2h-2.1c-.2 0-.4 0-.5-.1-.4.2-.6.4-.8.6-.2.3-.2.5-.2.7zm-1.2.2c0-.3.1-.6.3-.9s.5-.6 1-.8v-.1c-.2-.1-.4-.3-.6-.5s-.2-.5-.2-.8c0-.2.1-.5.2-.8.2-.3.4-.5.7-.7v-.1c-.3-.2-.5-.5-.7-.8s-.3-.8-.3-1.2.1-.8.2-1.1c.2-.3.4-.6.7-.9.3-.2.6-.4 1-.6.4-.1.8-.2 1.2-.2s.8.1 1.2.2h3.2v1h-2.1c.2.2.4.4.5.7s.2.6.2.9c0 .4-.1.8-.2 1.1s-.4.6-.6.8c-.3.2-.6.4-1 .5s-.8.2-1.2.2c-.2 0-.4 0-.7-.1-.2-.1-.4-.1-.7-.2-.4.2-.6.5-.6.9 0 .3.1.5.4.7s.7.2 1.2.2h1.7c1 0 1.7.1 2.2.4s.7.7.7 1.4c0 .4-.1.7-.3 1s-.5.6-.9.9c-.4.2-.8.4-1.4.6s-1.1.2-1.8.2c-1.1 0-2-.2-2.6-.6-.3-.1-.7-.6-.7-1.3zm3.5-4.8c.5 0 .9-.2 1.3-.5s.5-.8.5-1.3c0-.3-.1-.5-.2-.7s-.2-.4-.4-.6-.3-.3-.6-.4-.5-.1-.7-.1-.5 0-.7.1-.4.2-.6.4-.3.3-.4.6c-.1.2-.1.5-.1.7 0 .6.2 1 .5 1.3.5.3 1 .5 1.4.5zm6.3 1.3c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4-.6-.2-1-.2c-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7c-.3-.2-.3-.5-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2.4.1.6.1c.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5s0 .5 0 .7zm10.3-4.6h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9s.2.5.3.7c.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm7.7-1h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3.6.1.8.3.3.4.3.7-.1.6-.3.8-.5.3-.8.3zm5 5.5c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.4 0c0 .4.1.9.2 1.2.1.4.3.7.5.9s.5.5.8.6.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.7-.2 1.2zm8.8-3.9h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.8h-1.3v-4.7c0-.7-.1-1.3-.4-1.6s-.7-.5-1.4-.5c-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm10 9.9c1.1-.9 1.9-1.9 2.4-3s.8-2.3.8-3.6-.3-2.6-.8-3.6c-.5-1.1-1.3-2.1-2.4-3l.7-.7c1.1.9 2 1.9 2.6 3.1s1 2.6 1 4.1c0 1.6-.3 2.9-1 4.2-.6 1.2-1.5 2.2-2.6 3.1z\" fill=\"#fff\"/><path clip-rule=\"evenodd\" d=\"m47.3 185.2h610.6v57.8h-610.6z\" fill=\"#1c4587\" fill-rule=\"evenodd\"/><path d=\"m47.3 185.2h610.6v57.8h-610.6z\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m447.8 229.8c0 .4.2.7.7.9s1.1.3 2 .3 1.5-.1 2.1-.4c.5-.2.8-.5.8-.9 0-.3-.2-.6-.5-.7s-.8-.2-1.4-.2h-2.3c-.2 0-.5-.1-.7-.1-.3.2-.5.3-.6.5 0 .2-.1.4-.1.6zm-2.6.5c0-.9.5-1.6 1.6-2.1v-.1c-.3-.2-.5-.4-.8-.7-.2-.3-.3-.7-.3-1.1s.1-.7.3-1.1.5-.7.9-.9v-.1c-.4-.3-.7-.6-1-1.1s-.4-1-.4-1.6.1-1.2.4-1.7c.2-.5.6-.9 1-1.2s.9-.6 1.4-.7c.6-.2 1.1-.2 1.7-.2.7 0 1.2.1 1.8.2h4.3v2.3h-2.2l.3.6c.1.2.2.5.2.8 0 .6-.1 1.1-.3 1.6-.2.4-.5.8-.9 1.1s-.8.5-1.4.7c-.5.1-1.1.2-1.7.2-.5 0-.9-.1-1.5-.2-.2.1-.3.2-.4.3s-.1.3-.1.4c0 .3.1.5.4.6s.8.2 1.4.2h2c1.4 0 2.5.2 3.2.6s1.1 1.1 1.1 2c0 .6-.2 1.1-.5 1.5-.3.5-.7.9-1.3 1.2-.5.3-1.2.6-2 .8s-1.7.3-2.6.3c-.7 0-1.3-.1-1.9-.2s-1.1-.3-1.5-.5-.8-.5-1-.8c0-.2-.2-.6-.2-1.1zm5-7.1c.4 0 .8-.1 1.1-.4s.5-.7.5-1.3-.2-1-.5-1.3-.7-.4-1.1-.4-.8.1-1.1.4-.5.7-.5 1.3.2 1 .5 1.3.7.4 1.1.4zm8.1-9.7h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.1h-3.1zm12.4 9.7c0-.9.1-1.7.4-2.3.3-.7.7-1.3 1.2-1.8s1.1-.8 1.7-1.1c.7-.2 1.3-.4 2-.4s1.4.1 2 .4c.7.2 1.2.6 1.7 1.1s.9 1.1 1.2 1.8.5 1.5.5 2.3c0 .9-.2 1.7-.5 2.4s-.7 1.3-1.2 1.7c-.5.5-1.1.8-1.7 1.1-.6.2-1.3.4-2 .4s-1.4-.1-2-.4c-.6-.2-1.2-.6-1.7-1.1s-.9-1-1.2-1.7c-.2-.7-.4-1.5-.4-2.4zm3.2 0c0 .9.2 1.7.5 2.2.4.5.9.8 1.6.8s1.3-.3 1.6-.8c.4-.5.5-1.3.5-2.2s-.2-1.6-.5-2.2c-.4-.5-.9-.8-1.6-.8s-1.3.3-1.6.8-.5 1.3-.5 2.2zm10.2-9.7h3.1v3.7l-.1 1.7c.4-.4.9-.7 1.4-.9s1-.3 1.5-.3c.7 0 1.2.1 1.8.4.5.2 1 .6 1.3 1.1.4.5.6 1 .8 1.7s.3 1.4.3 2.2c0 .9-.1 1.7-.4 2.4-.2.7-.6 1.3-1 1.8s-.9.9-1.5 1.1c-.5.2-1.1.4-1.7.4-.5 0-1-.1-1.5-.4-.5-.2-1-.6-1.4-1h-.1l-.3 1.2h-2.5v-15.1zm3.1 12c.3.2.6.4.9.5s.6.2.9.2c.6 0 1.1-.2 1.5-.7s.6-1.3.6-2.4c0-1.9-.6-2.9-1.9-2.9-.7 0-1.3.3-2 1zm9.4 0c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1s1.3-.6 2.2-.8 2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.1c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c-.1-.5-.2-.9-.2-1.4zm3-.2c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.1.3-.2.5-.2.7zm9.8-11.8h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.1h-3.1zm25 4.4h3.2l1.7 5c.2.5.3 1.1.5 1.6s.3 1.1.5 1.6h.1c.2-.6.3-1.1.5-1.6.1-.5.3-1.1.5-1.6l1.7-5h3l-3.9 10.6h-3.6zm13.4 7.6c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1s1.3-.6 2.2-.8 2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.2c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c0-.5-.1-.9-.1-1.4zm3-.2c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.1.3-.2.5-.2.7zm11-7.4h2.6l.3 2.3h.1c.5-.9 1.2-1.5 1.9-1.9s1.5-.6 2.4-.6c.5 0 .8 0 1.1.1l.9.3-.6 2.6c-.3-.1-.6-.2-.9-.2-.3-.1-.6-.1-1-.1-.7 0-1.3.2-1.9.6s-1.2 1-1.6 2v5.5h-3.1v-10.6zm12 0h7.4v10.6h-3.2v-8.1h-4.2zm5.7-1.6c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4-.9.5-1.5.5zm6.7 9.2c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1s1.3-.6 2.2-.8 2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.1c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c-.1-.5-.2-.9-.2-1.4zm3-.2c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.1.3-.2.5-.2.7zm10-11.8h3.1v3.7l-.1 1.7c.4-.4.9-.7 1.4-.9s1-.3 1.5-.3c.7 0 1.2.1 1.8.4.5.2 1 .6 1.3 1.1.4.5.6 1 .8 1.7s.3 1.4.3 2.2c0 .9-.1 1.7-.4 2.4-.2.7-.6 1.3-1 1.8s-.9.9-1.5 1.1c-.5.2-1.1.4-1.7.4-.5 0-1-.1-1.5-.4-.5-.2-1-.6-1.4-1h-.1l-.3 1.2h-2.5v-15.1zm3.2 12c.3.2.6.4.9.5s.6.2.9.2c.6 0 1.1-.2 1.5-.7s.6-1.3.6-2.4c0-1.9-.6-2.9-1.9-2.9-.7 0-1.3.3-2 1zm9.4-12h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.1h-3.1zm12.7 9.7c0-.9.2-1.6.5-2.3s.7-1.3 1.2-1.7c.5-.5 1.1-.8 1.8-1.1s1.4-.4 2.1-.4c.8 0 1.5.1 2.2.4.6.2 1.1.6 1.5 1.1.4.4.7 1 .9 1.6s.3 1.3.3 2v.8c0 .2 0 .4-.1.6h-7.1c.1.8.5 1.4 1 1.7.6.3 1.3.5 2 .5.5 0 .9-.1 1.4-.2.4-.1.9-.3 1.4-.5l1 1.9c-.6.4-1.3.7-2 .9s-1.5.3-2.2.3c-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1.1-1.2-1.7-.4-.7-.5-1.5-.5-2.4zm7.6-1.2c0-.6-.2-1.1-.5-1.5s-.8-.6-1.6-.6c-.6 0-1.1.2-1.5.5s-.7.8-.9 1.5h4.5zm6.5 3.2c.6.4 1.2.7 1.8.9s1.3.3 2 .3 1.2-.1 1.6-.2.5-.4.5-.7-.3-.6-.8-.8-1.2-.4-2.1-.7c-.5-.1-.9-.3-1.4-.5l-1.2-.6c-.4-.2-.6-.5-.9-.9-.2-.3-.3-.7-.3-1.1 0-.5.1-.9.3-1.3s.6-.8 1-1c.4-.3.9-.5 1.5-.7s1.3-.2 2-.2c.9 0 1.8.2 2.6.5s1.4.6 2 1l-1.4 1.9c-.5-.3-1-.5-1.5-.7s-1-.3-1.6-.3c-.7 0-1.1.1-1.4.2s-.4.4-.4.6.1.3.2.4.3.2.6.3c.2.1.5.2.9.3.3.1.7.2 1 .3.5.1 1 .3 1.5.5s.9.4 1.2.6c.4.2.6.5.8.9.2.3.3.7.3 1.2s-.1.9-.3 1.3-.6.8-1 1.1-1 .5-1.6.7-1.4.3-2.2.3c-.9 0-1.9-.2-2.8-.5s-1.7-.7-2.4-1.1z\" fill=\"#fff\"/><path clip-rule=\"evenodd\" d=\"m-9.8 63.9 74.2-51.2 25.6 37.1-74.2 51.2z\" fill=\"none\"/><path d=\"m21.1 60 1.5-1 3.1 2.7h.1l-1.2-4 1.3-.9 3.3 2.6h.1l-1.4-3.9 1.4-1 1.9 6.2-1.4 1-3.4-2.7-.1.1 1.2 4-1.3.9zm8.8-6 1.2-.8.5.7.1-.1c0-.3 0-.7.2-1s.4-.6.7-.8c.2-.2.5-.3.7-.3l.9 1.3c-.2.1-.4.1-.5.2-.1 0-.3.1-.4.2-.4.3-.6.6-.6 1.1 0 .4.1.9.4 1.3l1.7 2.5-1.5.7zm9.2 1.3c-.5.4-1.1.5-1.6.4-.6-.1-1-.4-1.4-.9-.2-.3-.3-.7-.4-1.1 0-.4.1-.7.3-1.1s.5-.7.9-.9c.5-.4 1-.6 1.5-.7l-.2-.2c-.2-.3-.5-.4-.8-.5-.3 0-.7.1-1 .3l-.6.6c-.1.3-.2.5-.2.8l-1.3-.1c0-.5.2-.9.4-1.4s.6-.8 1-1.1c.8-.5 1.5-.7 2.1-.7.6.1 1.2.5 1.7 1.1l2.1 3.1-1.3.9-.4-.5.1.3c0 .3-.1.6-.3.9-.1.3-.3.6-.6.8zm-.4-1.2c.4-.3.6-.6.6-1 .1-.4 0-.8-.3-1.1-.4.1-.8.2-1.2.5-.6.5-.8 1-.5 1.5.1.2.3.3.6.4.2 0 .5-.1.8-.3zm.7-6.7 1.2-.8.4.6.1-.1c0-.3.1-.6.2-.9.2-.3.4-.6.8-.9.5-.3.9-.5 1.5-.5.5 0 1 .1 1.5.3.5.3.9.6 1.3 1.2.4.5.6 1.1.6 1.6.1.5 0 1.1-.2 1.6s-.5.9-1 1.2c-.3.2-.7.4-1.1.4s-.7 0-1-.1l.6.7 1.4 2-1.3.9zm5.4 2.2c.2-.2.4-.4.5-.6.1-.3.2-.6.1-.9 0-.3-.1-.6-.3-.9s-.4-.5-.7-.6-.6-.2-.9-.2-.6.1-.8.3-.4.4-.6.7c-.1.3-.2.5-.1.9 0 .3.2.6.4.9s.4.5.7.6.6.2.9.2c.3-.1.5-.2.8-.4zm6.3-2.6c-.6.4-1.2.6-1.7.7-.5 0-1-.1-1.5-.4l.8-1.3c.3.2.5.2.8.2s.5-.1.8-.3c.2-.2.4-.3.5-.5s.1-.4 0-.5c-.1-.2-.3-.2-.5-.2s-.5.1-.8.2l-.7.3c-.5.2-.9.3-1.4.2-.4-.1-.8-.3-1.1-.7-.2-.3-.3-.6-.3-1s.1-.7.4-1c.2-.3.5-.6.9-.9 1-.7 2-.8 2.8-.3l-.8 1.3c-.4-.2-.9-.2-1.3.1-.2.2-.4.3-.5.5s-.1.3 0 .4c.2.2.5.3 1 .1l.9-.3c.6-.2 1.1-.3 1.5-.2s.8.3 1 .7c.2.3.3.7.3 1 0 .4-.1.7-.4 1.1 0 .2-.3.5-.7.8z\"/><path clip-rule=\"evenodd\" d=\"m414.8 310.3h312v54.2h-312z\" fill=\"#579c87\" fill-rule=\"evenodd\"/><path d=\"m414.8 310.3h312v54.2h-312z\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m593.5 351.3c0 .4.2.7.7.9s1.1.3 2 .3 1.5-.1 2.1-.4c.5-.2.8-.5.8-.9 0-.3-.2-.6-.5-.7s-.8-.2-1.4-.2h-2.3c-.2 0-.5-.1-.7-.1-.3.2-.5.3-.6.5 0 .2-.1.4-.1.6zm-2.6.5c0-.9.5-1.6 1.6-2.1v-.1c-.3-.2-.5-.4-.8-.7-.2-.3-.3-.7-.3-1.1s.1-.7.3-1.1.5-.7.9-.9v-.1c-.4-.3-.7-.6-1-1.1s-.4-1-.4-1.6.1-1.2.4-1.7c.2-.5.6-.9 1-1.2s.9-.6 1.4-.7c.6-.2 1.1-.2 1.7-.2.7 0 1.2.1 1.8.2h4.3v2.3h-2.2l.3.6c.1.3.2.5.2.8 0 .6-.1 1.1-.3 1.6-.2.4-.5.8-.9 1.1s-.8.5-1.4.7c-.5.1-1.1.2-1.7.2-.5 0-.9-.1-1.5-.2-.2.1-.3.2-.4.3s-.1.3-.1.4c0 .3.1.5.4.6s.8.2 1.4.2h2c1.4 0 2.5.2 3.2.6s1.1 1.1 1.1 2c0 .6-.2 1.1-.5 1.5-.3.5-.7.9-1.3 1.2-.5.3-1.2.6-2 .8s-1.7.3-2.6.3c-.7 0-1.3-.1-1.9-.2s-1.1-.3-1.5-.5-.8-.5-1-.8c0-.2-.2-.6-.2-1.1zm5-7.1c.4 0 .8-.1 1.1-.4s.5-.7.5-1.3-.2-1-.5-1.3-.7-.4-1.1-.4-.8.1-1.1.4-.5.7-.5 1.3.2 1 .5 1.3.7.4 1.1.4zm8.1-9.7h6.2v11c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm12.4 9.7c0-.9.1-1.7.4-2.3.3-.7.7-1.3 1.2-1.8s1.1-.8 1.7-1.1c.7-.2 1.3-.4 2-.4s1.4.1 2 .4c.7.2 1.2.6 1.7 1.1s.9 1.1 1.2 1.8.5 1.5.5 2.3c0 .9-.2 1.7-.5 2.4s-.7 1.3-1.2 1.7c-.5.5-1.1.8-1.7 1.1-.6.2-1.3.4-2 .4s-1.4-.1-2-.4c-.6-.2-1.2-.6-1.7-1.1s-.9-1-1.2-1.7c-.2-.7-.4-1.5-.4-2.4zm3.2 0c0 .9.2 1.7.5 2.2.4.5.9.8 1.6.8s1.3-.3 1.6-.8c.4-.5.5-1.3.5-2.2s-.2-1.6-.5-2.2c-.4-.5-.9-.8-1.6-.8s-1.3.3-1.6.8c-.3.6-.5 1.3-.5 2.2zm10.2-9.7h3.1v3.7l-.1 1.7c.4-.4.9-.7 1.4-.9s1-.3 1.5-.3c.7 0 1.2.1 1.8.4.5.2 1 .6 1.3 1.1s.6 1 .8 1.7.3 1.4.3 2.2c0 .9-.1 1.7-.4 2.4-.2.7-.6 1.3-1 1.8s-.9.9-1.5 1.1c-.5.3-1.1.4-1.7.4-.5 0-1-.1-1.5-.4-.5-.2-1-.6-1.4-1h-.1l-.3 1.2h-2.5v-15.1zm3.1 12c.3.3.6.4.9.5s.6.2.9.2c.6 0 1.1-.2 1.5-.7s.6-1.3.6-2.4c0-1.9-.6-2.9-1.9-2.9-.7 0-1.3.3-2 1zm9.4.1c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1.6-.3 1.3-.6 2.2-.8s2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.1c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c-.1-.6-.2-1-.2-1.4zm3-.3c0 .3.1.6.4.8s.6.3 1.1.2c.5 0 .9-.1 1.3-.3s.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.1.3-.2.5-.2.7zm9.8-11.8h6.2v11c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm16.3 3.7h-4.2v-2.6h11.5v2.6h-4.2v11.3h-3.2v-11.3zm9.5-3.7h3.1v3.7l-.2 2c.2-.2.4-.4.7-.6s.5-.4.8-.5c.3-.2.6-.3 1-.4s.7-.1 1.1-.1c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.1v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-15zm13 4.4h7.4v10.6h-3.1v-8.1h-4.2v-2.5zm5.7-1.5c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4c-.4.3-.9.5-1.5.5zm7.9 8.8c.6.4 1.2.7 1.8.9s1.3.3 2 .3 1.2-.1 1.6-.2c.3-.2.5-.4.5-.7s-.3-.6-.8-.8-1.2-.4-2.1-.7c-.5-.1-.9-.3-1.4-.5l-1.2-.6c-.4-.2-.6-.5-.9-.9-.2-.3-.3-.7-.3-1.1 0-.5.1-.9.3-1.3s.6-.8 1-1c.4-.3.9-.5 1.5-.7s1.3-.2 2-.2c.9 0 1.8.2 2.6.5s1.4.6 2 1l-1.4 1.9c-.5-.3-1-.5-1.5-.7s-1-.3-1.6-.3c-.7 0-1.1.1-1.4.2s-.4.4-.4.6.1.3.2.4.3.2.6.3c.2.1.5.2.9.3.3.1.7.2 1 .3.5.1 1 .3 1.5.5s.9.4 1.2.6c.4.2.6.5.8.9.2.3.3.7.3 1.2s-.1.9-.3 1.3-.6.8-1 1.1-1 .5-1.6.7-1.4.3-2.2.3c-.9 0-1.9-.2-2.8-.5s-1.7-.7-2.4-1.1z\" fill=\"#fff\"/><path clip-rule=\"evenodd\" d=\"m726.8 337.4c12.5 0 33.6-49.4 25-98.8s-47-98.8-93.9-98.8\" fill=\"none\"/><path d=\"m726.8 337.4c12.5 0 33.6-49.4 25-98.8-4.3-24.7-16-49.4-32.6-67.9-8.3-9.3-17.7-17-28.1-22.4-5.2-2.7-10.5-4.8-16.1-6.3-1.4-.4-2.8-.7-4.2-1-.2 0-.4-.1-.5-.1l-.5-.1\" fill=\"none\" stroke=\"#595959\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/><path d=\"m670.1 137.5-9.3 2.5 8.7 4.1z\" style=\"fill-rule:evenodd;clip-rule:evenodd;fill:#595959;stroke:#595959;stroke-width:2;stroke-miterlimit:10\"/><path clip-rule=\"evenodd\" d=\"m90 310.3h312v54.2h-312z\" fill=\"#434343\" fill-rule=\"evenodd\"/><path d=\"m90 310.3h312v54.2h-312z\" fill=\"none\" stroke=\"#000\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m166.4 341.9h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.5h-4.5v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9zm10.6-6.9h3.1v3.7l-.2 2c.2-.2.4-.4.7-.6s.5-.4.8-.5c.3-.2.6-.3 1-.4s.7-.1 1.1-.1c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.1v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.2zm12.9 4.4h7.4v10.6h-3.1v-8.1h-4.2v-2.5zm5.7-1.5c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4c-.4.3-.9.5-1.5.5zm8 8.8c.6.4 1.2.7 1.8.9s1.3.3 2 .3 1.2-.1 1.6-.2c.3-.2.5-.4.5-.7s-.3-.6-.8-.8-1.2-.4-2.1-.7c-.5-.1-.9-.3-1.4-.5l-1.2-.6c-.4-.2-.6-.5-.9-.9-.2-.3-.3-.7-.3-1.1 0-.5.1-.9.3-1.3s.6-.8 1-1c.4-.3.9-.5 1.5-.7s1.3-.2 2-.2c.9 0 1.8.2 2.6.5s1.4.6 2 1l-1.4 1.9c-.5-.3-1-.5-1.5-.7s-1-.3-1.6-.3c-.7 0-1.1.1-1.4.2s-.4.4-.4.6.1.3.2.4.3.2.6.3c.2.1.5.2.9.3.3.1.7.2 1 .3.5.1 1 .3 1.5.5s.9.4 1.2.6c.4.2.6.5.8.9.2.3.3.7.3 1.2s-.1.9-.3 1.3-.6.8-1 1.1-1 .5-1.6.7-1.4.3-2.2.3c-.9 0-1.9-.2-2.8-.5s-1.7-.7-2.4-1.1zm24.6-6.8h9.8v2.2h-9.8zm0 4h9.8v2.2h-9.8zm12.7-4h9.8v2.2h-9.8zm0 4h9.8v2.2h-9.8zm12.8-4h9.8v2.2h-9.8zm0 4h9.8v2.2h-9.8zm35.3 6.1h-2.6l-.2-1.5h-.1c-.5.5-1 1-1.6 1.3s-1.2.5-2 .5c-1.2 0-2.1-.4-2.6-1.1-.5-.8-.8-1.8-.8-3.2v-6.5h3.1v6.1c0 .7.1 1.2.3 1.6.2.3.6.5 1.2.5.4 0 .7-.1 1-.2.3-.2.6-.5 1-1v-7h3.1v10.5zm3.2-10.6h2.6l.2 1.4h.1c.4-.5 1-.8 1.6-1.2s1.3-.5 2.1-.5c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.2v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-10.6zm12.2 5.3c0-.9.1-1.6.4-2.3s.6-1.3 1-1.7c.4-.5.9-.8 1.5-1.1.5-.3 1.1-.4 1.7-.4s1.1.1 1.5.3.8.5 1.2.8l-.1-1.6v-3.7h3.1v15h-2.6l-.2-1.1h-.1c-.4.4-.9.7-1.4 1s-1 .4-1.6.4c-.7 0-1.3-.1-1.8-.4s-1-.6-1.4-1.1-.7-1.1-.9-1.7c-.2-.7-.3-1.5-.3-2.4zm3.3 0c0 1.1.2 1.8.5 2.3.4.5.9.7 1.5.7.4 0 .7-.1 1-.2.3-.2.6-.4.9-.8v-4.3c-.3-.2-.6-.4-.9-.5s-.6-.2-.9-.2c-.6 0-1.1.2-1.5.7s-.6 1.3-.6 2.3zm9.7 0c0-.9.2-1.6.5-2.3s.7-1.3 1.2-1.7c.5-.5 1.1-.8 1.8-1.1s1.4-.4 2.1-.4c.8 0 1.5.1 2.2.4.6.2 1.1.6 1.5 1.1.4.4.7 1 .9 1.6s.3 1.3.3 2v.8c0 .3 0 .4-.1.6h-7.1c.1.8.5 1.4 1 1.7.6.3 1.3.5 2 .5.5 0 .9-.1 1.4-.2.4-.1.9-.3 1.4-.5l1 1.9c-.6.4-1.3.7-2 .9s-1.5.3-2.2.3c-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1.1-1.2-1.7-.3-.7-.5-1.5-.5-2.4zm7.6-1.1c0-.6-.2-1.1-.5-1.5s-.8-.6-1.6-.6c-.6 0-1.1.2-1.5.5s-.7.8-.9 1.5h4.5zm15.9-5.9c-.7-.3-1.4-.4-2.2-.4-.7 0-1.2.2-1.5.5s-.5.8-.5 1.4v.3h3.7v2.5h-3.7v8.1h-3.1v-8.1h-2.8v-2.3l2.8-.1v-.3c0-.6.1-1.2.3-1.7s.5-1 .9-1.4.9-.7 1.5-.9 1.3-.3 2.1-.3c.6 0 1.2.1 1.7.2s1 .2 1.5.4zm2.6 1.7h7.4v10.6h-3.1v-8.1h-4.2v-2.5zm5.7-1.5c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4c-.4.3-.9.5-1.5.5zm7 1.5h2.6l.2 1.4h.1c.4-.5 1-.8 1.6-1.2s1.3-.5 2.1-.5c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.2v-6.1c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-10.6zm12.4 5.3c0-.9.2-1.6.5-2.3s.7-1.3 1.2-1.7c.5-.5 1.1-.8 1.8-1.1s1.4-.4 2.1-.4c.8 0 1.5.1 2.2.4.6.2 1.1.6 1.5 1.1.4.4.7 1 .9 1.6s.3 1.3.3 2v.8c0 .3 0 .4-.1.6h-7.1c.1.8.5 1.4 1 1.7.6.3 1.3.5 2 .5.5 0 .9-.1 1.4-.2.4-.1.9-.3 1.4-.5l1 1.9c-.6.4-1.3.7-2 .9s-1.5.3-2.2.3c-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1.1-1.2-1.7-.4-.7-.5-1.5-.5-2.4zm7.6-1.1c0-.6-.2-1.1-.5-1.5s-.8-.6-1.6-.6c-.6 0-1.1.2-1.5.5s-.7.8-.9 1.5h4.5zm5 1.1c0-.9.1-1.6.4-2.3s.6-1.3 1-1.7c.4-.5.9-.8 1.5-1.1.5-.3 1.1-.4 1.7-.4s1.1.1 1.5.3.8.5 1.2.8l-.1-1.6v-3.7h3.1v15h-2.6l-.2-1.1h-.1c-.4.4-.9.7-1.4 1s-1 .4-1.6.4c-.7 0-1.3-.1-1.8-.4s-1-.6-1.4-1.1-.7-1.1-.9-1.7c-.2-.7-.3-1.5-.3-2.4zm3.2 0c0 1.1.2 1.8.5 2.3.4.5.9.7 1.5.7.4 0 .7-.1 1-.2.3-.2.6-.4.9-.8v-4.3c-.3-.2-.6-.4-.9-.5s-.6-.2-.9-.2c-.6 0-1.1.2-1.5.7s-.6 1.3-.6 2.3z\" fill=\"#fff\"/><path clip-rule=\"evenodd\" d=\"m115.1 7.8h610.6v57.8h-610.6z\" fill=\"#c00\" fill-rule=\"evenodd\"/><path d=\"m115.1 7.8h610.6v57.8h-610.6z\" fill=\"none\" stroke=\"#600\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\"/><path d=\"m387.7 24h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.4h-4.5v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9zm10.6-6.9h3.1v3.7l-.2 2c.2-.2.4-.4.7-.6s.5-.4.8-.5c.3-.2.6-.3 1-.4s.7-.1 1.1-.1c1.2 0 2.1.4 2.6 1.2.6.8.8 1.8.8 3.1v6.5h-3.1v-6c0-.7-.1-1.2-.3-1.5s-.6-.5-1.2-.5c-.4 0-.8.1-1.1.3s-.7.5-1 .8v7.1h-3.1v-15.1zm12.5 9.7c0-.9.2-1.6.5-2.3s.7-1.3 1.2-1.7c.5-.5 1.1-.8 1.8-1.1s1.4-.4 2.1-.4c.8 0 1.5.1 2.2.4.6.2 1.1.6 1.5 1.1.4.4.7 1 .9 1.6s.3 1.3.3 2v.8c0 .2 0 .4-.1.6h-7.2c.1.8.5 1.4 1 1.7.6.3 1.3.5 2 .5.5 0 .9-.1 1.4-.2.4-.1.9-.3 1.4-.5l1 1.9c-.6.4-1.3.7-2 .9s-1.5.3-2.2.3c-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1.1-1.2-1.7-.3-.7-.4-1.5-.4-2.4zm7.6-1.1c0-.6-.2-1.1-.5-1.5s-.8-.6-1.6-.6c-.6 0-1.1.2-1.5.5s-.7.8-.9 1.5h4.5zm18.1 3.5c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1.6-.3 1.3-.6 2.2-.8s2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.7l-.2-1.2h-.1c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c0-.6-.1-1-.1-1.4zm3-.3c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.1.3-.2.5-.2.7zm9.9-2.1c0-.9.2-1.7.5-2.3.3-.7.8-1.3 1.3-1.8.6-.5 1.2-.8 2-1.1.7-.2 1.5-.4 2.3-.4s1.6.1 2.3.4 1.2.6 1.7 1l-1.5 1.9c-.8-.6-1.6-.8-2.3-.8-.9 0-1.6.3-2.2.8s-.8 1.3-.8 2.2.3 1.7.8 2.2c.6.5 1.3.8 2.1.8.6 0 1.1-.1 1.5-.3.5-.2.9-.4 1.2-.7l1.3 2c-.6.5-1.3.9-2.1 1.2-.8.2-1.5.4-2.2.4-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1s-.9-1-1.2-1.7c-.3-.6-.5-1.4-.5-2.3zm15.1-2.8h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.4h-4.5v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9zm20.3 8.1h-2.6l-.2-1.5h-.1c-.5.5-1 1-1.6 1.3s-1.2.5-2 .5c-1.2 0-2.1-.4-2.6-1.1-.5-.8-.8-1.8-.8-3.2v-6.5h3.1v6.1c0 .7.1 1.2.3 1.6.2.3.6.5 1.2.5.4 0 .7-.1 1-.2.3-.2.6-.5 1-1v-7h3.1v10.5zm2.9-2.9c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1s1.3-.6 2.2-.8 2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.1c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c-.2-.6-.2-1-.2-1.4zm3-.3c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.2.3-.2.5-.2.7zm9.8-11.8h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm29.7 1.8c-.8.3-1.3.8-1.7 1.2-.4.5-.6 1.1-.7 1.7.1 0 .3-.1.5-.1.6 0 1 .2 1.4.5s.5.8.5 1.4c0 .7-.2 1.2-.6 1.6s-.9.6-1.5.6c-.8 0-1.4-.3-1.9-.9-.4-.6-.6-1.4-.6-2.5 0-1.2.3-2.2.9-3.1s1.6-1.6 2.8-2.2zm6 0c-.8.3-1.3.8-1.7 1.2-.4.5-.6 1.1-.7 1.7.1 0 .3-.1.5-.1.6 0 1 .2 1.4.5s.5.8.5 1.4c0 .7-.2 1.2-.6 1.6s-.9.6-1.5.6c-.8 0-1.4-.3-1.9-.9-.4-.6-.6-1.4-.6-2.5 0-1.2.3-2.2.9-3.1s1.6-1.6 2.8-2.2zm5 14.5c0 .4.2.7.7.9s1.1.3 2 .3 1.5-.1 2.1-.4c.5-.2.8-.5.8-.9 0-.3-.2-.6-.5-.7s-.8-.2-1.4-.2h-2.3c-.2 0-.5-.1-.7-.1-.3.2-.5.3-.6.5 0 .2-.1.4-.1.6zm-2.5.5c0-.9.5-1.6 1.6-2.1v-.1c-.3-.2-.5-.4-.8-.7-.2-.3-.3-.7-.3-1.1s.1-.7.3-1.1.5-.7.9-.9v-.1c-.4-.3-.7-.6-1-1.1s-.4-1-.4-1.6.1-1.2.4-1.7c.2-.5.6-.9 1-1.2s.9-.6 1.4-.7c.6-.2 1.1-.2 1.7-.2.7 0 1.2.1 1.8.2h4.3v2.3h-2.2l.3.6c.1.2.2.5.2.8 0 .6-.1 1.1-.3 1.6-.2.4-.5.8-.9 1.1s-.8.5-1.4.7c-.5.1-1.1.2-1.7.2-.5 0-.9-.1-1.5-.2-.2.1-.3.2-.4.3s-.1.3-.1.4c0 .3.1.5.4.6s.8.2 1.4.2h2c1.4 0 2.5.2 3.2.6s1.1 1.1 1.1 2c0 .6-.2 1.1-.5 1.5-.3.5-.7.9-1.3 1.2-.5.3-1.2.6-2 .8s-1.7.3-2.6.3c-.7 0-1.3-.1-1.9-.2s-1.1-.3-1.5-.5-.8-.5-1-.8c-.1-.2-.2-.6-.2-1.1zm4.9-7.1c.4 0 .8-.1 1.1-.4s.5-.7.5-1.3-.2-1-.5-1.3-.7-.4-1.1-.4-.8.1-1.1.4-.5.7-.5 1.3.2 1 .5 1.3.7.4 1.1.4zm8.1-9.7h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm12.5 9.7c0-.9.1-1.7.4-2.3.3-.7.7-1.3 1.2-1.8s1.1-.8 1.7-1.1c.7-.2 1.3-.4 2-.4s1.4.1 2 .4c.7.2 1.2.6 1.7 1.1s.9 1.1 1.2 1.8.5 1.5.5 2.3c0 .9-.2 1.7-.5 2.4s-.7 1.3-1.2 1.7c-.5.5-1.1.8-1.7 1.1-.6.2-1.3.4-2 .4s-1.4-.1-2-.4c-.6-.2-1.2-.6-1.7-1.1s-.9-1-1.2-1.7-.4-1.5-.4-2.4zm3.2 0c0 .9.2 1.7.5 2.2.4.5.9.8 1.6.8s1.3-.3 1.6-.8c.4-.5.5-1.3.5-2.2s-.2-1.6-.5-2.2c-.4-.5-.9-.8-1.6-.8s-1.3.3-1.6.8c-.3.6-.5 1.3-.5 2.2zm10.1-9.7h3.1v3.7l-.1 1.7c.4-.4.9-.7 1.4-.9s1-.3 1.5-.3c.7 0 1.2.1 1.8.4.5.2 1 .6 1.3 1.1.4.5.6 1 .8 1.7s.3 1.4.3 2.2c0 .9-.1 1.7-.4 2.4-.2.7-.6 1.3-1 1.8s-.9.9-1.5 1.1c-.5.3-1.1.4-1.7.4-.5 0-1-.1-1.5-.4-.5-.2-1-.6-1.4-1h-.1l-.3 1.2h-2.5v-15.1zm3.1 12c.3.2.6.4.9.5s.6.2.9.2c.6 0 1.1-.2 1.5-.7s.6-1.3.6-2.4c0-1.9-.6-2.9-1.9-2.9-.7 0-1.3.3-2 1zm9.4.1c0-.6.1-1.1.4-1.6.3-.4.7-.8 1.2-1.1s1.3-.6 2.2-.8 2-.3 3.2-.4c-.1-.5-.3-.9-.6-1.1-.4-.3-.9-.4-1.6-.4-.5 0-1 .1-1.5.3s-1.1.4-1.7.7l-1.1-2c.7-.4 1.5-.8 2.3-1 .8-.3 1.7-.4 2.6-.4 1.5 0 2.6.4 3.5 1.2s1.3 2 1.3 3.6v6.1h-2.6l-.2-1.2h-.1c-.5.4-1.1.8-1.8 1-.6.3-1.3.4-2 .4-.5 0-1-.1-1.5-.2-.4-.2-.8-.4-1.1-.7s-.5-.6-.7-1c-.1-.6-.2-1-.2-1.4zm3.1-.3c0 .3.1.6.4.8s.6.2 1.1.2.9-.1 1.3-.3.8-.4 1.2-.7v-1.8c-.8 0-1.4.1-2 .2-.5.1-.9.2-1.2.4-.3.1-.5.3-.6.5-.2.3-.2.5-.2.7zm9.8-11.8h6.2v10.9c0 .3 0 .6.1.8s.2.4.4.5l.6.3c.2.1.4.1.6.1s.5 0 .8-.1.6-.1.9-.3l.7 2.3c-.3.1-.6.2-.8.2-.2.1-.5.1-.7.2s-.5.1-.8.1h-.9c-1.3 0-2.3-.4-3-1.2s-1-1.9-1-3.2v-8.3h-3.1zm25.2 9.7c0-.9.1-1.7.4-2.3.3-.7.7-1.3 1.2-1.8s1.1-.8 1.7-1.1c.7-.2 1.3-.4 2-.4s1.4.1 2 .4c.7.2 1.2.6 1.7 1.1s.9 1.1 1.2 1.8.5 1.5.5 2.3c0 .9-.2 1.7-.5 2.4s-.7 1.3-1.2 1.7c-.5.5-1.1.8-1.7 1.1-.6.2-1.3.4-2 .4s-1.4-.1-2-.4c-.6-.2-1.2-.6-1.7-1.1s-.9-1-1.2-1.7c-.2-.7-.4-1.5-.4-2.4zm3.3 0c0 .9.2 1.7.5 2.2.4.5.9.8 1.6.8s1.3-.3 1.6-.8c.4-.5.5-1.3.5-2.2s-.2-1.6-.5-2.2c-.4-.5-.9-.8-1.6-.8s-1.3.3-1.6.8c-.4.6-.5 1.3-.5 2.2zm10.1-9.7h3.1v3.7l-.1 1.7c.4-.4.9-.7 1.4-.9s1-.3 1.5-.3c.7 0 1.2.1 1.8.4.5.2 1 .6 1.3 1.1.4.5.6 1 .8 1.7s.3 1.4.3 2.2c0 .9-.1 1.7-.4 2.4-.2.7-.6 1.3-1 1.8s-.9.9-1.5 1.1c-.5.3-1.1.4-1.7.4-.5 0-1-.1-1.5-.4-.5-.2-1-.6-1.4-1h-.1l-.3 1.2h-2.5v-15.1zm3.1 12c.3.2.6.4.9.5s.6.2.9.2c.6 0 1.1-.2 1.5-.7s.6-1.3.6-2.4c0-1.9-.6-2.9-1.9-2.9-.7 0-1.3.3-2 1zm9.8-7.6h7.4v9.9c0 .6-.1 1.2-.2 1.8s-.4 1.1-.8 1.5-.9.8-1.5 1.1-1.4.4-2.4.4c-.7 0-1.2-.1-1.8-.2-.5-.1-1-.3-1.5-.5l.9-2.2c.4.2.8.3 1.2.4s.7.1 1 .1c.8 0 1.3-.2 1.5-.5.3-.4.4-.9.4-1.7v-7.6h-4.2zm5.7-1.5c-.6 0-1.1-.2-1.5-.5s-.6-.8-.6-1.4.2-1.1.6-1.4c.4-.4.9-.5 1.5-.5s1.1.2 1.5.5c.4.4.6.8.6 1.4s-.2 1-.6 1.4c-.4.3-.9.5-1.5.5zm6.6 6.8c0-.9.2-1.6.5-2.3s.7-1.3 1.2-1.7c.5-.5 1.1-.8 1.8-1.1s1.4-.4 2.1-.4c.8 0 1.5.1 2.2.4.6.2 1.1.6 1.5 1.1.4.4.7 1 .9 1.6s.3 1.3.3 2v.8c0 .2 0 .4-.1.6h-7.1c.1.8.5 1.4 1 1.7.6.3 1.3.5 2 .5.5 0 .9-.1 1.4-.2.4-.1.9-.3 1.4-.5l1 1.9c-.6.4-1.3.7-2 .9s-1.5.3-2.2.3c-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1.1-1.2-1.7-.4-.7-.5-1.5-.5-2.4zm7.6-1.1c0-.6-.2-1.1-.5-1.5s-.8-.6-1.6-.6c-.6 0-1.1.2-1.5.5s-.7.8-.9 1.5h4.5zm5.4 1.1c0-.9.2-1.7.5-2.3.3-.7.8-1.3 1.3-1.8.6-.5 1.2-.8 2-1.1.7-.2 1.5-.4 2.3-.4s1.6.1 2.3.4 1.2.6 1.7 1l-1.5 1.9c-.8-.6-1.6-.8-2.3-.8-.9 0-1.6.3-2.2.8s-.8 1.3-.8 2.2.3 1.7.8 2.2c.6.5 1.3.8 2.1.8.6 0 1.1-.1 1.5-.3.5-.2.9-.4 1.2-.7l1.3 2c-.6.5-1.3.9-2.1 1.2-.8.2-1.5.4-2.2.4-.8 0-1.6-.1-2.3-.4-.7-.2-1.3-.6-1.9-1.1-.5-.5-.9-1-1.2-1.7-.3-.6-.5-1.4-.5-2.3zm15.1-2.8h-2.7v-2.3l2.8-.1.4-2.8h2.6v2.8h4.5v2.4h-4.4v3.7c0 .8.2 1.4.5 1.7.4.3.9.5 1.7.5.4 0 .8 0 1.1-.1s.7-.2 1-.3l.6 2.3c-.5.1-1 .3-1.6.4s-1.2.2-1.9.2c-.8 0-1.6-.1-2.1-.3-.6-.2-1.1-.5-1.4-1-.4-.4-.6-.9-.8-1.5s-.2-1.2-.2-1.9v-3.7zm10.4.3c1.5-.7 2.3-1.7 2.4-3-.2 0-.3.1-.4.1-.6 0-1.1-.2-1.4-.5-.4-.4-.5-.8-.5-1.4s.2-1.2.6-1.5c.4-.4.9-.6 1.5-.6.8 0 1.4.3 1.8.9s.6 1.4.6 2.5c0 1.2-.3 2.2-.9 3.1s-1.5 1.6-2.8 2.2zm6 0c1.5-.7 2.3-1.7 2.4-3-.2 0-.3.1-.4.1-.6 0-1.1-.2-1.4-.5-.4-.4-.5-.8-.5-1.4s.2-1.2.6-1.5c.4-.4.9-.6 1.5-.6.8 0 1.4.3 1.8.9s.6 1.4.6 2.5c0 1.2-.3 2.2-.9 3.1s-1.5 1.6-2.8 2.2zm-506 31.5c-1.1-.9-2-1.9-2.6-3.1s-1-2.6-1-4.2c0-1.5.3-2.9 1-4.1.6-1.2 1.5-2.3 2.6-3.1l.7.7c-1.1.9-1.9 1.9-2.4 3s-.8 2.3-.8 3.6c0 1.4.2 2.6.8 3.6.5 1.1 1.3 2 2.4 3zm2.9-13.3h1.3l.9 6.6c0 .4.1.9.1 1.3.1.4.1.8.1 1.3.1-.4.2-.9.3-1.3s.2-.9.3-1.3l1.1-3.9h.9l1.1 3.9c.1.4.2.9.3 1.3s.2.9.4 1.3h.1c0-.4.1-.9.1-1.3s.1-.9.1-1.3l.8-6.6h1.3l-1.5 10.5h-1.5l-1.2-4.4c-.1-.3-.1-.6-.2-.9s-.1-.6-.2-.9c-.1.3-.1.6-.2.9s-.1.6-.2.9l-1.2 4.4h-1.4zm10.8 2.7h4.9v7.8h-1.3v-6.7h-3.6zm4.2-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3c.3 0 .6.1.8.3s.3.4.3.7-.1.6-.3.8c-.3.2-.5.3-.8.3zm5.5 1.6h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.9h-1.3v-4.7c0-.7-.1-1.3-.4-1.6-.3-.4-.7-.5-1.4-.5-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm9.1 3.9c0-.6.1-1.2.3-1.7s.5-.9.8-1.3.7-.6 1.1-.8.9-.3 1.3-.3c.5 0 .9.1 1.2.3.4.2.7.4 1.1.7v-4.5h1.3v11.5h-1.1l-.1-1c-.3.3-.7.6-1.1.9-.4.2-.9.4-1.4.4s-1-.1-1.4-.3-.8-.5-1.1-.8-.5-.8-.7-1.3c-.2-.6-.2-1.1-.2-1.8zm1.3 0c0 .9.2 1.7.6 2.2s1 .8 1.7.8c.8 0 1.5-.4 2.2-1.2v-3.9c-.4-.3-.7-.6-1-.7s-.7-.2-1-.2-.7.1-1 .2-.5.3-.8.6c-.2.3-.4.6-.5.9-.1.4-.2.8-.2 1.3zm8.3 0c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm7.4-3.9h1.3l1 4.5c.1.4.1.7.2 1.1s.1.7.2 1.1h.1c.1-.4.1-.7.2-1.1s.2-.7.2-1.1l.9-4h1.1l1 4c.1.4.2.7.2 1.1.1.4.2.7.2 1.1h.1c.1-.4.2-.7.2-1.1.1-.4.1-.7.2-1.1l.9-4.5h1.2l-1.7 7.8h-1.6l-.9-3.9c-.1-.4-.1-.7-.2-1.1s-.1-.7-.2-1.1h-.1c-.1.3-.1.7-.2 1-.1.4-.1.8-.2 1.2l-.9 3.9h-1.6zm13 .6c0-.4.1-.7.4-1 .2-.3.6-.4.9-.4.4 0 .7.1.9.4.2.2.4.6.4 1s-.1.7-.4 1c-.2.2-.6.4-.9.4-.4 0-.7-.1-.9-.4-.3-.2-.4-.6-.4-1zm-.3 9.8c.7-.3 1.2-.7 1.5-1.1s.5-.9.5-1.6h-.4c-.3 0-.6-.1-.9-.3-.2-.2-.4-.5-.4-.9s.1-.7.4-.9.6-.3.9-.3c.5 0 .8.2 1.1.6.2.4.4.9.4 1.5 0 .9-.2 1.7-.8 2.4-.5.6-1.2 1.1-2.1 1.5zm17.8-4.5c.4.3.9.6 1.4.8s1.1.3 1.8.3 1.2-.1 1.6-.3c.3-.2.5-.5.5-.9 0-.3-.2-.6-.6-.8s-1-.5-2-.7c-.4-.1-.8-.2-1.2-.4-.4-.1-.7-.3-.9-.5-.3-.2-.5-.4-.6-.6-.2-.2-.2-.5-.2-.8s.1-.6.2-.9.4-.5.6-.7c.3-.2.6-.4 1-.5s.9-.2 1.4-.2c.6 0 1.2.1 1.7.3.6.2 1 .4 1.4.7l-.6.8c-.3-.3-.7-.4-1.1-.6-.4-.1-.9-.2-1.3-.2s-.7 0-.9.1-.4.1-.6.2c-.1.1-.3.2-.3.4-.1.1-.1.3-.1.4 0 .3.2.6.7.8.4.2 1 .4 1.7.6 1.1.3 1.8.6 2.3.9s.8.8.8 1.4c0 .3-.1.6-.2.9s-.4.5-.7.7-.7.4-1.1.5-.9.2-1.5.2c-.8 0-1.5-.1-2.1-.4-.6-.2-1.2-.5-1.7-.9zm7.9-5.9h1.3l1 4.5c.1.4.1.7.2 1.1s.1.7.2 1.1h.1c.1-.4.1-.7.2-1.1s.2-.7.2-1.1l.9-4h1.1l1 4c.1.4.2.7.2 1.1.1.4.2.7.2 1.1h.1c.1-.4.2-.7.2-1.1.1-.4.1-.7.2-1.1l.9-4.5h1.2l-1.7 7.8h-1.6l-.9-3.9c-.1-.4-.1-.7-.2-1.1s-.1-.7-.2-1.1h-.1c-.1.3-.1.7-.2 1-.1.4-.1.8-.2 1.2l-.9 3.9h-1.6zm10.8 5.8c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4c-.3-.1-.6-.2-1-.2-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7-.3-.6-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2c.2.1.4.1.6.1.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5.1.2 0 .4 0 .7zm9.8 2.7v2.6h-1.3v-11h1.1l.1 1c.4-.3.8-.6 1.2-.8.5-.2 1-.3 1.4-.3.5 0 1 .1 1.4.3s.7.5 1 .8.5.8.6 1.2c.1.5.2 1 .2 1.6 0 .7-.1 1.2-.3 1.8-.2.5-.4 1-.8 1.3-.3.4-.7.6-1.1.8s-.9.3-1.3.3-.8-.1-1.2-.3-.8-.4-1.2-.7zm0-2.5c.4.3.8.6 1.1.7.4.1.7.2 1 .2.7 0 1.3-.3 1.7-.8.4-.6.7-1.3.7-2.3 0-.4 0-.8-.1-1.2s-.2-.7-.4-.9c-.2-.3-.4-.4-.7-.6-.3-.1-.6-.2-1-.2-.3 0-.7.1-1.1.3s-.8.5-1.2.9zm9.6 2.5v2.6h-1.3v-11h1.1l.1 1c.4-.3.8-.6 1.2-.8.5-.2 1-.3 1.4-.3.5 0 1 .1 1.4.3s.7.5 1 .8.5.8.6 1.2c.1.5.2 1 .2 1.6 0 .7-.1 1.2-.3 1.8-.2.5-.4 1-.8 1.3-.3.4-.7.6-1.1.8s-.9.3-1.3.3-.8-.1-1.2-.3-.8-.4-1.2-.7zm0-2.5c.4.3.8.6 1.1.7.4.1.7.2 1 .2.7 0 1.3-.3 1.7-.8.4-.6.7-1.3.7-2.3 0-.4 0-.8-.1-1.2s-.2-.7-.4-.9c-.2-.3-.4-.4-.7-.6-.3-.1-.6-.2-1-.2-.3 0-.7.1-1.1.3s-.8.5-1.2.9zm7.9-2c0-.6.1-1.2.3-1.7s.5-.9.9-1.3.8-.6 1.2-.8c.5-.2 1-.3 1.5-.3.6 0 1 .1 1.5.3.4.2.8.4 1.1.8.3.3.5.7.7 1.1s.2.9.2 1.5v.7h-6.1c0 .4.1.8.2 1.1.2.3.4.6.6.8.3.2.6.4.9.5.4.1.7.2 1.2.2s.9-.1 1.2-.2c.4-.1.8-.3 1.1-.5l.5.9c-.4.2-.8.5-1.3.6-.5.2-1 .3-1.7.3-.6 0-1.1-.1-1.6-.3s-1-.5-1.3-.8c-.4-.3-.7-.8-.9-1.3-.1-.4-.2-1-.2-1.6zm6.3-.6c0-.8-.2-1.4-.6-1.8s-1-.6-1.7-.6c-.3 0-.6.1-.9.2s-.6.3-.8.5-.4.5-.6.8-.3.6-.3 1h4.9zm3.2.6c0-.6.1-1.2.3-1.7s.5-.9.8-1.3.7-.6 1.1-.8.9-.3 1.3-.3c.5 0 .9.1 1.2.3.4.2.7.4 1.1.7v-4.5h1.3v11.5h-1.1l-.1-1c-.3.3-.7.6-1.1.9-.4.2-.9.4-1.4.4s-1-.1-1.4-.3-.8-.5-1.1-.8-.5-.8-.7-1.3c-.2-.6-.2-1.1-.2-1.8zm1.3 0c0 .9.2 1.7.6 2.2s1 .8 1.7.8c.8 0 1.5-.4 2.2-1.2v-3.9c-.4-.3-.7-.6-1-.7s-.7-.2-1-.2-.7.1-1 .2-.5.3-.8.6c-.2.3-.4.6-.5.9-.1.4-.2.8-.2 1.3zm17.9 0c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm15.4 3.9h-1.1l-.1-1.4h-.1c-.4.5-.8.8-1.3 1.1s-1 .4-1.6.4c-.9 0-1.6-.3-2.1-.8-.4-.5-.6-1.3-.6-2.3v-4.8h1.3v4.7c0 .7.1 1.3.4 1.7s.7.5 1.4.5c.4 0 .8-.1 1.2-.3s.8-.6 1.2-1.1v-5.4h1.3v7.7zm4.8-6.7h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9.1.3.2.5.3.7.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm16.9 2.8c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm8.8-3.9h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.9h-1.3v-4.7c0-.7-.1-1.3-.4-1.6-.3-.4-.7-.5-1.4-.5-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm19.2 0h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.9h-1.3v-4.7c0-.7-.1-1.3-.4-1.6-.3-.4-.7-.5-1.4-.5-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm9.4 5.8c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4c-.3-.1-.6-.2-1-.2-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7-.3-.6-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2c.2.1.4.1.6.1.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5.1.2 0 .4 0 .7zm7.8-5.7h1.3l1.8 4.4c.2.4.3.8.5 1.2.1.4.3.7.4 1.1h.1c.1-.4.3-.7.4-1.1s.3-.8.5-1.2l1.8-4.4h1.3l-3.2 7.8h-1.6zm10.3 0h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3.6.1.8.3.3.4.3.7-.1.6-.3.8c-.3.2-.5.3-.8.3zm6.3 10.7c0 .4.2.7.6 1s1.1.4 1.9.4c.4 0 .9 0 1.2-.1.4-.1.7-.2.9-.4.3-.1.5-.3.6-.5s.2-.4.2-.6c0-.4-.2-.6-.5-.8-.3-.1-.7-.2-1.3-.2h-2.1c-.2 0-.4 0-.5-.1-.4.2-.6.4-.8.6-.1.2-.2.4-.2.7zm-1.1.1c0-.3.1-.6.3-.9s.5-.6 1-.8v-.1c-.2-.1-.4-.3-.6-.5s-.2-.5-.2-.8.1-.5.2-.8c.2-.3.4-.5.7-.7v-.1c-.3-.2-.5-.5-.7-.8s-.3-.8-.3-1.2.1-.8.2-1.1c.2-.3.4-.6.7-.9.3-.2.6-.4 1-.6.4-.1.8-.2 1.2-.2s.8.1 1.2.2h3.2v1h-2.1c.2.2.4.4.5.7s.2.6.2.9c0 .4-.1.8-.2 1.1s-.4.6-.6.8c-.3.2-.6.4-1 .5s-.8.2-1.2.2c-.2 0-.4 0-.7-.1-.2-.1-.4-.1-.7-.2-.4.2-.6.5-.6.9 0 .3.1.5.4.7.3.1.7.2 1.2.2h1.7c1 0 1.7.1 2.2.4s.7.7.7 1.4c0 .4-.1.7-.3 1s-.5.6-.9.9c-.4.2-.8.4-1.4.6-.5.1-1.1.2-1.8.2-1.1 0-2-.2-2.6-.6-.4-.1-.7-.6-.7-1.3zm3.5-4.8c.5 0 .9-.2 1.3-.5s.5-.8.5-1.3c0-.3-.1-.5-.2-.7s-.2-.4-.4-.6-.3-.3-.6-.4c-.2-.1-.5-.1-.7-.1-.3 0-.5 0-.7.1s-.4.2-.6.4-.3.3-.4.6c-.1.2-.1.5-.1.7 0 .6.2 1 .5 1.3.5.4.9.5 1.4.5zm6.2 1.4c0-.4.1-.8.3-1.1s.5-.6 1-.8 1-.4 1.8-.6c.7-.1 1.6-.3 2.6-.3 0-.3-.1-.5-.1-.8-.1-.2-.2-.4-.4-.6s-.4-.3-.6-.4c-.3-.1-.6-.2-1-.2-.5 0-1 .1-1.5.3s-.9.4-1.2.6l-.5-.9c.2-.1.4-.3.7-.4s.5-.3.8-.4l.9-.3c.3-.1.7-.1 1-.1 1.1 0 1.8.3 2.4.9.5.6.8 1.4.8 2.3v4.8h-1.1l-.1-1.1c-.4.3-.9.6-1.5.9-.5.2-1.1.4-1.6.4-.4 0-.7-.1-1-.2s-.6-.2-.8-.4-.4-.4-.6-.7-.3-.6-.3-.9zm1.3-.1c0 .2 0 .4.1.6s.2.3.4.4.3.2.5.2c.2.1.4.1.6.1.4 0 .9-.1 1.3-.3s.9-.5 1.3-.9v-2c-.8.1-1.5.2-2.1.3s-1 .3-1.4.4c-.3.2-.6.3-.7.5.1.2 0 .4 0 .7zm10.3-4.6h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9.1.3.2.5.3.7.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm7.8-1.1h4.9v7.8h-1.3v-6.7h-3.6zm4.1-1.6c-.3 0-.6-.1-.8-.3s-.3-.4-.3-.8c0-.3.1-.5.3-.7s.4-.3.8-.3.6.1.8.3.3.4.3.7-.1.6-.3.8c-.3.2-.5.3-.8.3zm5 5.5c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm8.8-3.9h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.9h-1.3v-4.7c0-.7-.1-1.3-.4-1.6-.3-.4-.7-.5-1.4-.5-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm11.6.6c0-.4.1-.7.4-1 .2-.3.6-.4.9-.4.4 0 .7.1.9.4.2.2.4.6.4 1s-.1.7-.4 1c-.2.2-.6.4-.9.4-.4 0-.7-.1-.9-.4-.3-.2-.4-.6-.4-1zm-.3 9.8c.7-.3 1.2-.7 1.5-1.1s.5-.9.5-1.6h-.4c-.3 0-.6-.1-.9-.3-.2-.2-.4-.5-.4-.9s.1-.7.4-.9.6-.3.9-.3c.5 0 .8.2 1.1.6.2.4.4.9.4 1.5 0 .9-.2 1.7-.8 2.4-.5.6-1.2 1.1-2.1 1.5zm17.5-10.4h1.1l.1 1.3h.1c.4-.4.8-.8 1.3-1.1s1-.4 1.6-.4c.9 0 1.6.3 2 .8s.7 1.3.7 2.3v4.9h-1.3v-4.7c0-.7-.1-1.3-.4-1.6-.3-.4-.7-.5-1.4-.5-.2 0-.5 0-.7.1s-.4.1-.6.3c-.2.1-.4.3-.6.4l-.6.6v5.4h-1.3zm9.1 3.9c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm10.6-2.8h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9.1.3.2.5.3.7.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm17 2.8c0-.6.1-1.2.3-1.7s.5-.9.9-1.3.8-.6 1.2-.8c.5-.2 1-.3 1.5-.3.6 0 1 .1 1.5.3.4.2.8.4 1.1.8.3.3.5.7.7 1.1s.2.9.2 1.5v.7h-6.1c0 .4.1.8.2 1.1.2.3.4.6.6.8.3.2.6.4.9.5.4.1.7.2 1.2.2s.9-.1 1.2-.2c.4-.1.8-.3 1.1-.5l.5.9c-.4.2-.8.5-1.3.6-.5.2-1 .3-1.7.3-.6 0-1.1-.1-1.6-.3s-1-.5-1.3-.8c-.4-.3-.7-.8-.9-1.3-.1-.4-.2-1-.2-1.6zm6.3-.6c0-.8-.2-1.4-.6-1.8s-1-.6-1.7-.6c-.3 0-.6.1-.9.2s-.6.3-.8.5-.4.5-.6.8-.3.6-.3 1h4.9zm6.2.4-2.7-3.8h1.5l1.2 1.7c.1.2.3.4.4.7.2.2.3.4.5.7h.1c.2-.2.3-.4.5-.7.1-.2.3-.5.4-.7l1.2-1.7h1.4l-2.8 3.9 3 3.9h-1.6l-1.4-1.8c-.2-.2-.3-.4-.5-.7s-.3-.5-.5-.7h-.1c-.2.2-.3.5-.5.7s-.3.5-.5.7l-1.3 1.8h-1.4zm8.4 4.7v2.6h-1.3v-11h1.1l.1 1c.4-.3.8-.6 1.2-.8.5-.2 1-.3 1.4-.3.5 0 1 .1 1.4.3s.7.5 1 .8.5.8.6 1.2c.1.5.2 1 .2 1.6 0 .7-.1 1.2-.3 1.8-.2.5-.4 1-.8 1.3-.3.4-.7.6-1.1.8s-.9.3-1.3.3-.8-.1-1.2-.3-.8-.4-1.2-.7zm0-2.5c.4.3.8.6 1.1.7.4.1.7.2 1 .2.7 0 1.3-.3 1.7-.8.4-.6.7-1.3.7-2.3 0-.4 0-.8-.1-1.2s-.2-.7-.4-.9c-.2-.3-.4-.4-.7-.6-.3-.1-.6-.2-1-.2-.3 0-.7.1-1.1.3s-.8.5-1.2.9zm7.8-2c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm9.1 2c.4.3.9.6 1.4.8s1.1.3 1.8.3 1.2-.1 1.6-.3c.3-.2.5-.5.5-.9 0-.3-.2-.6-.6-.8s-1-.5-2-.7c-.4-.1-.8-.2-1.2-.4-.4-.1-.7-.3-.9-.5-.3-.2-.5-.4-.6-.6-.2-.2-.2-.5-.2-.8s.1-.6.2-.9.4-.5.6-.7c.3-.2.6-.4 1-.5s.9-.2 1.4-.2c.6 0 1.2.1 1.7.3.6.2 1 .4 1.4.7l-.6.8c-.3-.3-.7-.4-1.1-.6-.4-.1-.9-.2-1.3-.2s-.7 0-.9.1-.4.1-.6.2c-.1.1-.3.2-.3.4-.1.1-.1.3-.1.4 0 .3.2.6.7.8.4.2 1 .4 1.7.6 1.1.3 1.8.6 2.3.9s.8.8.8 1.4c0 .3-.1.6-.2.9s-.4.5-.7.7-.7.4-1.1.5-.9.2-1.5.2c-.8 0-1.5-.1-2.1-.4-.6-.2-1.2-.5-1.7-.9zm8.9-2c0-.6.1-1.2.3-1.7s.5-.9.9-1.3.8-.6 1.2-.8c.5-.2 1-.3 1.5-.3.6 0 1 .1 1.5.3.4.2.8.4 1.1.8.3.3.5.7.7 1.1s.2.9.2 1.5v.7h-6.1c0 .4.1.8.2 1.1.2.3.4.6.6.8.3.2.6.4.9.5.4.1.7.2 1.2.2s.9-.1 1.2-.2c.4-.1.8-.3 1.1-.5l.5.9c-.4.2-.8.5-1.3.6-.5.2-1 .3-1.7.3-.6 0-1.1-.1-1.6-.3s-1-.5-1.3-.8c-.4-.3-.7-.8-.9-1.3-.1-.4-.2-1-.2-1.6zm6.3-.6c0-.8-.2-1.4-.6-1.8s-1-.6-1.7-.6c-.3 0-.6.1-.9.2s-.6.3-.8.5-.4.5-.6.8-.3.6-.3 1h4.9zm3.2.6c0-.6.1-1.2.3-1.7s.5-.9.8-1.3.7-.6 1.1-.8.9-.3 1.3-.3c.5 0 .9.1 1.2.3.4.2.7.4 1.1.7v-4.5h1.3v11.5h-1.1l-.1-1c-.3.3-.7.6-1.1.9-.4.2-.9.4-1.4.4s-1-.1-1.4-.3-.8-.5-1.1-.8-.5-.8-.7-1.3c-.2-.6-.2-1.1-.2-1.8zm1.3 0c0 .9.2 1.7.6 2.2s1 .8 1.7.8c.8 0 1.5-.4 2.2-1.2v-3.9c-.4-.3-.7-.6-1-.7s-.7-.2-1-.2-.7.1-1 .2-.5.3-.8.6c-.2.3-.4.6-.5.9-.1.4-.2.8-.2 1.3zm20.2-2.8h-2.2v-1l2.2-.1.2-2.2h1.1v2.2h3.8v1.1h-3.8v3.7c0 .4 0 .7.1.9.1.3.2.5.3.7.2.2.4.3.6.4.3.1.6.1 1 .1s.7 0 1-.1l.9-.3.3 1c-.4.1-.7.2-1.2.3-.4.1-.9.1-1.3.1-.6 0-1-.1-1.4-.2-.4-.2-.7-.4-.9-.7s-.4-.6-.5-1-.1-.8-.1-1.3v-3.6zm7.3 2.8c0-.6.1-1.2.3-1.7s.5-.9.8-1.3c.4-.4.8-.6 1.2-.8.5-.2 1-.3 1.5-.3s1 .1 1.5.3.9.4 1.2.8c.4.3.6.8.8 1.3s.3 1.1.3 1.7-.1 1.2-.3 1.7-.5.9-.8 1.3c-.4.3-.8.6-1.2.8-.5.2-.9.3-1.5.3-.5 0-1-.1-1.5-.3s-.9-.5-1.2-.8c-.4-.3-.6-.8-.8-1.3s-.3-1.1-.3-1.7zm1.3 0c0 .4.1.9.2 1.2.1.4.3.7.5.9.2.3.5.5.8.6s.6.2 1 .2.7-.1 1-.2.6-.3.8-.6.4-.6.5-.9c.1-.4.2-.8.2-1.2s-.1-.9-.2-1.2c-.1-.4-.3-.7-.5-1s-.5-.5-.8-.6-.6-.2-1-.2-.7.1-1 .2-.6.3-.8.6-.4.6-.5 1c-.1.3-.2.8-.2 1.2zm19.1 1.5c.3.5.7.8 1 1.1.4.2.8.3 1.2.3.8 0 1.3-.2 1.6-.6.4-.4.5-1 .5-1.9v-5.9h-4.4v-1.1h5.7v7.2c0 .5-.1 1-.2 1.4s-.3.8-.6 1.1-.6.6-1.1.8c-.4.2-1 .3-1.6.3s-1.2-.1-1.8-.4-1-.7-1.4-1.3zm9.3.1c.4.4.9.7 1.4 1 .5.2 1.1.4 1.6.4.8 0 1.3-.2 1.7-.5s.6-.7.6-1.2c0-.3-.1-.5-.2-.7s-.2-.3-.4-.5c-.2-.1-.4-.3-.6-.4s-.5-.2-.8-.3l-1.5-.7c-.3-.1-.5-.2-.8-.4s-.5-.3-.7-.5-.4-.5-.5-.8-.2-.6-.2-1 .1-.8.2-1.1c.2-.3.4-.6.7-.9s.7-.4 1.1-.6c.4-.1.9-.2 1.4-.2.7 0 1.3.1 1.8.4.6.2 1 .6 1.4.9l-.7.9c-.3-.3-.7-.5-1.1-.7s-.9-.3-1.4-.3c-.6 0-1.2.1-1.5.4-.4.3-.6.6-.6 1.1 0 .3.1.5.2.7s.3.3.4.5l.6.3c.2.1.5.2.7.3l1.5.6c.3.1.6.3.9.4.3.2.5.4.7.6s.4.5.5.8.2.6.2 1-.1.8-.3 1.2-.4.7-.7 1-.7.5-1.2.6-1 .2-1.6.2c-.8 0-1.5-.1-2.1-.4s-1.2-.7-1.7-1.1zm9.7 4.4c1.1-.9 1.9-1.9 2.4-3s.8-2.3.8-3.6c0-1.4-.3-2.6-.8-3.6-.5-1.1-1.3-2.1-2.4-3l.7-.7c1.1.9 2 1.9 2.6 3.1s1 2.6 1 4.1c0 1.6-.3 2.9-1 4.2-.6 1.2-1.5 2.2-2.6 3.1z\" fill=\"#fff\"/><path clip-rule=\"evenodd\" d=\"m47.3 139.8c-12.5 0-33.5-25.8-25-51.5s46.4-51.5 92.8-51.5\" fill=\"none\"/><path d=\"m47.3 139.8c-12.5 0-33.5-25.8-25-51.5 4.2-12.9 15.8-25.8 32.2-35.4 8.2-4.9 17.5-8.9 27.7-11.8 5.1-1.4 10.4-2.5 15.9-3.3 1.4-.2 2.8-.4 4.2-.5l.8-.1\" style=\"fill:none;stroke:#595959;stroke-width:2;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:2 6\"/><path d=\"m103.3 40.6 8.9-3.7-9.2-2.9z\" style=\"fill-rule:evenodd;clip-rule:evenodd;fill:#595959;stroke:#595959;stroke-width:2;stroke-miterlimit:10\"/><path clip-rule=\"evenodd\" d=\"m657.9 214.1c46.4 0 84.3-44.3 92.8-88.7 8.5-44.3-12.5-88.7-25-88.7\" fill=\"none\"/><path d=\"m657.9 214.1c46.4 0 84.3-44.3 92.8-88.7 4.2-22.2 1.1-44.3-4.6-61-2.9-8.3-6.4-15.2-10-20.1-.1-.2-.2-.3-.3-.4l-.2-.3\" style=\"fill:none;stroke:#595959;stroke-width:2;stroke-linejoin:round;stroke-miterlimit:10;stroke-dasharray:8 6\"/><path d=\"m737.4 40.9-9.3-2.5 5.5 7.9z\" style=\"fill-rule:evenodd;clip-rule:evenodd;fill:#595959;stroke:#595959;stroke-width:2;stroke-miterlimit:10\"/><path clip-rule=\"evenodd\" d=\"m720.9 200.7 34.4-133.1 43.7 11.3-34.5 133.1z\" fill=\"none\"/><path d=\"m746.3 184.9c-.2.6-.5 1.1-.9 1.4-.5.3-1 .4-1.6.2-.4-.1-.7-.3-1-.6-.2-.3-.4-.6-.5-1s0-.8.1-1.3c.2-.6.4-1.1.7-1.5l-.3-.1c-.3-.1-.6 0-.9.2s-.4.5-.6.9c-.1.3-.1.6 0 .9s.2.5.4.8l-1 .8c-.3-.4-.5-.8-.6-1.3s-.1-1 .1-1.5c.2-.9.6-1.5 1.2-1.9.5-.4 1.2-.4 2-.2l3.6.9-.4 1.5-.6-.2v.1c.2.2.3.5.4.9 0 .2 0 .6-.1 1zm-1.1-.7c.1-.4.1-.8-.2-1.2-.2-.3-.5-.6-.9-.7-.3.3-.5.7-.6 1.2-.2.8 0 1.3.6 1.4.2.1.5 0 .7-.1s.4-.3.4-.6zm-3.8-5.6.4-1.4.8.2v-.1c-.2-.2-.4-.5-.5-.9s-.1-.7 0-1.1c.1-.3.2-.5.3-.7l1.5.4c-.1.2-.2.4-.3.5s-.1.3-.2.4c-.1.5 0 .9.2 1.2.3.3.6.6 1.1.7l2.9.8-.4 1.5zm8.1-5.8c-.2.6-.4 1.1-.8 1.5s-.9.7-1.4.8c-.6.1-1.1.1-1.7 0s-1.1-.4-1.5-.8-.7-.8-.9-1.4c-.2-.5-.2-1.1 0-1.7s.4-1.1.8-1.5.8-.6 1.3-.7 1-.1 1.6 0c.2 0 .4.1.5.2l-1.1 4.4c.5 0 .9-.1 1.2-.3s.5-.6.6-1 .1-.7 0-1-.2-.5-.5-.7l.9-1.1c1 1 1.3 2 1 3.3zm-3.5-2.4c-.2 0-.4 0-.6.1s-.4.2-.6.4-.3.4-.4.7c-.1.4-.1.7.1 1s.4.6.7.8zm-.9-5.9.4-1.4.7.2v-.1c-.2-.2-.4-.5-.5-.9s-.1-.7 0-1.1c.1-.5.4-1 .8-1.3.4-.4.8-.6 1.4-.7.5-.1 1.1-.1 1.7 0 .6.2 1.1.4 1.5.8s.7.8.9 1.3.2 1 0 1.6c-.1.4-.3.7-.5 1-.3.3-.5.4-.8.5v.1l.9.1 2.4.6-.4 1.5zm5.5-1.9c.1-.3.1-.6 0-.8-.1-.3-.2-.5-.5-.8-.2-.2-.5-.4-.8-.5s-.7-.1-1 0-.6.2-.8.4-.3.4-.4.7-.1.6 0 .9.2.5.5.7c.2.2.5.4.9.4s.7.1 1 0 .6-.2.8-.4c.1 0 .2-.3.3-.6zm-3.6-5.4.4-1.4.8.2v-.1c-.2-.2-.4-.5-.5-.9s-.1-.7 0-1.1c.1-.3.2-.5.3-.7l1.5.4c-.1.2-.2.4-.3.5s-.1.3-.2.4c-.1.5 0 .9.2 1.2.3.3.6.6 1.1.7l2.9.8-.4 1.5zm8-5.9c-.2.6-.4 1.1-.8 1.5s-.9.7-1.4.8c-.6.1-1.1.1-1.7 0-.6-.2-1.1-.4-1.5-.8s-.7-.9-.8-1.4c-.2-.6-.2-1.1 0-1.8.2-.6.4-1.1.8-1.5s.9-.7 1.4-.8 1.1-.1 1.7 0c.6.2 1.1.4 1.5.8s.7.9.8 1.4c.2.6.2 1.2 0 1.8zm-1.4-.3c.1-.3.1-.6 0-.9s-.2-.5-.5-.7c-.2-.2-.5-.4-.9-.5-.3-.1-.7-.1-1 0s-.6.2-.8.4-.3.5-.4.7c-.1.3-.1.6 0 .9s.2.5.5.7c.2.2.5.4.8.5.4.1.7.1 1 0s.6-.2.8-.4c.3-.2.4-.4.5-.7zm-3.6-5.5.4-1.4.7.2v-.1c-.2-.2-.4-.5-.5-.9s-.1-.7 0-1.1c.1-.5.4-1 .8-1.3.4-.4.8-.6 1.4-.7.5-.1 1.1-.1 1.7 0 .6.2 1.1.4 1.5.8s.7.8.9 1.3.2 1 0 1.6c-.1.4-.3.7-.5 1-.3.3-.5.4-.8.5v.1l.9.1 2.4.6-.4 1.5zm5.5-1.8c.1-.3.1-.6 0-.8-.1-.3-.2-.5-.5-.8-.2-.2-.5-.4-.8-.5s-.7-.1-1 0-.6.2-.8.4-.3.4-.4.7-.1.6 0 .9.2.5.5.7c.2.2.5.4.9.4.3.1.7.1 1 0s.6-.2.8-.4c0-.1.2-.3.3-.6zm3.2-6.7c-.2.6-.4 1.1-.8 1.5s-.9.7-1.4.8c-.6.1-1.1.1-1.7 0s-1.1-.4-1.5-.8-.7-.8-.9-1.4c-.2-.5-.2-1.1 0-1.7s.4-1.1.8-1.5.8-.6 1.3-.7 1-.1 1.6 0c.2 0 .4.1.5.2l-1.1 4.4c.5 0 .9-.1 1.2-.3s.5-.6.6-1 .1-.7 0-1-.2-.5-.5-.7l.9-1.1c1 1 1.3 2.1 1 3.3zm-3.5-2.4c-.2 0-.4 0-.6.1s-.4.2-.6.4-.3.4-.4.7c-.1.4-.1.7.1 1 .1.3.4.6.7.8zm6.4-9.2c-.1.3-.2.6-.3.8-.2.2-.3.4-.5.5-.4.3-1 .3-1.6.2l-2.7-.7-.3 1-1.3-.3.3-1-1.7-.4.4-1.5 1.7.4.4-1.5 1.3.3-.4 1.5 2.5.6c.3.1.5.1.7 0s.3-.2.3-.5c0-.2.1-.3 0-.4 0-.1 0-.3-.1-.4l1.5.4c-.1.2-.1.6-.2 1zm-8 6 .4-1.4.8.2v-.1c-.3-.2-.4-.5-.5-.9s-.1-.7 0-1.1c.1-.3.1-.4.2-.5l1.5.4c-.1.2-.2.4-.3.7-.1.5-.1.9.2 1.3.2.4.6.6 1.1.7l2.9.8-.4 1.5zm2.2-11c-.1.3-.2.5-.5.6s-.5.2-.8.1-.5-.2-.6-.5c-.1-.2-.2-.5-.1-.8s.2-.5.5-.6c.2-.1.5-.2.8-.1s.5.2.6.5.1.6.1.8zm.4 1 .4-1.5 5.9 1.5-.4 1.5zm7.6-4.3c-.2.6-.4 1.1-.8 1.5s-.9.7-1.4.8c-.6.1-1.1.1-1.7 0s-1.1-.4-1.5-.8-.7-.8-.9-1.4c-.2-.5-.2-1.1 0-1.7s.4-1.1.8-1.5.8-.6 1.3-.7 1-.1 1.6 0c.2 0 .4.1.5.2l-1.1 4.4c.5 0 .9-.1 1.2-.3s.5-.6.6-1 .1-.7 0-1-.2-.5-.5-.7l.9-1.1c1.1 1 1.4 2.1 1 3.3zm-3.5-2.4c-.2 0-.4 0-.6.1s-.4.2-.6.4-.3.4-.4.7c-.1.4-.1.7.1 1s.4.6.7.8zm5.2-3.9c-.2.7-.5 1.3-.9 1.6-.4.4-.9.6-1.4.6l-.2-1.5c.3 0 .6-.2.8-.3.2-.2.3-.4.4-.7s.1-.5 0-.7c0-.2-.2-.3-.4-.4-.2 0-.4 0-.5.1s-.3.4-.5.7l-.3.7c-.2.5-.5.8-.9 1s-.8.3-1.3.2c-.3-.1-.6-.3-.8-.5-.2-.3-.4-.6-.4-1-.1-.4 0-.8.1-1.2.3-1.2 1-1.9 1.9-2.1l.2 1.4c-.5.1-.8.4-.9.9-.1.3-.1.5 0 .7s.2.3.3.3c.3.1.6-.1.8-.6l.4-.8c.3-.5.6-.9 1-1.1s.8-.3 1.2-.2.7.3.9.6.4.7.4 1.1c.2.3.2.7.1 1.2zm2.3-9.2c-.2.6-.4 1.1-.8 1.5s-.9.7-1.4.8c-.6.1-1.1.1-1.7 0-.6-.2-1.1-.4-1.5-.8s-.7-.9-.8-1.4c-.2-.6-.2-1.1 0-1.8.2-.6.4-1.1.8-1.5s.9-.7 1.4-.8 1.1-.1 1.7 0c.6.2 1.1.4 1.5.8s.7.9.8 1.4c.2.6.2 1.2 0 1.8zm-1.4-.4c.1-.3.1-.6 0-.9s-.2-.5-.5-.7c-.2-.2-.5-.4-.9-.5-.3-.1-.7-.1-1 0s-.6.2-.8.4-.3.5-.4.7c-.1.3-.1.6 0 .9s.2.5.5.7c.2.2.5.4.8.5.4.1.7.1 1 0s.6-.2.8-.4c.3-.1.5-.4.5-.7zm-3.6-5.4.4-1.4.7.2v-.1c-.2-.2-.4-.5-.5-.9s-.1-.8 0-1.1c.2-.7.5-1.2 1.1-1.5.5-.3 1.2-.3 1.9-.1l3.7 1-.4 1.5-3.5-.9c-.4-.1-.7-.1-1 .1-.3.1-.4.4-.5.7-.1.4 0 .8.2 1.1s.6.6 1.1.7l3 .8-.4 1.5z\"/><path clip-rule=\"evenodd\" d=\"m736.5 291.3-31.9-123.3 43.7-11.3 31.9 123.3z\" fill=\"none\"/><path d=\"m740.7 250.1-.4-1.4.7-.2v-.1c-.3-.1-.6-.3-.8-.5-.3-.3-.4-.6-.6-1-.1-.5-.1-1.1 0-1.6s.4-1 .9-1.3c.4-.4.9-.6 1.5-.8s1.2-.2 1.7 0c.5.1 1 .4 1.4.7.4.4.6.8.8 1.4.1.4.1.8 0 1.1-.1.4-.2.6-.5.9v.1l.8-.3 2.4-.6.4 1.5zm3.9-4.2c-.1-.3-.2-.5-.4-.7s-.5-.4-.8-.4c-.3-.1-.6-.1-1 0-.3.1-.6.2-.8.5-.2.2-.4.5-.5.7-.1.3-.1.6 0 .8.1.3.2.5.4.7s.5.3.8.4.6.1 1 0c.3-.1.6-.2.9-.4.2-.2.4-.5.5-.8 0-.3 0-.6-.1-.8zm-.4-7.5c.2.6.2 1.2 0 1.8-.1.5-.4 1-.8 1.4s-.9.7-1.5.8c-.6.2-1.1.2-1.7 0-.6-.1-1-.4-1.4-.8s-.7-.9-.8-1.5c-.2-.6-.2-1.2 0-1.7.1-.6.4-1 .8-1.4s.9-.7 1.5-.8c.6-.2 1.2-.2 1.7 0 .5.1 1 .4 1.4.8.4.3.6.8.8 1.4zm-1.4.3c-.1-.3-.2-.5-.4-.8-.2-.2-.5-.4-.8-.4-.3-.1-.6-.1-1 0-.3.1-.6.2-.8.5-.2.2-.4.5-.5.7-.1.3-.1.6 0 .9s.2.6.4.8.4.4.8.4c.3.1.6.1 1 0s.6-.2.9-.5c.2-.2.4-.5.5-.7 0-.3 0-.6-.1-.9zm-6.7-3.6c.1.3 0 .5-.1.8s-.3.4-.6.5-.5 0-.8-.1c-.2-.1-.4-.3-.5-.6s0-.5.1-.8c.1-.2.3-.4.6-.5s.5 0 .8.1.5.3.5.6zm.9.6-.4-1.5 5.9-1.5.4 1.5zm-.8-3.1-.4-1.4.7-.2v-.1c-.3-.1-.6-.3-.9-.6s-.4-.6-.5-1c-.2-.7-.1-1.3.2-1.8s.9-.8 1.6-1l3.7-1 .4 1.5-3.5.9c-.4.1-.7.3-.8.5-.2.2-.2.5-.1.9s.4.7.7.9c.4.2.8.2 1.3.1l3-.8.4 1.5zm3.6-10.9c.1.3.1.6.1.9s-.1.5-.2.7c-.2.5-.7.8-1.3.9l-2.7.7.3 1-1.3.3-.3-1-1.7.4-.4-1.5 1.7-.4-.4-1.5 1.3-.3.4 1.5 2.5-.6c.3-.1.5-.2.6-.4.1-.1.1-.3.1-.6 0-.2-.1-.3-.2-.3l-.3-.3 1.5-.4c.1.2.2.6.3.9zm-1.1-4.6c.2.7.2 1.3 0 1.9-.2.5-.5.9-.9 1.2l-.9-1.2c.3-.2.4-.4.5-.7s.1-.6 0-.9-.2-.5-.3-.7-.3-.2-.5-.2-.3.2-.4.4-.1.5-.1.8v.7c0 .5-.1 1-.3 1.4s-.6.6-1 .8c-.3.1-.7.1-1-.1-.3-.1-.6-.4-.8-.7s-.4-.7-.5-1.1c-.3-1.2-.1-2.2.7-2.8l.9 1.2c-.4.3-.5.8-.3 1.3.1.3.2.5.3.6s.3.2.4.1c.3-.1.4-.4.4-1v-.9c0-.6.1-1.1.3-1.5s.6-.6 1-.7.7-.1 1.1.1c.3.1.7.4.9.7.2.4.4.8.5 1.3zm-2.4-8.9c.1.3.1.6.1.9s-.1.5-.2.7c-.2.5-.7.8-1.3.9l-2.7.7.3 1-1.3.3-.3-1-1.7.4-.4-1.5 1.7-.4-.4-1.5 1.3-.3.4 1.5 2.5-.6c.3-.1.5-.2.6-.4.1-.1.1-.3.1-.6 0-.2-.1-.3-.2-.3l-.3-.3 1.5-.4c0 .2.2.5.3.9zm-1.2-4.9c.2.6.2 1.2 0 1.8-.1.5-.4 1-.8 1.4s-.9.7-1.5.8c-.6.2-1.1.2-1.7 0-.6-.1-1-.4-1.4-.8s-.7-.9-.8-1.5c-.2-.6-.2-1.2 0-1.7.1-.6.4-1 .8-1.4s.9-.7 1.5-.8c.6-.2 1.2-.2 1.7 0 .5.1 1 .4 1.4.8.4.3.7.8.8 1.4zm-1.4.3c-.1-.3-.2-.5-.4-.8-.2-.2-.5-.4-.8-.4-.3-.1-.6-.1-1 0-.3.1-.6.2-.8.5-.2.2-.4.5-.5.7-.1.3-.1.6 0 .9s.2.6.4.8.4.4.8.4c.3.1.6.1 1 0s.6-.2.9-.5c.2-.2.4-.5.5-.7 0-.3 0-.6-.1-.9z\"/></g></svg>\n\n### 术语\n\n首先，请注意，globalThis 提供的是全局作用域中的 this 值，这浏览器中的全局对象是有区别的。[原因](https://github.com/tc39/proposal-global#html-and-the-windowproxy)\nJavaScript 模块中，在全局全局作用域和你的代码中还有一层模块作用域，因此，在模块顶层 this 值会是 undefined。\n\n### globalThis 的备选项\n\n> 在浏览器中，globalThis 的值等于 window\n\n```js\nglobalThis === window\n// -> true\n```\n\n在 frames 中也是\n\n```js\nglobalThis === frames\n// -> true\n```\n\n然而， `window` 和 `frames` 在 web worker 上下文中是`undefined`, 所幸的是， self 能在任何浏览器上下文中工作，更适合作为一个通用的替代：\n\n```js\nglobalThis === self\n// -> true\n```\n\n但是，上述的所有变量在 Node.js 中均无效，我们需要使用 global：\n\n```js\nglobalThis === global\n// → true\n```\n\n在其他 JavaScript 引擎实现中，（window，frames，self，global）可能都无效，这时候我们就只能使用 this 来获得 globalThis 的值\n\n```js\nglobalThis === this\n// → true\n```\n\n此外，草率模式功能始终将其 this 设置为 global this，因此，即使您无法在全局作用域内运行代码，您仍然可以 this 按如下方式在全局模式下访问 global：\n\n```js\nglobalThis ===\n  (function() {\n    return this\n  })()\n// → true\n```\n\n但是，在 JavaScript 模块和严格模式方法中，顶层 this 始终为 undefined，所以上述方法无效。此时，只有两种方法可以打破这种限制： Function constructor 和 eval 方法\n\n```js\nglobalThis === Function('return this')()\n// → true\n\nglobalThis === (0, eval)('this')\n// → true\n```\n\n现代浏览器中，Function.constructor 和 eval 往往会因为 CSP(Content Security Policy) 被禁用，所以一个完美的 polyfill 不可以依赖这些方法\n\n### 天真的 polyfill\n\n看似上面提到的方法可以被整合到单个方法 polyfill 中：\n\n```js\n// A naive globalThis shim. Don’t use this!\nconst getGlobalThis = () => {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof self !== 'undefined') return self\n  if (typeof window !== 'undefined') return window\n  if (typeof global !== 'undefined') return global\n  if (typeof this !== 'undefined') return this\n  throw new Error('Unable to locate global `this`')\n}\n// Note: `var` is used instead of `const` to ensure `globalThis`\n// becomes a global variable (as opposed to a variable in the\n// top-level lexical scope) when running in the global scope.\nvar globalThis = getGlobalThis()\n```\n\n但是，他在严格模式和 JavaScript 模块中无法工作。除此之外，getGlobalThis 可能返回错误的结果（因为他依赖 this 的返回值）\n\n### 健壮的 polyfill\n\n在如下的环境中：\n\n1. 你不能依靠的价值 globalThis，window，self，global，或 this;\n2. 您不能使用 Function 构造函数或 eval;\n3. 但是您可以依靠所有其他 JavaScript 内置功能的完整性\n   我们还能实现一个正确的 polyfill 吗？\n\n事实证明，有解决方案，但他并不优雅。\n\n我们在不知道如何直接访问 global this 的情况下获得他的值呢？如果我们能够想方法在 globalThis 对象上注入一个方法，那样我们就能通过这个方法来获得 this 的值：\n\n```js\nglobalThis.foo = function() {\n  return this\n}\nvar globalThisPolyfilled = globalThis.foo()\n```\n\n但是如何在不依赖 globalThis 和环境特定变量的情况下注入这个方法呢？ 我们不能使用：\n\n```js\nfunction foo() {\n  return this\n}\nvar globalThisPolyfilled = foo()\n```\n\nfoo()不再作为一个方法被调用，所以他的 this 值会指向 undefined，在严格模式和 JavaScript 模块中亦是如此。但是！setter 和 getter 可以绕过这种限制：\n\n```js\nObject.defineProperty(globalThis, '__magic__', {\n  get: function() {\n    return this\n  },\n  configurable: true // This makes it possible to `delete` the getter later.\n})\n// Note: `var` is used instead of `const` to ensure `globalThis`\n// becomes a global variable (as opposed to a variable in the\n// top-level lexical scope) when run in the global scope.\nvar globalThisPolyfilled = __magic__\ndelete globalThis.__magic__\n```\n\n上述代码在 globalThis 上注入了一个 getter，通过这个 getter，我们可以获得一个对 globalThis 的引用，然后我们通过 delete 来清除这个 getter。这个 polyfill 已经可以在任何环境中获得正确的 globalThis 值，但是他仍然直接使用了 globalThis 的值（第一行），是否有方法可以在不直接依赖 globalThis 的情况下注入这个方法呢？ 答案是肯定的。 我们将方法注入到继承于 globalThis 的对象\n\n```js\nObject.defineProperty(Object.prototype, '__magic__', {\n  get: function() {\n    return this\n  },\n  configurable: true // This makes it possible to `delete` the getter later.\n})\n// Note: `var` is used instead of `const` to ensure `globalThis`\n// becomes a global variable (as opposed to a variable in the\n// top-level lexical scope).\nvar globalThis = __magic__\ndelete Object.prototype.__magic__\n```\n\n> 注意：在 globalThis 提案之前，ECMAScript 规范实际上并不强制全局 this 继承自 Object.prototype，而只是要求它必须是一个对象。Object.create(null)创建一个不继承自的对象 Object.prototype。JavaScript 引擎可以在 this 不违反规范的情况下将此类对象用作全局对象，在这种情况下，上面的代码仍然无法正常工作（事实上，Internet Explorer 7 确实做了类似的事情！）。幸运的是，更现代的 JavaScript 引擎似乎都同意全局 this 必须包含 Object.prototype 在其原型链中。\n\n为了避免 Object.prototype 在 globalThis 已有的现代环境中发生变异，我们可以如下更改 polyfill：\n\n```js\n;(function() {\n  if (typeof globalThis === 'object') return\n  Object.defineProperty(Object.prototype, '__magic__', {\n    get: function() {\n      return this\n    },\n    configurable: true // This makes it possible to `delete` the getter later.\n  })\n  __magic__.globalThis = __magic__ // lolwat\n  delete Object.prototype.__magic__\n})()\n\n// Your code can use `globalThis` now.\nconsole.log(globalThis)\n```\n\n至此，我们终于获得了一个能在所有环境下工作的 globalThis polyfill\n\n原文译自：https://mathiasbynens.be/notes/globalthis\n"},{"title":"StaticRouter 上下文","date":"2019-04-02","category":"docs","content":"\n### StaticRouter 上下文\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/8der0?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"404 页面","date":"2019-04-08","category":"docs","content":"\n### 404 页面\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/es806?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"基础","date":"2019-04-15","category":"docs","content":"\n### 基础\n\n <iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/bnpsd?codemirror=1&amp;fontsize=14&amp;module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"","date":"2019-04-15","category":"docs","content":""},{"title":"嵌套路由","date":"2019-04-12","category":"docs","content":"### 嵌套路由\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/rrbsb?codemirror=1&amp;fontsize=14&amp;module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"弹窗路由（Modal）","date":"2019-04-03","category":"docs","content":"\n### 弹窗路由 (Modal)\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/1coo0?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"动画过渡","date":"2019-04-05","category":"docs","content":"### 动画过渡\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/07rue?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"配置 URL 参数","date":"2019-04-13","category":"docs","content":"### 配置 URL 参数\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/rrbsb?codemirror=1&amp;fontsize=14&amp;module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"递归路径","date":"2019-04-01","category":"docs","content":"### 递归路径\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/07d4i?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"路由配置","date":"2019-04-04","category":"docs","content":"### 路由配置\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/5stco?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"自定义 Link","date":"2019-04-10","category":"docs","content":"### 自定义 Link\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/sxec1?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"页面查询参数","date":"2019-04-01","category":"docs","content":"### 页面查询参数\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/mfh8p?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"重定向（鉴权）","date":"2019-04-11","category":"docs","content":"### 重定向（鉴权）\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/qzy12?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"防止过渡动画","date":"2019-04-09","category":"docs","content":"### 防止过渡动画\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/1yvzb?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"代码分割","date":"2019-05-06","category":"docs","content":"\n### 代码分割\n\n#### 基础\n\nweb 应用的一个很大优势就是用户不需要在使用前去下载整个软件包。你可以把代码分割当做渐进式的应用下载。为了达成这项目的，我们会使用 [webpack](https://webpack.js.org/), [@babel/plugin-syntax-dynamic-import](https://babeljs.io/docs/en/babel-plugin-syntax-dynamic-import/), 和 [loadable-components](https://github.com/gregberge/loadable-components)。\n\nwebpack 已经提供了内置的动态模块加载支持了；但是，如果你在使用 Babel(将 JSX 语法转为 javascript)，你就需要[@babel/plugin-syntax-dynamic-import](https://babeljs.io/docs/en/babel-plugin-syntax-dynamic-import/) 插件。这是一个语法层面的插件，也就是说 Babel 不会做任何语义层面上的转化。他的唯一目标就是让 Babel 能够处理动态加载语法并将其传给 webpack 来获得代码分割效果。你的`.babelrc`应该像如图一样配置：\n\n```json\n{\n  \"presets\": [\"@babel/preset-react\"],\n  \"plugins\": [\"@babel/plugin-syntax-dynamic-import\"]\n}\n```\n\n[loadable-components](https://github.com/gregberge/loadable-components)是一个动态加载组件的库。他为我们自动处理了大量的边界情况，将代码分割变的相当简单！这是一个使用 loadable-components 的示例：\n\n```js\nimport loadable from '@loadable/component'\nimport Loading from './Loading.js'\n\nconst LoadableComponent = loadable(() => import('./Dashboard.js'), {\n  fallback: <Loading />\n})\n\nexport default class LoadableDashboard extends React.Component {\n  render() {\n    return <LoadableComponent />\n  }\n}\n```\n\n这就是全部了~ 你只需要在你的路由器中使用`<LoadableDashboard>` 组件，他会在路由导航到这个组件的时候自动加载。fallback 属性可以定义一个等待载入组件时候渲染的组件。\n\n你可以在[这里](https://www.smooth-code.com/open-source/loadable-components/docs/getting-started/)获得完整的文档。\n\n#### 服务端渲染\n\nloadable-components 也提供了完整的[服务端渲染文档](https://loadable-components.com/docs/server-side-rendering/)\n"},{"title":"快速开始","date":"2019-05-09","category":"docs","content":"\n### 快速开始\n\n想开始在项目中使用 react-router， 你需要一个 react web 项目。如果你需要搭建一个全新的项目，我们推荐使用 [Create React App](https://github.com/facebook/create-react-app)。 这是一个很棒的工具，并且对 react-router 的支持很好。\n\n```bash\nnpx create-react-app demo-app\ncd demo-app\n```\n\n### 安装\n\n你可以使用你喜欢的包管理器（npm 或者 yarn）从官方的 npm 源安装 react-router-dom。\n\n```\nnpm install react-router-dom\n```\n\n<br/>\n\n### 示例 1：基础路由\n\n接下来，将下列代码复制/粘贴到 src/App.js 文件中。\n\n在这个示例中，我们有 3 个页面被 react-router-dom 处理。主页、”/about“和”/user“页面。 点击不同的`<Link />`组件，路由将会渲染响应的页面。\n\n源码中，`<Link />`组件包裹了一个 `<a href=\"\"></a>`。因此，使用读屏器或键盘依旧可以使用此应用。\n\n```js\nimport React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> 会遍历所有包含的 <Route>s 并渲染匹配的第一条 */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nfunction Home() {\n  return <h2>Home</h2>\n}\n\nfunction About() {\n  return <h2>About</h2>\n}\n\nfunction Users() {\n  return <h2>Users</h2>\n}\n```\n\n<br/>\n\n### 示例 2：嵌套路由\n\n这个示例将向你展示嵌套路由如何工作。 路由`/topics`将会载入 `Topics`组件，接着`Topics`组件将会渲染组件中的根据路径`/:id`动态匹配的路由\n\n```js\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from 'react-router-dom'\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/topics\">Topics</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/topics\">\n            <Topics />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nfunction Home() {\n  return <h2>Home</h2>\n}\n\nfunction About() {\n  return <h2>About</h2>\n}\n\nfunction Topics() {\n  let match = useRouteMatch()\n\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nfunction Topic() {\n  let { topicId } = useParams()\n  return <h3>Requested topic ID: {topicId}</h3>\n}\n```\n\n<br/>\n\n### 下一步\n\n希望这些示例能给你带来一些使用 react-router-dom 来创建 web 应用的启发，继续阅读下一章来获得更多关于 react-router 的信息\n"},{"title":"侧边栏","date":"2019-04-06","category":"docs","content":"\n### 侧边栏\n\n<iframe name=\"codesandbox\" src=\"https://codesandbox.io/embed/3ijxr?codemirror=1&fontsize=14&module=/example.js\" style=\"width: 100%; height: 100vh; outline: 0px; border: 0px; border-radius: 4px;\"></iframe>\n"},{"title":"服务端渲染","date":"2019-05-07","category":"docs","content":"\n### 服务端渲染\n\n#### 基础\n\n在服务端渲染路由会和客户端渲染有略微的区别，（因为服务端渲染没有状态）。基本思想是，我们将路由包裹到无状态的`<StaticRouter>`中，而不是包含状态的`<BrowserRouter>`。 我们从服务端请求中获得 url 参数并将它传给`<StaticRouter>`去做路径匹配。下一步，我们会讨论 context 属性。\n\n```js\n// client\n<BrowserRouter>\n  <App/>\n</BrowserRouter>\n\n// server (not the complete story)\n<StaticRouter\n  location={req.url}\n  context={context}\n>\n  <App/>\n</StaticRouter>\n```\n\n当你在客户端渲染`<Redirect>`组件时，react-router 会往 history API 写入新的记录并渲染新的页面。而在服务端渲染场景中，我们无法控制 web 应用的状态。作为替代，我们用 context 属性来获得实际渲染的结果。如果我们能获取到 context.url，那代表应用被重定向了。接下来我们可以发起相应的重定向请求\n\n```js\nconst context = {}\nconst markup = ReactDOMServer.renderToString(\n  <StaticRouter location={req.url} context={context}>\n    <App />\n  </StaticRouter>\n)\n\nif (context.url) {\n  // Somewhere a `<Redirect>` was rendered\n  redirect(301, context.url)\n} else {\n  // we're good, send the response\n}\n```\n\n#### 添加自定义的 context 信息\n\n现在，路由器仅仅能控制 context.url。但实际场景中，你可能会想让部分重定向请求使用 301，而其他的使用 302，或者，你可能想在某些路径匹配中渲染 404 页面，亦或 401 如果用户没有权限。实际上，你拥有整个 context 对象的权限，你可以随意的改写它。下列示例区分了 301，302 重定向：\n\n```js\nfunction RedirectWithStatus({ from, to, status }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        // there is no `staticContext` on the client, so\n        // we need to guard against that here\n        if (staticContext) staticContext.status = status\n        return <Redirect from={from} to={to} />\n      }}\n    />\n  )\n}\n\n// somewhere in your app\nfunction App() {\n  return (\n    <Switch>\n      {/* some other routes */}\n      <RedirectWithStatus status={301} from=\"/users\" to=\"/profiles\" />\n      <RedirectWithStatus status={302} from=\"/courses\" to=\"/dashboard\" />\n    </Switch>\n  )\n}\n\n// on the server\nconst context = {}\n\nconst markup = ReactDOMServer.renderToString(\n  <StaticRouter context={context}>\n    <App />\n  </StaticRouter>\n)\n\nif (context.url) {\n  // can use the `context.status` that\n  // we added in RedirectWithStatus\n  redirect(context.status, context.url)\n}\n```\n\n#### 404, 401 或其他状态\n\n我们可以做与上述相同的事情。创建一个添加 context 的组件，并将其呈现在 web 应用中的任何位置以获取不同的状态代码。\n现在，你可以在应用的任意位置渲染 Status 来改变 context 的值。\n\n```js\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\nNotFound() {\n  return (\n    <Status code={404}>\n      <div>\n        <h1>Sorry, can’t find that.</h1>\n      </div>\n    </Status>\n  );\n}\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n```\n\n#### 整合起来\n\n上面示例并不是一个完整的应用，但他已经包含了你构建一个服务端渲染应用的基本部分。\n\n```js\n// 服务端\nimport http from 'http'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { StaticRouter } from 'react-router-dom'\n\nimport App from './App.js'\n\nhttp\n  .createServer((req, res) => {\n    const context = {}\n\n    const html = ReactDOMServer.renderToString(\n      <StaticRouter location={req.url} context={context}>\n        <App />\n      </StaticRouter>\n    )\n\n    if (context.url) {\n      res.writeHead(301, {\n        Location: context.url\n      })\n      res.end()\n    } else {\n      res.write(`\n      <!doctype html>\n      <div id=\"app\">${html}</div>\n    `)\n      res.end()\n    }\n  })\n  .listen(3000)\n```\n\n```js\n//客户端\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App.js'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('app')\n)\n```\n\n#### 加载数据\n\n数据加载的方式有很多很多种，而社区目前也没有提炼出最佳实践，所以我们力求解决方案能和任何方式共同工作，而不是倾向并绑定一种解决方案。\n\n主要限制是您要在渲染之前加载数据。React Router 导出 matchPath 其内部使用的静态功能，以将位置与路线匹配。您可以在服务器上使用此功能来帮助确定呈现之前的数据依存关系。\n\n这种方法的要旨是依赖于静态路由配置，该配置既可以呈现您的路由，也可以在呈现之前进行匹配以确定数据依赖。\n\n````js\nconst routes = [\n  {\n    path: \"/\",\n    component: Root,\n    loadData: () => getSomeData()\n  }\n  // etc.\n];```\n````\n\n接着用这个配置项渲染你的`<Route>`组件：\n\n```js\nimport { routes } from './routes.js'\n\nfunction App() {\n  return (\n    <Switch>\n      {routes.map(route => (\n        <Route {...route} />\n      ))}\n    </Switch>\n  )\n}\n```\n\n在服务端，你会有类似于此的代码：\n\n```js\nimport { matchPath } from 'react-router-dom'\n\n// inside a request\nconst promises = []\n// 使用 some 方法来确保仅匹配第一项找到的路由\nroutes.some(route => {\n  // use `matchPath` here\n  const match = matchPath(req.path, route)\n  if (match) promises.push(route.loadData(match))\n  return match\n})\n\nPromise.all(promises).then(data => {\n  // 操作数据以便客户端能够访问他并根据其渲染页面\n})\n```\n\n最后，客户将需要提取数据。同样，我们不为您的应用程序规定数据加载模式，但是这些是您需要去手动实现的。您可能对我们的 [React Router Config](https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config) 包感兴趣，以通过静态路由配置帮助数据加载和服务器渲染。\n"},{"title":"核心组件","date":"2019-05-08","category":"docs","content":"\n### 核心组件\n\nreact-router 中有三种主要类型的组件，分别是\n\n- 路由： 如 `<BrouwserRouter>,` `<HashRouter>`\n- 路由匹配器： 如 `<Route>`, `<Switch>`\n- 导航：如 `<Link>`, `<NavLink>`, `<Redirect>`\n\n通常，导航也称为路径变更器。\n\n所有在 web 应用中使用的组件都应该从 react-router-dom 包中引入\n\n<br/>\n\n### 路由\n\n所有 react-router 应用的核心组件都是路由组件。 对于 web 应用，react-router-dom 提供了<HashRouter>和<BrowserRouter> 两种路由器。他们的区别在于如何存储 url 和如何与 web 服务器通信。\n\n- `<BrowserRouter>` 使用 url 路径来导航。通常情况下，这是最美观和优雅的方式。但是前提是 web 服务器的被正确的配置。也就是说，你的 web 服务器必须将所有 react-router-dom 在客户端管理的路由指向相同的页面（index.html），否则在你刷新页面的时候就会因为无法找到服务器资源而返回 404 错误。Create React App 在开发环境中已经默认开启了这项配置，同时也提供了在生产环境中的[配置向导]('https://create-react-app.dev/docs/deployment#serving-apps-with-client-side-routing)\n\n- `<HashRouter` 在 url 中的 [hash](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash) 部分存储路径， 所以路径长得会像是这样: `http://example.com/#/your/page`。 因为 hash 部分在发起服务器请求是会被自动忽略，所以服务端不需要特殊的配置即可支持这种路由。\n\n使用路由的过程中，请确保路由组件正确包裹所有需要渲染的路由路径。通常情况下，我们推荐用路由组件包裹整个 react 项目的根组件：\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nfunction App() {\n  return <h1>Hello React Router</h1>\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n```\n\n### 路径匹配器\n\nreact-router-dom 提供了两个路由匹配组件：Switch 和 Route。当`<Switch>`被渲染，它会搜索其 children `<Route>`内容找到一个其 path 当前的 URL 匹配。当找到时，它将渲染该对象。 而`<Route>`而忽略所有其他对象。这意味着您应将`<Route>` 的特定性更高（通常情况下代表更长的）放在不那么特定的路径之前。(比如`/post/aaa/bbb`应该放在`/post/aaa`之前，防止 Switch 组件渲染后者对应的组件)\n\n> 如果没有`<Route>`匹配项，则`<Switch>`渲染器不呈现任何内容\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        {/* If the current URL is /about, this route is rendered\n            while the rest are ignored */}\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        {/* Note how these two routes are ordered. The more specific\n            path=\"/contact/:id\" comes before path=\"/contact\" so that\n            route will render when viewing an individual contact */}\n        <Route path=\"/contact/:id\">\n          <Contact />\n        </Route>\n        <Route path=\"/contact\">\n          <AllContacts />\n        </Route>\n\n        {/* If none of the previous routes render anything,\n            this route acts as a fallback.\n\n            Important: A route with path=\"/\" will *always* match\n            the URL because all URLs begin with a /. So that's\n            why we put this one last of all */}\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n```\n\n> 注意： `<Route path>` 仅仅代表从路由的开头开始匹配，而不是匹配整个 url。 所以 `<Route path=\"/\">`会始终匹配所有的 url。因此，我们通常将其放在`<Switch>`的最后一项。另一种可能的解决方案是使用`<Route exact path=\"/\">`\n\n> 注：尽管 react-router 支持在`<Switch>`组件之外渲染`<Route>`，在 5.1 版本之后，我们建议您使用 [useRouteMatch()](https://reactrouter.com/react-router/web/guides/primary-components/TODO) hook。并且。我们不建议您渲染没有 path 的`<Route>`，而是使用 hooks 来获得你需要的与路由相关的参数。\n\n### 导航\n\nreact-router 提供了`<Link>`组件在 web 应用中提供路由跳转。`<Link>`组件会在你的 dom 中生成一个`<a>`元素。\n\n```js\n<Link to=\"/\">Home</Link>\n// <a href=\"/\">Home</a>\n```\n\n`<NavLink>`是一种特殊的`<Link>`，当他代表的路由正在被渲染是他会获得 active 的 css 类名，\n\n```js\n<NavLink to=\"/react\" activeClassName=\"hurray\">\n  React\n</NavLink>\n\n// When the URL is /react, this renders:\n// <a href=\"/react\" className=\"hurray\">React</a>\n\n// When it's something else:\n// <a href=\"/react\">React</a>\n```\n\n当你想要强制路由跳转时，你可以渲染一个`<Redirect>`组件，他会将页面跳转到 to 属性描述的路由中\n\n```js\n<Redirect to=\"/login\" />\n```\n"},{"title":"测试","date":"2019-05-03","category":"docs","content":"\n### 测试\n\nreact-router 依赖 React.context 来正常工作。这会影响你测试组件的方法。\n\n#### Context\n\n如果尝试对渲染<Link>或<Route>等的组件之一进行单元测试，则会收到一些有关 Context 的错误和警告。虽然你会倾向于替换掉路由器的 context，我们建议您将测试用例用基础路由包裹，或者<StaticRouter>，<MemoryRouter>或者<BrowserRouter>（如果 window.history 在测试环境中全局可用）。\n\n建议使用 MemoryRouter 或自定义 history，以便能够在两次测试之间重置路由器。\n\n```js\nclass Sidebar extends Component {\n  // ...\n  render() {\n    return (\n      <div>\n        <button onClick={this.toggleExpand}>expand</button>\n        <ul>\n          {users.map(user => (\n            <li>\n              <Link to={user.path}>{user.name}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\n// 错误 ❌\ntest('it expands when the button is clicked', () => {\n  render(<Sidebar />)\n  click(theButton)\n  expect(theThingToBeOpen)\n})\n\n// 正确 ✅\ntest('it expands when the button is clicked', () => {\n  render(\n    <MemoryRouter>\n      <Sidebar />\n    </MemoryRouter>\n  )\n  click(theButton)\n  expect(theThingToBeOpen)\n})\n```\n\n#### 从特定的路由路径开始测试\n\n`<MemoryRouter>`支持 `initialEntries` 和 `initialIndex` 属性，所以你可以从任意路由开始您的测试。\n\n```js\ntest('current user is active in sidebar', () => {\n  render(\n    <MemoryRouter initialEntries={['/users/2']}>\n      <Sidebar />\n    </MemoryRouter>\n  )\n  expectUserToBeActive(2)\n})\n```\n\n#### 导航\n\n我们进行了大量的测试来确保在 location 变化时候路由能够正确的渲染，所以你不必亲自测试它们。但如果你真的需要， 你可以这样测试：\n\n```js\n// app.js (a component file)\nimport React from 'react'\nimport { Route, Link } from 'react-router-dom'\n\n// our Subject, the App, but you can test any sub\n// section of your app too\nconst App = () => (\n  <div>\n    <Route\n      exact\n      path=\"/\"\n      render={() => (\n        <div>\n          <h1>Welcome</h1>\n        </div>\n      )}\n    />\n    <Route\n      path=\"/dashboard\"\n      render={() => (\n        <div>\n          <h1>Dashboard</h1>\n          <Link to=\"/\" id=\"click-me\">\n            Home\n          </Link>\n        </div>\n      )}\n    />\n  </div>\n)\n// you can also use a renderer like \"@testing-library/react\" or \"enzyme/mount\" here\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport { act } from 'react-dom/test-utils'\nimport { MemoryRouter } from 'react-router-dom'\n\n// app.test.js\nit('navigates home when you click the logo', async => {\n  // 在真正的测试中 \"@testing-library/react\" 会为你生成真实测试dom\n  const root = document.createElement('div')\n  document.body.appendChild(root)\n\n  // 渲染\n  render(\n    <MemoryRouter initialEntries={['/my/initial/route']}>\n      <App />\n    </MemoryRouter>,\n    root\n  )\n\n  // 交互\n  act(() => {\n    // 找到需要点击的路由\n    const goHomeLink = document.querySelector('#nav-logo-home')\n    // 点击\n    goHomeLink.dispatchEvent(new MouseEvent('click', { bubbles: true }))\n  })\n\n  // 验证正确的路由是否被渲染\n  expect(document.body.textContent).toBe('Home')\n})\n```\n\n#### 在测试中验证 location\n\n您不必在测试中经常访问 location 或 history 对象，但是如果这样做（例如，验证是否在 url 栏中设置了新的查询参数），则可以添加一条路由来更新测试中的变量：\n\n```js\n// app.test.js\ntest('clicking filter links updates product query params', () => {\n  let history, location\n  render(\n    <MemoryRouter initialEntries={['/my/initial/route']}>\n      <App />\n      <Route\n        path=\"*\"\n        render={({ history, location }) => {\n          history = history\n          location = location\n          return null\n        }}\n      />\n    </MemoryRouter>,\n    node\n  )\n\n  act(() => {\n    // example: 点击 <Link> 到 /products?id=1234\n  })\n\n  // 验证url\n  expect(location.pathname).toBe('/products')\n  const searchParams = new URLSearchParams(location.search)\n  expect(searchParams.has('id')).toBe(true)\n  expect(searchParams.get('id')).toEqual('1234')\n})\n```\n\n备择方案\n\n1. BrowserRouter 如果您的测试环境具有浏览器全局变量，window.location 并且也可以使用 window.history（这是 Jest 通过 JSDOM 的默认设置，但是您无法重置测试之间的历史记录）。\n2. 除了将自定义路由传递给 MemoryRouter 之外，您还可以将基数 Router 与包中的 historyprop 一起使用 history：\n\n#### React 应用测试包\n\n请参阅官方文档中的示例：使用[React Testing Library](https://testing-library.com/docs/example-react-router)测试 React Router\n"},{"title":"深度redux整合","date":"2019-05-02","category":"docs","content":"\n### 深度 redux 整合\n\nRedux 是 React 生态系统的重要组成部分。对于想要同时使用 React Router 和 Redux 的人，我们希望使其无缝集成。为此，有些人希望：\n\n1. 与 store 同步路由数据，并从 store 访问路由数据。\n2. 通过 action 来控制路由导航。\n3. 支持时间旅行调试模式\n\n所有这些都需要更深入的集成。\n\n而我们的推荐是：完全不在 redux 中存放路由数据，原因如下：\n\n1. 路由数据已经集成到了大多数关心它的组件。无论是来自 redux 还是路由器，您组件的代码都基本相同。\n2. 在大多数情况下，你可以使用 Link，NavLink 并 Redirect 进行导航操作。有时，在某些最初由操作启动的异步任务之后，您可能还需要以编程方式导航。例如，您可以在用户提交登录表单时调度操作。然后，您的 thunk，saga 或其他异步处理程序对凭据进行身份验证，如果成功，则需要以某种方式导航到新页面。这里的解决方案只是将 history 对象（提供给所有路由组件）包括在操作的有效负载中，并且异步处理程序可以在适当的时候使用它进行导航。\n3. 路由更改对于时间旅行调试不太重要。唯一明显的情况是调试路由器/存储同步中的问题，但是如果根本不同步它们，则该问题将消失。\n\n但是，如果您强烈希望与 redux 同步路由，则可以尝试使用[Connected React Router](https://github.com/supasate/connected-react-router)，这是 React Router 和 Redux 的第三方绑定。\n"},{"title":"滚动回溯","date":"2019-05-05","category":"docs","content":"\n### 滚动回溯\n\n在早版本的 react-router 中，我们提供了开箱即用的滚动回溯，从那时候开始用户们就一直在要求它。希望本文能够让你获得你需要的信息！\n\n浏览器对 history.pushState 会以普通浏览器导航相同的方式自行处理滚动恢复。它已经可以在 chrome 中使用，而且非常棒。[滚动回溯标准](https://majido.github.io/scroll-restoration-proposal/history-based-api.html#web-idl)\n\n由于浏览器开始处理“默认情况”，并且应用程序具有不同的滚动需求（例如本网站！），因此我们不提供默认滚动管理功能。本指南应帮助您实现任何滚动需求。\n\n#### 滚动到顶部\n\n大多数时候，您需要的只是“滚动到顶部”，因为您的内容页面很长，导航到该页面时，页面会一直向下滚动。这很容易处理。 我们会使用一个`<ScrollToTop>`组件，在每次导航时向上滚动窗口：\n\n```js\nimport { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n```\n\n如果你还没有开始使用 react 16.8+，你可以使用：\n\n```js\nimport React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default withRouter(ScrollToTop)\n```\n\n并且在路由前面渲染这个组件：\n\n```js\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n      <App />\n    </Router>\n  )\n}\n```\n\n如果你在路由中有 tab 选项卡，你可能不希望每次切换的时候都滚动到顶部，这时候你可能需要一个`<ScrollToTopOnMount>` 组件：\n\n```js\nimport { useEffect } from 'react'\n\nfunction ScrollToTopOnMount() {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return null\n}\n\n// Render this somewhere using:\n// <Route path=\"...\" children={<LongContent />} />\nfunction LongContent() {\n  return (\n    <div>\n      <ScrollToTopOnMount />\n\n      <h1>Here is my long content page</h1>\n      <p>...</p>\n    </div>\n  )\n}\n```\n\n如果你还没有开始使用 react 16.8+，你可以使用：\n\n```js\nimport React from 'react'\n\nclass ScrollToTopOnMount extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  render() {\n    return null\n  }\n}\n\n// Render this somewhere using:\n// <Route path=\"...\" children={<LongContent />} />\nclass LongContent extends React.Component {\n  render() {\n    return (\n      <div>\n        <ScrollToTopOnMount />\n\n        <h1>Here is my long content page</h1>\n        <p>...</p>\n      </div>\n    )\n  }\n}\n```\n\n#### 通用解决方案\n\n对于通用解决方案（主流浏览器们已经开始原生实现），我们谈论的是两件事：\n\n1. 向上滚动导航，这样就不会启动滚动到底部的新屏幕\n2. 恢复窗口的滚动位置和“后退”和“前进”单击上的溢出元素（但不单击“链接”单击！）\n\n对于这类情况，我们可能希望提供一个通用 API：\n\n```js\n<Router>\n  <ScrollRestoration>\n    <div>\n      <h1>App</h1>\n\n      <RestoredScroll id=\"bunny\">\n        <div style={{ height: '200px', overflow: 'auto' }}>I will overflow</div>\n      </RestoredScroll>\n    </div>\n  </ScrollRestoration>\n</Router>\n```\n\n首先，ScrollRestoration 将导航窗口向上滚动。其次，它将 location.key 用于将窗口滚动位置和 RestoredScroll 组件的滚动位置保存到 sessionStorage。然后，当 ScrollRestoration 或 RestoredScroll mount 时，他们可以从 sessionsStorage 查找位置。棘手的部分是为不希望管理窗口滚动的情况定义“退出” API。例如，如果你有一些标签导航浮动你可能你的网页里面的内容不想要滚动到顶部（标签可能被滚出视！）。当我们得知 Chrome 现在可以为我们管理滚动位置，并意识到不同的应用程序将具有不同的滚动需求时，我们有点失去了我们需要提供某些东西的信念，尤其是当人们只想滚动到顶部时（您可以直接将其直接添加到您的应用中）。基于此，我们不再有足够的力气自己完成工作（就像您一样，我们的时间有限！）。但是，我们很乐意为任何愿意实施通用解决方案的人提供帮助。一个可靠的解决方案甚至可以存在于项目中。如果您开始使用它，请与我们联系:)\n"},{"title":"静态路由","date":"2019-05-01","category":"docs","content":"\n### 静态路由\n\n以前版本的 React Router 使用静态路由来配置应用程序的路由。这样可以在渲染之前检查和匹配路线。由于 v4 转移到动态组件而不是路由配置，因此一些以前的用例变得不那么明显和棘手。我们正在开发一个用于静态路由配置和 React Router 的软件包，以继续满足这些用例。现在正在开发中，但我们希望您能尝试一下并提供帮助。\n\n[React Router Config](https://github.com/reacttraining/react-router/tree/master/packages/react-router-config)\n"},{"title":"设计理念","date":"2019-05-04","category":"docs","content":"\n### 设计理念\n\n本指南的目的是解释使用 React Router 时要具有的思维模型。我们称之为“动态路由”，它与您可能更熟悉的“静态路由”完全不同。\n\n#### 静态路由\n\n如果您使用过 Rails，Express，Ember，Angular 等，则使用了静态路由。在这些框架中，您将在进行任何渲染之前的应用程序初始化过程中声明路由。React Router < v4 也是静态的（大部分是静态的）。让我们看一下如何在 express 中配置路由：\n\n```js\n// Express Style routing:\napp.get('/', handleIndex)\napp.get('/invoices', handleInvoices)\napp.get('/invoices/:id', handleInvoice)\napp.get('/invoices/:id/edit', handleInvoiceEdit)\n\napp.listen()\n```\n\n请注意在应用监听之前如何声明路由。我们使用的客户端路由器是相似的。在 Angular 中，您先声明路由，然后 AppModule 在渲染之前将其导入顶层：\n\n```js\n// Angular Style routing:\nconst appRoutes: Routes = [\n  {\n    path: 'crisis-center',\n    component: CrisisListComponent\n  },\n  {\n    path: 'hero/:id',\n    component: HeroDetailComponent\n  },\n  {\n    path: 'heroes',\n    component: HeroListComponent,\n    data: { title: 'Heroes List' }\n  },\n  {\n    path: '',\n    redirectTo: '/heroes',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)]\n})\nexport class AppModule {}\n```\n\nEmber 具有一个常规 routes.js 文件，该文件会为您读取并导入到应用程序中。同样，这是在您的应用渲染之前发生的。\n\n```js\n// Ember Style Router:\nRouter.map(function() {\n  this.route('about')\n  this.route('contact')\n  this.route('rentals', function() {\n    this.route('show', { path: '/:rental_id' })\n  })\n})\n\nexport default Router\n```\n\n尽管 API 不同，但它们都共享“静态路由”模型。React Router 也跟进了直到 v4。为了成功使用 React Router，您需要忘记所有这些！：O\n\n#### 背景故事\n\n坦率地说，React Router v2 中采取的方向感到非常沮丧。我们（Michael 和 Ryan）感到受到 API 的限制，认识到我们正在重新实现 React 的各个部分（生命周期等），而这与 React 为构建 UI 提供的思维模型不匹配。\n\n我们正讨论该如何处理的工作的时候穿过酒店的走廊。我们互相问：“如果使用我们在讲习班中教学的模式建造路由器，那会是什么样？”\n\n仅仅几个小时的开发时间，我们就获得了概念证明 PoC，我们知道这是我们希望的 react 路由的未来。我们最终得到的 API 并不是 React 之外的“ API”，它是由 React 的其余部分组成或自然地融入其中的。我们认为您会喜欢它的！\n\n#### 动态路由\n\n当我们说动态路由，是指在您的应用渲染时发生的路由跳转，而不是在运行的应用之外的配置或约定中进行。这意味着几乎所有内容都是 React Router 中的一个组件。这是对该 API 的 60 秒回顾，以了解其工作原理：\n\n首先，为你的开发环境选择一个 Router 组件，并在 react 应用的顶层渲染：\n\n```js\n// react-native\nimport { NativeRouter } from 'react-router-native'\n\n// react-dom (what we'll use here)\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  el\n)\n```\n\n接下来，获取`<Link>`组件以链接到新位置:\n\n```js\nconst App = () => (\n  <div>\n    <nav>\n      <Link to=\"/dashboard\">Dashboard</Link>\n    </nav>\n  </div>\n)\n```\n\n最后，渲染一个 Route 以在用户访问时显示一些 UI /dashboard:\n\n```js\nconst App = () => (\n  <div>\n    <nav>\n      <Link to=\"/dashboard\">Dashboard</Link>\n    </nav>\n    <div>\n      <Route path=\"/dashboard\" component={Dashboard} />\n    </div>\n  </div>\n)\n```\n\n该 Route 将使`<Dashboard {...props}/>`其中 props 包含一些 react-router 的具体属性，包括`{ match, location, history }`。如果用户没有在/dashboard 路径上， 那么 Route 将呈现 null。这几乎就是它的全部逻辑。\n\n#### 嵌套路由\n\n许多路由器都有“嵌套路由”的概念。如果您使用过 v4 之前的 React Router 版本，您也会知道它也是如此！当您从静态路由配置转换为动态渲染的路由时，如何“嵌套路由”？好吧，您如何嵌套一个 div？\n\n```js\nconst App = () => (\n  <BrowserRouter>\n    <div>\n      <Route path=\"/tacos\" component={Tacos} />\n    </div>\n  </BrowserRouter>\n)\n\n// when the url matches `/tacos` this component renders\nconst Tacos = ({ match }) => (\n  //这是一个嵌套路由\n  <div>\n    {/* 这是一个嵌套路由\n        match.url 帮助我们定义相对路径 */}\n    <Route path={match.url + '/carnitas'} component={Carnitas} />\n  </div>\n)\n```\n\n你会发现我们在没有嵌套 API 的情况下完成了嵌套路由的操作。Route 只是一个组件，就像 div。因此，要嵌套 Route 或 div，您只需…做就可以了。\n\n让我们看看更加复杂的例子。\n\n#### 响应式路由\n\n考虑用户导航到/invoices。您的 web 应用要适应不同的屏幕尺寸。\n\n1. 对于视口狭窄的小屏幕，因只向他们显示发票清单和发票仪表板的链接。他们可以从那里更深入地导航。\n\n```\nSmall Screen\nurl: /invoices\n\n+----------------------+\n|                      |\n|      Dashboard       |\n|                      |\n+----------------------+\n|                      |\n|      Invoice 01      |\n|                      |\n+----------------------+\n|                      |\n|      Invoice 02      |\n|                      |\n+----------------------+\n|                      |\n|      Invoice 03      |\n|                      |\n+----------------------+\n|                      |\n|      Invoice 04      |\n|                      |\n+----------------------+\n```\n\n2. 在较大的屏幕上，我们想显示一个主从视图，其中导航在左侧，仪表板或特定发票在右侧。\n\n```\nLarge Screen\nurl: /invoices/dashboard\n\n+----------------------+---------------------------+\n|                      |                           |\n|      Dashboard       |                           |\n|                      |   Unpaid:             5   |\n+----------------------+                           |\n|                      |   Balance:   $53,543.00   |\n|      Invoice 01      |                           |\n|                      |   Past Due:           2   |\n+----------------------+                           |\n|                      |                           |\n|      Invoice 02      |                           |\n|                      |   +-------------------+   |\n+----------------------+   |                   |   |\n|                      |   |  +    +     +     |   |\n|      Invoice 03      |   |  | +  |     |     |   |\n|                      |   |  | |  |  +  |  +  |   |\n+----------------------+   |  | |  |  |  |  |  |   |\n|                      |   +--+-+--+--+--+--+--+   |\n|      Invoice 04      |                           |\n|                      |                           |\n+----------------------+---------------------------+\n```\n\n现在暂停一分钟，考虑/invoices 两种屏幕尺寸的网址。它甚至是大屏幕的有效路由吗？我们应该在右边放什么？\n\n```\nLarge Screen\nurl: /invoices\n+----------------------+---------------------------+\n|                      |                           |\n|      Dashboard       |                           |\n|                      |                           |\n+----------------------+                           |\n|                      |                           |\n|      Invoice 01      |                           |\n|                      |                           |\n+----------------------+                           |\n|                      |                           |\n|      Invoice 02      |             ???           |\n|                      |                           |\n+----------------------+                           |\n|                      |                           |\n|      Invoice 03      |                           |\n|                      |                           |\n+----------------------+                           |\n|                      |                           |\n|      Invoice 04      |                           |\n|                      |                           |\n+----------------------+---------------------------+\n```\n\n在大屏幕上，/invoices 不是有效路由，但在小屏幕上，则是有效路由！为了使事情变得更有趣，请考虑使用大型手机的人。他们可能/invoices 以纵向观看，然后将手机旋转为横向。突然，我们有足够的空间来显示主从界面，因此您应该立即进行重定向！React Router 先前版本的静态路由并没有真正解决这个问题的方法。但是，当路由是动态的时，您可以声明性地组合此功能。如果您开始考虑将路由选择为 UI，而不是静态配置，那么您的直觉将引导您进入以下代码\n\n```js\nconst App = () => (\n  <AppLayout>\n    <Route path=\"/invoices\" component={Invoices} />\n  </AppLayout>\n)\n\nconst Invoices = () => (\n  <Layout>\n    {/* always show the nav */}\n    <InvoicesNav />\n\n    <Media query={PRETTY_SMALL}>\n      {screenIsSmall =>\n        screenIsSmall ? (\n          // small screen has no redirect\n          <Switch>\n            <Route exact path=\"/invoices/dashboard\" component={Dashboard} />\n            <Route path=\"/invoices/:id\" component={Invoice} />\n          </Switch>\n        ) : (\n          // large screen does!\n          <Switch>\n            <Route exact path=\"/invoices/dashboard\" component={Dashboard} />\n            <Route path=\"/invoices/:id\" component={Invoice} />\n            <Redirect from=\"/invoices\" to=\"/invoices/dashboard\" />\n          </Switch>\n        )\n      }\n    </Media>\n  </Layout>\n)\n```\n\n当用户将手机从纵向旋转到横向时，此代码将自动将其重定向到仪表板。有效路由的集合根据用户手中的移动设备的动态性质而改变。这只是一个例子。我们可以讨论许多其他问题，但我们将总结以下建议：为了使您的直觉与 React Router 的直觉保持一致，请考虑组件而不是静态路由。考虑一下如何使用 React 的声明式可组合性解决问题，因为几乎每个“ React Router 问题”都可能是“ React 问题”。\n"},{"title":"<MemoryRouter>","date":"2019-03-26","category":"docs","content":"\n### `<MemoryRouter>`\n\n一个使用内存读写“URL”和历史记录的路由器（不读或写到地址栏）。在测试和非浏览器环境（例如 React Native）中很有用。\n\n```js\n<MemoryRouter\n  initialEntries={optionalArray}\n  initialIndex={optionalNumber}\n  getUserConfirmation={optionalFunc}\n  keyLength={optionalNumber}\n>\n  <App />\n</MemoryRouter>\n```\n\n#### initialEntries: array\n\n一个初始化 history 栈的数组，他们可以是带有 { pathname, search, hash, state } 属性的对象或者 url 字符串。\n\n```js\n<MemoryRouter\n  initialEntries={['/one', '/two', { pathname: '/three' }]}\n  initialIndex={1}\n>\n  <App />\n</MemoryRouter>\n```\n\n#### initialIndex: number\n\n用于表示初始记录在 initialEntries 中的位置。\n\n#### getUserConfirmation: func\n\n用于确认导航的方法。默认使用 window.prompt\n\n```js\n<MemoryRouter\n  getUserConfirmation={(message, callback) => {\n    // 默认效果\n    const allowTransition = window.confirm(message)\n    callback(allowTransition)\n  }}\n/>\n```\n\n#### keyLength: number\n\nlocation.key 的长度，默认为 6.\n\n```js\n<MemoryRouter keyLength={12} />\n```\n\n#### children: node\n\n要渲染的组件\n\n> 注：react<16 中你只能包括一个子节点，因为 render 方法不能返回超过一个的根节点。如果你需要多个根节点，你只需要把他们包裹在一个`<div>`中\n"},{"title":"<BrowserRouter>","date":"2019-03-30","category":"docs","content":"\n### <BrowserRouter>\n\n一个使用 HTML5 history API 的`<Router>`（ pushState，replaceState 和 popstate 事件），让您的 UI 同步与 URL。\n\n#### basename: string\n\n所有导航的路径前缀。如果你的应用不是部署在根目录上，你需要把它设置为部署的相对地址。basename 属性应该有带有`/`前缀，但不包括`/`后缀\n\n```jsx\n<BrowserRouter basename=\"/calendar\">\n    <Link to=\"/today\"/> // 渲染 <a href=\"/calendar/today\">\n    <Link to=\"/tomorrow\"/> // 渲染 <a href=\"/calendar/tomorrow\">\n</BrowserRouter>\n```\n\n#### getUserConfirmation: func\n\n用于确认导航的方法。默认使用 window.prompt\n\n```js\n<BrowserRouter\n  getUserConfirmation={(message, callback) => {\n    // 默认效果\n    const allowTransition = window.confirm(message)\n    callback(allowTransition)\n  }}\n/>\n```\n\n#### forceRefresh: bool\n\n如果值为 true，导航时会刷新整个页面。您可能希望使用它来模仿传统的服务器渲染应用程序在页面导航之间刷新整个页面的工作方式。\n\n```js\n<BrowserRouter forceRefresh={true} />\n```\n\n#### keyLength: number\n\nlocation.key 的长度，默认为 6.\n\n```js\n<BrowserRouter keyLength={12} />\n```\n\n#### children: node\n\n要渲染的组件\n\n> 注：react<16 中你只能包括一个子节点，因为 render 方法不能返回超过一个的根节点。如果你需要多个根节点，你只需要把他们包裹在一个`<div>`中\n"},{"title":"<Link>","date":"2019-03-29","category":"docs","content":"\n### `<Link>`\n\n为你的 web 应用提供声明式，高可用性的路由导航。\n\n#### to: string\n\n链接位置的字符串表示形式，是通过将位置的路径名，搜索 query 和 hash 属性连接在一起而创建的。\n\n```js\n<Link to=\"/courses?sort=name\" />\n```\n\n或\n\n#### to: object\n\n一个包含以下属性的对象：\n\n- pathname: 链接地址的路径表示\n- search: 查询属性的字符串表示\n- hash: url 中的 hash 部分\n- state: location 要在地址上持久化的属性\n\n```js\n<Link\n  to={{\n    pathname: '/courses',\n    search: '?sort=name',\n    hash: '#the-hash',\n    state: { fromDashboard: true }\n  }}\n/>\n```\n\n或\n\n#### to: function\n\n一个传入当前 location 属性，并返回上述 string 或 object 类型的方法\n\n```js\n<Link to={location => ({ ...location, pathname: \"/courses\" })} />\n<Link to={location => `${location.pathname}?sort=name`} />\n\n```\n\n#### replace: bool\n\n当 replace 属性为 true 时，点击 Link 会替换当前 history 栈中的值，而不是添加一项\n\n```js\n<Link to=\"/courses\" replace />\n```\n\n#### innerRef: function\n\n从 React Router 5.1 开始，如果您使用的是 React 16，则不需要此属性，因为我们会将 ref 转发到底层<a>。您仅需使用默认的 ref 属性\n\n```js\n<Link\n  to=\"/\"\n  innerRef={node => {\n    // `node` 会指向<a>元素\n  }}\n/>\n```\n\n#### innerRef: RefObject\n\n从 React Router 5.1 开始，如果您使用的是 React 16，则不需要此属性，因为我们会将 ref 转发到底层<a>。您仅需使用默认的 ref 属性\n\n```js\nlet anchorRef = React.createRef()\n\n<Link to=\"/\" innerRef={anchorRef} />\n```\n\n#### component: React.Component\n\n如果您想利用自己的导航组件，只需将其传给 component 属性即可。\n\n```js\nconst FancyLink = React.forwardRef((props, ref) => (\n  <a ref={ref}>💅 {props.children}</a>\n))\n\n<Link to=\"/\" component={FancyLink} />\n```\n\n#### 其他\n\n你可以将其他属性直接传给底层的`<a>`元素，例如 title,id,className 等\n"},{"title":"<HashRouter>","date":"2019-03-29","category":"docs","content":"\n### `<HashRouter>`\n\n一个使用 url 中的 hash 部分来导航的路由器。（window.location.hash)。\n\n> 注意事项：hash history 不支持 location.key 或 location.state。在以前的版本中，我们尝试对行为进行匀称处理，但存在一些无法解决的极端情况。任何需要此行为的代码或插件都将无法工作。由于此技术仅旨在支持旧版浏览器，因此我们建议您正确配置您的服务器并使用`<BrowserRouter>`\n\n#### basename: string\n\n所有导航的路径前缀。如果你的应用不是部署在根目录上，你需要把它设置为部署的相对地址。basename 属性应该有带有`/`前缀，但不包括`/`后缀\n\n```js\n<HashRouter basename=\"/calendar\"/>\n<Link to=\"/today\"/> // 渲染 <a href=\"#/calendar/today\">\n\n```\n\n#### getUserConfirmation: func\n\n用于确认导航的方法。默认使用 window.prompt\n\n```js\n<BrowserRouter\n  getUserConfirmation={(message, callback) => {\n    // 默认效果\n    const allowTransition = window.confirm(message)\n    callback(allowTransition)\n  }}\n/>\n```\n\n#### hashType: string\n\nwindow.location.hash 的编码格式。有以下几种选择：\n\n- `slash`：`#/` 和 `#/sunshine/lollipops`\n- `noslash`：`#` 和 `#sunshine/lollipops`\n- `hashbang`：`#!/` 和 `#!/sunshine/lollipops`\n\n默认值是`slash`\n\n#### children: node\n\n要渲染的组件\n"},{"title":"<NavLink>","date":"2019-03-28","category":"docs","content":"\n### `<NavLink>`\n\n特殊版本的`<Link>`，它将在与当前 URL 匹配时将 css 样式属性添加到渲染的元素。\n\n```js\n<NavLink to=\"/about\">About</NavLink>\n```\n\n#### activeClassName: string\n\n当路径匹配时 dom 元素获得的 class 名称，与元素原有的 className 组合\n\n```js\n<NavLink to=\"/faq\" activeClassName=\"selected\">\n  FAQs\n</NavLink>\n```\n\n#### activeStyle: object\n\n当路径匹配时获得的 css 样式\n\n```js\n<NavLink\n  to=\"/faq\"\n  activeStyle={{\n    fontWeight: 'bold',\n    color: 'red'\n  }}\n>\n  FAQs\n</NavLink>\n```\n\n#### exact: bool\n\n如果为 true，则仅当位置完全匹配时，才会应用 active 的 css 类名/css 样式。\n\n#### isActive: func\n\n一种为确定链接是否处于活动状态添加额外逻辑的方法。如果您要执行更多操作，而不是仅仅验证链接的路径名是否与当前 URL 的匹配，则应使用此方法。\n\n```js\n<NavLink\n  to=\"/events/123\"\n  isActive={(match, location) => {\n    if (!match) {\n      return false\n    }\n\n    // 只有在id为奇数时才会添加active属性\n    const eventID = parseInt(match.params.eventID)\n    return !isNaN(eventID) && eventID % 2 === 1\n  }}\n>\n  Event 123\n</NavLink>\n```\n\n#### aria-current: string\n\n应用于 active 链接上的 aria-current dom 属性值：\n\n- \"page\": 用于指示一组分页链接中的链接\n- \"step\": 用于指示基于步骤的过程的步骤指示器中的链接\n- \"location\": 用于指示在视觉上突出显示的图像作为流程图的当前组成部分\n- \"date\": 用于指示日历中的当前日期\n- \"time\": 用于指示时间表中的当前时间\n- \"true\": 用于指示 NavLink 是否处于活动状态\n\n基于 [WAI-ARIA 1.1 规范](https://www.w3.org/TR/wai-aria-1.1/#aria-current)\n"},{"title":"<Route>","date":"2019-03-25","category":"docs","content":"\n### `<Route>`\n\n`<Route>`组件应该是 react-router-dom 包里最重要的，最值得去认真学习和使用的组件。它最基本的责任就是在 URL 和自己的路径对应时渲染 UI。\n\n思考下列代码：\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/news\">\n        <NewsFeed />\n      </Route>\n    </div>\n  </Router>,\n  node\n)\n```\n\n如果应用程序的位置是/，则 UI 层次结构会类似于：\n\n```js\n<div>\n  <Home />\n  <!-- react-empty: 2 -->\n</div>\n```\n\n如果应用程序的位置是/news，则 UI 层次结构会类似于：\n\n```js\n<div>\n  <!-- react-empty: 1 -->\n  <NewsFeed />\n</div>\n```\n\n“ react-empty”注释只是 React null 渲染的实现细节。但这有助于我们说明 react-router 的实现细节。因为事实上在 react-router 的实现，不管`<Route>`匹配与否，他对应的组件是一直渲染的。（不匹配时渲染 null， 匹配时渲染`<Route>` 对应的组件）\n\n如果相同的组件在组件树的同一个层级中被当做多个`<Route>`的子组件，那么 React 会把他们当做相同的组件，因此，在切换路由时候它的 state 值会被保留。如果这不是你的期望，你可以在`<Route>`加上唯一的 key 属性，来告诉 react 他们属于不同的组件。\n\n#### `<Route>` render 方法\n\n我们推荐使用子组件为`<Route>`提供渲染的组件，就像上述的案例中那样。但是，我们也为您提供了其他更多可选的方法（他们存在的主要意义是为了支持那些使用旧版本 react-router 编写的程序）\n\n- `<Route component>`\n- `<Route render>`\n- `<Route children>` function\n\n您只应该使用上述方法中的一种来为`<Route>`提供渲染的子组件。下面的案例会帮助您理解他们之间的区别：\n\n#### 参数\n\n下面几个参数会默认注入到`<Route>`包含的子组件渲染中\n\n- [match](./match)\n- [location](./location)\n- [history](./history)\n\n#### `<Route component>` 渲染\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n// 所有路由属性 (match, location and history) 会被注入 User 组件\nfunction User(props) {\n  return <h1>Hello {props.match.params.username}!</h1>\n}\n\nReactDOM.render(\n  <Router>\n    <Route path=\"/user/:username\" component={User} />\n  </Router>,\n  node\n)\n```\n\n当您使用 component（而不是下面的 render 或 children）时，路由器将使用 React.createElement 从给定的组件创建一个新的 React 元素。这意味着，如果为 component 提供的 props 中包含内联函数，则在每次渲染时都会创建一个新组件。这将导致现有组件的卸载和新组件的挂载，而不仅仅是更新现有组件。使用内联函数进行内联渲染时，请使用 render 或 children 道具（如下）。\n\n#### `<Route render>`\n\n这样可以方便地进行内联渲染和包装，而不必进行上述不必要的重新挂载。\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n// convenient inline rendering\nReactDOM.render(\n  <Router>\n    <Route path=\"/home\" render={() => <div>Home</div>} />\n  </Router>,\n  node\n)\n\n// wrapping/composing\n// You can spread routeProps to make them available to your rendered Component\nfunction FadingRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={routeProps => (\n        <FadeIn>\n          <Component {...routeProps} />\n        </FadeIn>\n      )}\n    />\n  )\n}\n\nReactDOM.render(\n  <Router>\n    <FadingRoute path=\"/cool\" component={Something} />\n  </Router>,\n  node\n)\n```\n\n> 警告： `<Route component>`优先级高于`<Route render>`，因此请不要在同一个`<Route>`中使用两者。\n\n#### `<Route children>` function\n\n有时您可能希望无论 url 匹配与否都渲染组件。在这种情况下，您可以使用 children prop 功能。它的工作原理与 render 完全相同，只是 render 只在存在匹配项而被调用和渲染。\n\nchildren 属性接收 render 所有和 render 属性获得的一样的路由属性。唯一区别是，当路由不匹配的 URL 时，match 属性是 null。这使您可以根据路由是否匹配来动态调整 UI。active 如果路线匹配，我们在这里添加一个类\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\n\nfunction ListItemLink({ to, ...rest }) {\n  return (\n    <Route\n      path={to}\n      children={({ match }) => (\n        <li className={match ? 'active' : ''}>\n          <Link to={to} {...rest} />\n        </li>\n      )}\n    />\n  )\n}\n\nReactDOM.render(\n  <Router>\n    <ul>\n      <ListItemLink to=\"/somewhere\" />\n      <ListItemLink to=\"/somewhere-else\" />\n    </ul>\n  </Router>,\n  node\n)\n```\n\n这对动画也很有用:\n\n```js\n\n<Route\n  children={({ match, ...rest }) => (\n    {/* 动画会始终渲染，因此你可以使用生命周期来动画控制组件的挂载和卸载 */}\n    <Animate>\n      {match && <Something {...rest}/>}\n    </Animate>\n  )}\n/>\n\n```\n\n#### path: string | string []\n\n所以可以被[path-to-regexp@^1.7.0 ](https://github.com/pillarjs/path-to-regexp/tree/v1.7.0)识别的 url 都能使用。\n\n```js\n<Route path=\"/users/:id\">\n  <User />\n</Route>\n<Route path={[\"/users/:id\", \"/profile/:id\"]}>\n  <User />\n</Route>\n```\n\n#### exact: bool\n\n当值为 true 时，仅当 location.pathname 和路由路径完全匹配时候渲染。\n\n```js\n<Route exact path=\"/one\">\n  <About />\n</Route>\n```\n\n#### strict: bool\n\n```js\n<Route strict path=\"/one/\">\n  <About />\n</Route>\n```\n\n| 路由路径 | location.pathname | 匹配与否 |\n| -------- | ----------------- | -------- |\n| /one/    | /one              | 否       |\n| /one/    | /one/             | 是       |\n| /one/    | /one/two          | 是       |\n\n当值为 true 时，带有 path 斜杠的只会与 location.pathname 带有斜杠的匹配。当 location.pathname 中有其他网址段时，此选项无效。\n\n```js\n<Route exact strict path=\"/one\">\n  <About />\n</Route>\n```\n\n| 路由路径 | location.pathname | 匹配与否 |\n| -------- | ----------------- | -------- |\n| /one/    | /one              | 是       |\n| /one/    | /one/             | 否       |\n| /one/    | /one/two          | 否       |\n\n#### location: object\n\n一个`<Route>`元素尝试其匹配 path 到当前的历史位置（通常是当前浏览器 URL）。但是，也可以传递与 location.pathname 不同的值进行匹配。如需要将`<Route>`与当前历史记录位置以外的其他位置进行匹配时，这很有用，如[Animated Transitions](https://reactrouter.com/web/example/animated-transitions)示例所示。如果`<Route>`元素包装在中，`<Switch>`并且与传递给的位`置<Switch>`（或当前历史记录位置）匹配，则 location 传递给`<Route>`的属性将被`<Switch>`上的属性 [代码](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/modules/Switch.js#L51)覆盖。\n\n#### sensitive: bool\n\n当值为 true 时，匹配时将区分大小写\n\n| 路由路径 | location.pathname | sensitive 的值 | 匹配与否 |\n| -------- | ----------------- | -------------- | -------- |\n| /one/    | /one              | true           | 是       |\n| /one/    | /one/             | true           | 否       |\n| /one/    | /one/two          | false          | 否       |\n"},{"title":"<Prompt>","date":"2019-03-27","category":"docs","content":"\n### `<Prompt>`\n\nRe-exported from core Prompt\n"},{"title":"<Redirect>","date":"2019-03-26","category":"docs","content":"\n### `<Redirect>`\n\n渲染`<Redirect>`会导航到新位置。新位置将覆盖历史记录堆栈中的当前位置，就像服务器端重定向（HTTP 3xx）一样。\n\n#### to: string\n\n重定向到的 url，所以可以被[path-to-regexp@^1.7.0 ](https://github.com/pillarjs/path-to-regexp/tree/v1.7.0)识别的 url 都能使用。所有在 from 中匹配到的 url 参数必须都被使用。\n\n```js\n<Redirect to=\"/somewhere/else\" />\n```\n\n#### to: object\n\n重定向到的 url，所以可以被[path-to-regexp@^1.7.0 ](https://github.com/pillarjs/path-to-regexp/tree/v1.7.0)识别的 url 都能使用。所有在 from 中匹配到的 url 参数必须都被使用。\n\nstate 可以通过 this.props.location.state 重定向到组件中的对象进行访问。referrer 值可以通过 this.props.location.state.referrer 在 Login 指向的组件中访问'\n\n```js\n<Redirect\n  to={{\n    pathname: '/login',\n    search: '?utm=your+face',\n    state: { referrer: currentLocation }\n  }}\n/>\n```\n\n#### push: bool\n\n值为 true 时，重定向会将新条目推入 history 栈，而不是替换当前条目。\n\n#### from: string\n\n从 from 指向的 url 开始重定向，所以可以被[path-to-regexp@^1.7.0 ](https://github.com/pillarjs/path-to-regexp/tree/v1.7.0)识别的 url 都能使用。会将所有匹配的 URL 参数提供给属性 to。必须包含中使用的所有参数 to。未使用的其他参数将 to 被忽略。\n\n> 仅当渲染的`<Redirect>`内部时，才可以使用它来匹配位置`<Switch>`。请参阅`<Switch children>`以获取更多详细信息。\n\n```js\n<Switch>\n  <Redirect from='/old-path' to='/new-path' />\n  <Route path='/new-path'>\n    <Place />\n  </Route>\n</Switch>\n\n// Redirect with matched parameters\n<Switch>\n  <Redirect from='/users/:id' to='/users/profile/:id'/>\n  <Route path='/users/profile/:id'>\n    <Profile />\n  </Route>\n</Switch>\n```\n\n#### exact: bool\n\n#### strict: bool\n\n#### sensitive: bool\n\n匹配时是否区分大小写，true 时为区分\n"},{"title":"<StaticRouter>","date":"2019-03-24","category":"docs","content":"\n### `<StaticRouter>`\n\n一种永远不会改变 location 的路由。\n\n这个路由会在服务端渲染场景中有用（用户完全没有点击任何链接，因此也没有任何路由改变发生）。同样，他在单元测试场景中也很有用。\n下列是一个示例 node 服务器，他会在有上下文 url 时发送 302 状态码，并在其他情况下发送 html\n\n```js\nimport http from 'http'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { StaticRouter } from 'react-router'\n\nhttp\n  .createServer((req, res) => {\n    // This context object contains the results of the render\n    const context = {}\n\n    const html = ReactDOMServer.renderToString(\n      <StaticRouter location={req.url} context={context}>\n        <App />\n      </StaticRouter>\n    )\n\n    // context.url will contain the URL to redirect to if a <Redirect> was used\n    if (context.url) {\n      res.writeHead(302, {\n        Location: context.url\n      })\n      res.end()\n    } else {\n      res.write(html)\n      res.end()\n    }\n  })\n  .listen(3000)\n```\n\n#### basename: string\n\n所有导航的路径前缀。basename 属性应该有带有`/`前缀，但不包括`/`后缀\n\n```js\n<StaticRouter basename=\"/calendar\">\n  <Link to=\"/today\"/> // renders <a href=\"/calendar/today\">\n</StaticRouter>\n```\n\n#### location: string\n\n服务端接受到的 url\n\n```js\n<StaticRouter location={req.url}>\n  <App />\n</StaticRouter>\n```\n\n#### location: object\n\n一个格式类似于 `{ pathname, search, hash, state }`的对象\n\n```js\n<StaticRouter location={{ pathname: '/bubblegum' }}>\n  <App />\n</StaticRouter>\n```\n\n#### context: object\n\n一个普通的 JavaScript 对象。在渲染期间，组件可以向对象添加属性以存储有关渲染的信息。\n\n当`<Route>`匹配时，它将把上下文对象传递作为 staticContext 属性传给下游组件。查看[服务器渲染](../向导/服务端渲染)指南，以获取有关如何自行执行此操作的更多信息。渲染之后，这些属性可用于配置服务器的响应\n\n```js\nconst context = {}\n<StaticRouter context={context}>\n  <App />\n</StaticRouter>\nif (context.status === \"404\") {\n  // ...\n}\n```\n\n#### children: node\n\n要渲染的组件\n\n> 注：react<16 中你只能包括一个子节点，因为 render 方法不能返回超过一个的根节点。如果你需要多个根节点，你只需要把他们包裹在一个`<div>`中\n"},{"title":"history","date":"2019-03-22","category":"docs","content":"\n### `history`\n\n翻译 ing\n\n本文档中的术语“history”和“history 对象”指的是[history](https://github.com/ReactTraining/history)软件包，它是 React Router 仅有的两个主要依赖项之一（除了 React 本身），它提供了几种不同的实现来管理各种环境中 JavaScript 的会话历史。\n\n以及一下几个术语：\n\n- \"browser history\": 特定于 DOM 的实现，在支持 HTML5 history API 的 Web 浏览器中很有用\n- \"hash history\": 特定于 DOM 的实现，在不支持 HTML5 history API 的 Web 浏览器中很有用\n- \"memory history\": 一个在内存中管理 history 的实现，在非浏览器环境和测试环境中很有用\n\nhistory 对象通常包含以下属性：\n\n- length - (number): history 中的记录数量\n- action - (string): 当前的操作（PUSH, POP, REPLACE)\n- location - (object): 当前的 location 对象\n- push - (path, [state]): 向 history 栈推一条记录\n- replace - (path, [state]): 将 history 栈顶部的记录替换\n- go - (n): 在 history 栈中移动 n 步\n- goBack - (): 与 go(-1)相同\n- goFoward - (): 与 go(1)相同\n- block - (prompt): 阻止导航\n\n#### history 是可变对象\n\n历史对象是可变的。因此，建议从`<Route>`的 history 属性访问，而不是从 history.location。这可以确保您对 React 的假设在生命周期挂钩中是正确的。例如：\n\n```js\nclass Comp extends React.Component {\n  componentDidUpdate(prevProps) {\n    // will be true\n    const locationChanged = this.props.location !== prevProps.location\n\n    // 错误, 会一直是false\n    const locationChanged =\n      this.props.history.location !== prevProps.history.location\n  }\n}\n;<Route component={Comp} />\n```\n"},{"title":"<Router>","date":"2019-03-24","category":"docs","content":"\n### `<Router>`\n\n所有路由器组件的通用底层接口。通常，应用将使用高级路由器之一代替：\n\n- `<BrowserRouter>`\n- `<HashRouter>`\n- `<MemoryRouter>`\n- `<NativeRouter>`\n- `<StaticRouter>`\n\n使用底层路由器的最常见用例是将自定义历史记录与状态管理库（例如 Redux 或 Mobx）进行同步。请注意，这不是使用状态管理库与 React Router 的必须步骤，而仅用于深度集成。\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router'\nimport { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  node\n)\n```\n\n#### history: object\n\n导航使用的 history 对象\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nconst customHistory = createBrowserHistory()\n\nReactDOM.render(<Router history={customHistory} />, node)\n```\n\n#### children: node\n\n渲染的子组件\n\n```js\n<Router>\n  <App />\n</Router>\n```\n"},{"title":"location","date":"2019-03-21","category":"docs","content":"\n### `location`\n\nlocation 对象表示应用程序现在所在的位置，您希望其运行的位置，甚至是以前的位置。看起来像这样：\n\n```json\n{\n  \"key\": \"ac3df4\",\n  \"pathname\": \"/somewhere\",\n  \"search\": \"?some=search-string\",\n  \"hash\": \"#howdy\",\n  \"state\": {\n    [userDefined]: true\n  }\n}\n```\n\nreact router 会在以下几个场景中为您注入 location 对象：\n\n- Route 组件中：`this.props.location`\n- Route 组件的 render 方法中：`({ location }) => ()`\n- Route 组件的子组件中：`({ location }) => ()`\n- withRoutor 高阶组件中： `this.props.location`\n\n你也可以在 history.location 中找到他，但你不应该使用他，因为他是可变对象。[扩展阅读](https://reactrouter.com/)\n\n位置对象永远不会发生变化，因此您可以在生命周期挂钩中使用它来确定导航发生的时间，这对于数据获取和动画处理非常有用。\n\n```js\n\ncomponentWillReceiveProps(nextProps) {\n  if (nextProps.location !== this.props.location) {\n    // navigated!\n  }\n}\n```\n\n你可以在以下场景中提供 location 对象来进行导航：\n\n- `<Link to={}`\n- `<Redirect to={}`\n- `history.push()`\n- `history.replace()`\n\n通常情况下你应该使用字符串，但如果你需要在 location 之前持久化一些数据，那你可以使用 location 对象。如果您要基于导航历史而不是仅基于路径（如模式）来分支 UI，这将非常有用。\n\n```js\n// 通常你仅需要\n<Link to=\"/somewhere\"/>\n\n// 但你也可以：\nconst location = {\n  pathname: '/somewhere',\n  state: { fromDashboard: true }\n}\n\n<Link to={location}/>\n<Redirect to={location}/>\nhistory.push(location)\nhistory.replace(location)\n\n```\n\n最后，您可以将 location 传递给以下组件：\n\n- `<Switch>`\n- `<Route>`\n\n这样可以防止他们在路由器状态下使用实际 location 对象。这对于动画和未完成的导航非常有用，或者在您想要诱使组件在与 location 对象不同的位置进行渲染时，这很有用。\n"},{"title":"Hooks","date":"2019-03-31","category":"docs","content":"\n### Hooks\n\nReact router 为您提供了一些 hook，方便你在组件中随时取用 react-router 的状态和进行导航操作\n\n> 注意：你必须使用 react@16.8+ 才能使用这些 hooks！\n\n- useHistory\n- useLocation\n- useParams\n- useRouteMatch\n\n#### useHistory\n\nuseHistory 钩子返回 [history](../history) 对象，你可以在上面进行导航等操作\n\n```js\nimport { useHistory } from 'react-router-dom'\n\nfunction HomeButton() {\n  let history = useHistory()\n\n  function handleClick() {\n    history.push('/home')\n  }\n\n  return (\n    <button type=\"button\" onClick={handleClick}>\n      Go home\n    </button>\n  )\n}\n```\n\n#### useLocation\n\nuseLocation 钩子返回一个代表当前 url 的 [location](../location) 对象。你可以把它想象为一个 useState 钩子，并且在每次 url 变化后会替换为一个新对象。\n\n在您希望每次加载新页面时都使用 Web 分析工具触发新的“pageView”事件的情况下，这可能非常有用，如以下示例所示：\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Switch, useLocation } from 'react-router-dom'\n\nfunction usePageViews() {\n  let location = useLocation()\n  React.useEffect(() => {\n    ga.send(['pageview', location.pathname])\n  }, [location])\n}\n\nfunction App() {\n  usePageViews()\n  return <Switch>...</Switch>\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  node\n)\n```\n\n#### useParams\n\nuseParams 返回 URL 参数的键/值对的对象。使用它来访问 当前`<Route>`对应的 [match.params](../match#params)。\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from 'react-router-dom'\n\nfunction BlogPost() {\n  let { slug } = useParams()\n  return <div>Now showing post {slug}</div>\n}\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\">\n        <HomePage />\n      </Route>\n      <Route path=\"/blog/:slug\">\n        <BlogPost />\n      </Route>\n    </Switch>\n  </Router>,\n  node\n)\n```\n\n#### useRouteMatch\n\nuseRouteMatch 钩子会尝试以与[`<Route>`](../route)组件相同的方式去匹配当前 url。在你希望获得路径匹配数据但不希望使用`<Route>`的时候他可能会很有用。\n\n以前你可能需要：\n\n```js\nimport { Route } from 'react-router-dom'\n\nfunction BlogPost() {\n  return (\n    <Route\n      path=\"/blog/:slug\"\n      render={({ match }) => {\n        // Do whatever you want with the match...\n        return <div />\n      }}\n    />\n  )\n}\n```\n\n而现在：\n\n```js\nimport { useRouteMatch } from 'react-router-dom'\n\nfunction BlogPost() {\n  let match = useRouteMatch('/blog/:slug')\n\n  // Do whatever you want with the match...\n  return <div />\n}\n```\n\nuseRouteMatch 钩子接受一个可选参数，该参数与 matchPath 的 props 参数相同。它可以是字符串的路径名（如上面的示例），也可以是带有 `<Route>` 接受的 match 属性对象，如下所示：\n\n```js\nconst match = useRouteMatch({\n  path: '/BLOG/:slug/',\n  strict: true,\n  sensitive: true\n})\n```\n"},{"title":"match","date":"2019-03-20","category":"docs","content":"\n### `match`\n\n一个 match 对象如何匹配`<Route path>`到 URL 的相关信息。match 对象包含以下属性：\n\n- params: (object): 从路径动态段的 URL 解析的键/值对。\n- isExact: (boolean): 如果整个 URL 匹配是会是 true （没有不被匹配的后缀）\n- path: (string): 用于匹配的路径模式，在构建嵌套`<Route>`时会有用。\n- url: (string): 匹配部分的 URL。在构建嵌套`<Link>`时有用。\n\n你也可以在以下场景中获得自动注入的 match 对象：\n\n- Route 组件中：`this.props.match`\n- Route 组件的 render 方法中：`({ match }) => ()`\n- Route 组件的子组件中：`({ match }) => ()`\n- withRoutor 高阶组件中： `this.props.match`\n- matchPath 中：返回值\n- useRouteMatch 中：返回值\n\n如果一条`<Route>`没有 path 属性，那他将一直被匹配，那种情况下你会获得最近的匹配中的 match 对象。（withRouter 高阶组件中亦是如此）\n\n#### 空匹配\n\n一个使用 children 属性来匹配路由的`<Route>`在不匹配的情况下仍然会调用 children 方法，这种情况下，match 的值会是 null。在不匹配路由时仍然渲染其包含的组件可能会很有用，但在这种情况下你会面对一些挑战。\n\n“解析” URL 的默认方法是将 match.url 字符串连接到“相对”路径。:\n\n```js\nlet path = `${match.url}/relative-path`\n```\n\n如果你在 match 值为 null 是进行上述操作，你会得到一个 TypeError。\n\n一个相似的，但是更加微妙的情况会在以下场景出现：\n\n```js\n// location.pathname = '/matches'\n<Route path=\"/does-not-match\"\n  children={({ match }) => (\n    // match === null\n    <Route\n      render={({ match: pathlessMatch }) => (\n        // pathlessMatch === ???\n      )}\n    />\n  )}\n/>\n\n```\n\n无路径`<Route>`从它的父对象继承 match 属性。如果他们的父母 match 是 null，他们的 natcg 也将是 null。这意味着：\n\n- a）任何子路径/链接都必须是绝对的，因为没有父级可以解析，并且\n- b）无路径路由的父级 match 可以 null 使用 childrenprop 进行渲染。\n"},{"title":"matchPath","date":"2019-03-19","category":"docs","content":"\n### `matchPath`\n"},{"title":"<Switch>","date":"2019-03-23","category":"docs","content":"\n### `<Switch>`\n\n渲染第一个和 location 匹配的子路由。\n\n这与仅使用一堆`<Route>`有何不同？\n\n`<Switch>`独特之处在于它仅渲染一条路由。相反，每个`<Route>`与位置匹配的内容都包含在内。考虑以下路由：\n\n```js\nimport { Route } from 'react-router'\n\nlet routes = (\n  <div>\n    <Route path=\"/about\">\n      <About />\n    </Route>\n    <Route path=\"/:user\">\n      <User />\n    </Route>\n    <Route>\n      <NoMatch />\n    </Route>\n  </div>\n)\n```\n\n如果 URL 是 /about， 那么`<About>`, `<User>`, 和`<NoMatch>`都会被同时渲染。这是符合设计目标的，因为这会允许我们把`<Route>`以多种方式结合在应用中，例如侧边栏，面包屑和引导标签等等。\n\n但是，有时我们只想选择一个`<Route>`进行渲染。如果我们不在，/about 我们也不想匹配/:user（或显示“ 404”页面）。这是使用以下方法的方法 Switch：\n\n```js\nimport { Route, Switch } from 'react-router'\n\nlet routes = (\n  <Switch>\n    <Route exact path=\"/\">\n      <Home />\n    </Route>\n    <Route path=\"/about\">\n      <About />\n    </Route>\n    <Route path=\"/:user\">\n      <User />\n    </Route>\n    <Route>\n      <NoMatch />\n    </Route>\n  </Switch>\n)\n```\n\n现在，如果我们在/about，`<Switch>`将开始寻找匹配项`<Route>`。`<Route path=\"/about\"/>`将匹配并`<Switch>`停止寻找匹配项和渲染`<About>`。\n同样，如果我们在/michael 那时，`<User>`将进行渲染。这对于动画过渡也很有用，因为匹配`<Route>`的渲染位置与上一个相同。\n\n````js\nlet routes = (\n  <Fade>\n    <Switch>\n      {/* 只会渲染一条路由项 */}\n      <Route />\n      <Route />\n    </Switch>\n  </Fade>\n);\n\nlet routes = (\n  <Fade>\n    {/* 这里会一直有2条路由项被渲染，尽管可能其中一条返回了null，这将给添加动画带来很大的困扰 */}\n    <Route />\n    <Route />\n  </Fade>\n);```\n````\n\n#### location: object\n\n一个用于匹配子路由的 location 对象，替换掉当前 history.location 中的值（通常是浏览器的 URL 值）\n\n#### children: node\n\n所有`<Switch>`的子组件都应该是`<Route>`或者`<Redirect>`组件。只有第一个与 location 对象匹配的组件会被渲染、\n\n`<Route>`组件使用 path 属性来匹配 location，`<Redirect>`组件使用 from 属性。 一个没有 path 属性的`<Route>`和一个没有 from 属性的`<Redirect>`会一直匹配当前 location。\n\n如果将 location 属性提供给`<Switch>`，它将覆盖 location 匹配的子元素上的属性。\n\n```js\nimport { Redirect, Route, Switch } from 'react-router'\n\nlet routes = (\n  <Switch>\n    <Route exact path=\"/\">\n      <Home />\n    </Route>\n\n    <Route path=\"/users\">\n      <Users />\n    </Route>\n    <Redirect from=\"/accounts\" to=\"/users\" />\n\n    <Route>\n      <NoMatch />\n    </Route>\n  </Switch>\n)\n```\n"},{"title":"","date":"2019-04-15","category":"docs","content":""},{"title":"withRouter","date":"2019-03-18","category":"docs","content":"\n### `withRouter`\n\n你可以通过 withRouter 高阶组件 访问 history 对象的属性和最近`<Route>`匹配。withRouter 在每次重新渲染时都会更新最新的 match, location, 和 history 属性。\n\n```js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router'\n\n// 一个显示当前路径的简单组件\nclass ShowTheLocation extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  }\n\n  render() {\n    const { match, location, history } = this.props\n\n    return <div>You are now at {location.pathname}</div>\n  }\n}\n\n// 创建一个connect 路由器的组件(借用redux术语) .\nconst ShowTheLocationWithRouter = withRouter(ShowTheLocation)\n```\n\n> 重要提示：withRouter 不像 React Redux 那样订阅位置更改 connect 以进行状态更改。而是在位置更改后从<Router>组件传播出来，然后重新渲染。这意味着，withRouter 它不会对路线的转变重新渲染，除非它的父组件重新渲染。\n\n#### Component.WrappedComponent\n\n被包裹的组件可以用 withRouter 返回对象的静态属性来获得。这会在隔离环境中测试和一些其他用例中有帮助。\n\n```js\n// MyComponent.js\nexport default withRouter(MyComponent)\n\n// MyComponent.test.js\nimport MyComponent from './MyComponent'\nrender(<MyComponent.WrappedComponent location={{...}} ... />)\n\n```\n\n#### wrapperComponentRef：func\n\n一个方法，并将返回值传给包裹组件的 ref 属性（forwardRef）\n\n```js\nclass Container extends React.Component {\n  componentDidMount() {\n    this.component.doSomething()\n  }\n\n  render() {\n    return <MyComponent wrappedComponentRef={c => (this.component = c)} />\n  }\n}\n```\n"},{"title":"示例","date":"2019-05-06","category":"docs","content":""},{"title":"How I cut GTA Online loading times by 70%","date":"2021-03-02","category":"Game","content":"\n[原文链接](https://nee.lv/2021/02/28/How-I-cut-GTA-Online-loading-times-by-70/)\n\nGTA Online. Infamous for its slow loading times. Having picked up the game again to finish some of the newer heists I was shocked (/s) to discover that it still loads just as slow as the day it was released 7 years ago.\n\nIt was time. Time to get to the bottom of this.\n\n## Recon\n\nFirst I wanted to check if someone had already solved this problem. Most of the results I found pointed towards anecdata about how the game is so sophisticated that it needs to load so long, stories on how the p2p network architecture is rubbish (not saying that it isn’t), some elaborate ways of loading into story mode and a solo session after that and a couple of mods that allowed skipping the startup R\\* logo video. Some more reading told me we could save a whopping 10-30 seconds with these combined!\n\nMeanwhile on my PC…\n\n## Benchmark\n\n```sh\n\nStory mode load time:  ~1m 10s\nOnline mode load time: ~6m flat\nStartup menu disabled, time from R* logo until in-game (social club login time isn't counted).\n\nOld but decent CPU:   AMD FX-8350\nCheap-o SSD:          KINGSTON SA400S37120G\nWe have to have RAM:  2x Kingston 8192 MB (DDR3-1337) 99U5471\nGood-ish GPU:         NVIDIA GeForce GTX 1070\n```\n\nI know my setup is dated but what on earth could take 6x longer to load into online mode? I couldn’t measure any difference using the story-to-online loading technique as others have found before me. Even if it did work the results would be down in the noise.\n\n## I am (Not) Alone\n\nIf this poll is to be trusted then the issue is widespread enough to mildly annoy more than 80% of the player base. It’s been 7 years R\\*!\n![](./0.png)\nLooking around a bit to find who are the lucky ~20% that get sub 3 minute load times I came across a few benchmarks with high-end gaming PCs and an online mode load time of about 2 minutes. I would kill hack for a 2 minute load time! It does seem to be hardware-dependent but something doesn’t add up here…\n\nHow come their story mode still takes near a minute to load? (The M.2 one didn’t count the startup logos btw.) Also, loading story to online takes them only a minute more while I’m getting about five more. I know that their hardware specs are a lot better but surely not 5x better.\n\n## Highly accurate measurements\n\nArmed with such powerful tools as the Task Manager I began to investigate what resources could be the bottleneck.\n![](./1.png)\nAfter taking a minute to load the common resources used for both story and online modes (which is near on par with high-end PCs) GTA decides to max out a single core on my machine for four minutes and do nothing else.\n\nDisk usage? None! Network usage? There’s a bit, but it drops basically to zero after a few seconds (apart from loading the rotating info banners). GPU usage? Zero. Memory usage? Completely flat…\n\nWhat, is it mining crypto or something? I smell code. Really bad code.\n\n## Single thread-bound\n\nWhile my old AMD CPU has 8 cores and it does pack a punch, it was made in the olden days. Back when AMD’s single-thread performance was way behind Intel’s. This might not explain all of the load time differences but it should explain most of it.\n\nWhat’s odd is that it’s using up just the CPU. I was expecting vast amounts of disk reads loading up resources or loads of network requests trying to negotiate a session in the p2p network. But this? This is probably a bug.\n\n## Profiling\n\nProfilers are a great way of finding CPU bottlenecks. There’s only one problem - most of them rely on instrumenting the source code to get a perfect picture of what’s happening in the process. And I don’t have the source code. Nor do I need microsecond-perfect readings - I have 4 minutes’ worth of a bottleneck.\n\nEnter stack sampling: for closed source applications there’s only one option. Dump the running process’ stack and current instruction pointer’s location to build a calling tree in set intervals. Then add them up to get statistics on what’s going on. There’s only one profiler that I know of (might be ignorant here) that can do this on Windows. And it hasn’t been updated in over 10 years. It’s Luke Stackwalker! Someone, please give this project some love :)\n![](./2.png)\n\nNormally Luke would group the same functions together but since I don’t have debugging symbols I had to eyeball nearby addresses to guess if it’s the same place. And what do we see? Not one bottleneck but two of them!\n\n## Down the rabbit hole\n\nHaving borrowed my friend’s completely legitimate copy of the industry-standard disassembler (no, I really can’t afford the thing… gonna learn to ghidra one of these days) I went to take GTA apart.\n\n![](./3.png)\n\nThat doesn’t look right at all. Most high-profile games come with built-in protection against reverse engineering to keep away pirates, cheaters, and modders. Not that it has ever stopped them.\n\nThere seems to be some sort of an obfuscation/encryption at play here that has replaced most instructions with gibberish. Not to worry, we simply need to dump the game’s memory while it’s executing the part we want to look at. The instructions have to be de-obfuscated before running one way or another. I had Process Dump lying around, so I used that, but there are plenty of other tools available to do this sort of thing.\n\n## Problem one: It’s… strlen?!\n\nDisassembling the now-less-obfuscated dump reveals that one of the addresses has a label pulled out of somewhere! It’s strlen? Going down the call stack the next one is labeled vscan_fn and after that the labels end, tho I’m fairly confident it’s sscanf.\n![](./4.png)\nIt’s parsing something. Parsing what? Untangling the disassembly would take forever so I decided to dump some samples from the running process using x64dbg. Some debug-stepping later it turns out it’s… JSON! They’re parsing JSON. A whopping 10 megabytes worth of JSON with some 63k item entries.\n\n```json\n{\n    \"key\": \"WP_WCT_TINT_21_t2_v9_n2\",\n    \"price\": 45000,\n    \"statName\": \"CHAR_KIT_FM_PURCHASE20\",\n    \"storageType\": \"BITFIELD\",\n    \"bitShift\": 7,\n    \"bitSize\": 1,\n    \"category\": [\"CATEGORY_WEAPON_MOD\"]\n},\n\n```\n\nWhat is it? It appears to be data for a “net shop catalog” according to some references. I assume it contains a list of all the possible items and upgrades you can buy in GTA Online.\n\nClearing up some confusion: I beleive these are in-game money purchasable items, not directly linked with microtransactions.\n\nBut 10 megs? That’s nothing! And using sscanf may not be optimal but surely it’s not that bad? Well…\n\n![](./5.png)\n\nYeah, that’s gonna take a while… To be fair I had no idea most sscanf implementations called strlen so I can’t blame the developer who wrote this. I would assume it just scanned byte by byte and could stop on a NULL.\n\n## Problem two: Let’s use a Hash- … Array?\n\nTurns out the second offender is called right next to the first one. They’re both even called in the same if statement as seen in this ugly decompilation:\n\n![](./6.png)\n\nAll labels are mine, no idea what the functions/parameters are actually called.\n\nThe second problem? Right after parsing an item, it’s stored in an array (or an inlined C++ list? not sure). Each entry looks something like this:\n\n```c\n\nstruct {\n    uint64_t *hash;\n    item_t   *item;\n} entry;\n```\n\nBut before it’s stored? It checks the entire array, one by one, comparing the hash of the item to see if it’s in the list or not. With ~63k entries that’s (n^2+n)/2 = (63000^2+63000)/2 = 1984531500 checks if my math is right. Most of them useless. You have unique hashes why not use a hash map.\n\n![](./7.png)\n\nI named it hashmap while reversing but it’s clearly not_a_hashmap. And it gets even better. The hash-array-list-thing is empty before loading the JSON. And all of the items in the JSON are unique! They don’t even need to check if it’s in the list or not! They even have a function to directly insert the items! Just use that! Srsly, WAT!?\n\n## PoC\n\nNow that’s nice and all, but no one is going to take me seriously unless I test this so I can write a clickbait title for the post.\n\nThe plan? Write a .dll, inject it in GTA, hook some functions, ???, profit.\n\nThe JSON problem is hairy, I can’t realistically replace their parser. Replacing sscanf with one that doesn’t depend on strlen would be more realistic. But there’s an even easier way.\n\n- hook strlen\n- wait for a long string\n- “cache” the start and length of it\n- if it’s called again within the string’s range, return cached value\n\nSomething like:\n\n```c\nsize_t strlen_cacher(char* str)\n{\n  static char* start;\n  static char* end;\n  size_t len;\n  const size_t cap = 20000;\n\n  // if we have a \"cached\" string and current pointer is within it\n  if (start && str >= start && str <= end) {\n    // calculate the new strlen\n    len = end - str;\n\n    // if we're near the end, unload self\n    // we don't want to mess something else up\n    if (len < cap / 2)\n      MH_DisableHook((LPVOID)strlen_addr);\n\n    // super-fast return!\n    return len;\n  }\n\n  // count the actual length\n  // we need at least one measurement of the large JSON\n  // or normal strlen for other strings\n  len = builtin_strlen(str);\n\n  // if it was the really long string\n  // save it's start and end addresses\n  if (len > cap) {\n    start = str;\n    end = str + len;\n  }\n\n  // slow, boring return\n  return len;\n}\n\n\n```\n\nAnd as for the hash-array problem, it’s more straightforward - just skip the duplicate checks entirely and insert the items directly since we know the values are unique.\n\n```c\n\nchar __fastcall netcat_insert_dedupe_hooked(uint64_t catalog, uint64_t* key, uint64_t* item)\n{\n  // didn't bother reversing the structure\n  uint64_t not_a_hashmap = catalog + 88;\n\n  // no idea what this does, but repeat what the original did\n  if (!(*(uint8_t(__fastcall**)(uint64_t*))(*item + 48))(item))\n    return 0;\n\n  // insert directly\n  netcat_insert_direct(not_a_hashmap, key, &item);\n\n  // remove hooks when the last item's hash is hit\n  // and unload the .dll, we are done here :)\n  if (*key == 0x7FFFD6BE) {\n    MH_DisableHook((LPVOID)netcat_insert_dedupe_addr);\n    unload();\n  }\n\n  return 1;\n}\n\n\n```\n\n## Results\n\nWell, did it work then?\n\n```sh\n\nOriginal online mode load time:        ~6m flat\nTime with only duplication check patch: 4m 30s\nTime with only JSON parser patch:       2m 50s\nTime with both issues patched:          1m 50s\n\n(6*60 - (1*60+50)) / (6*60) = 69.4% load time improvement (nice!)\n\n```\n\nHell yes, it did! :))\n\nMost likely, this won’t solve everyone’s load times - there might be other bottlenecks on different systems, but it’s such a gaping hole that I have no idea how R\\* has missed it all these years.\n\n## tl;dr\n\n- There’s a single thread CPU bottleneck while starting up GTA Online\n- It turns out GTA struggles to parse a 10MB JSON file\n- The JSON parser itself is poorly built / naive and\n- After parsing there’s a slow item de-duplication routine\n\n## R\\* please fix\n\nIf this somehow reaches Rockstar: the problems shouldn’t take more than a day for a single dev to solve. Please do something about it :<\n\nYou could either switch to a hashmap for the de-duplication or completely skip it on startup as a faster fix. For the JSON parser - just swap out the library for a more performant one. I don’t think there’s any easier way out.\n\nty <3\n\n## Small update\n\nI was expecting to get some attention but nowhere near this much! After reaching the top of HN this post has spread like wildfire! Thank you for the overwhelming response :)\n\nI’ll do more writing if something interesting comes along, but don’t expect anything of this scale soon - there was a lot of luck involved.\n\nA few people suggested spamming this post to Rockstar’s support - please don’t! I’m sure they’ve seen this by now. Continuing would only bog down support tickets for everyone else. Social media is fair game in my book tho.\n\nSeveral HN comments suggested I add a donate button, as they would like to buy me a beer (thank you!) so I’m placing a link in the footer.\n\nThank you for reading and all the support :)\n"}]