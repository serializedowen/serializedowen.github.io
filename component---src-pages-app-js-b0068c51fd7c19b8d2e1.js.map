{"version":3,"sources":["webpack:///./node_modules/_uc.micro@1.0.6@uc.micro/categories/P/regex.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/block.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/_linkify-it@3.0.2@linkify-it/lib/re.js","webpack:///./node_modules/_mdurl@1.0.1@mdurl/parse.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/helpers/index.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/index.js","webpack:///./node_modules/_lodash@4.17.20@lodash/kebabCase.js","webpack:///./node_modules/_lodash@4.17.20@lodash/words.js","webpack:///./node_modules/_uc.micro@1.0.6@uc.micro/categories/Z/regex.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/common/entities.js","webpack:///./node_modules/_mdurl@1.0.1@mdurl/decode.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_createCompounder.js","webpack:///./node_modules/_linkify-it@3.0.2@linkify-it/index.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/common/html_re.js","webpack:///./node_modules/_mdurl@1.0.1@mdurl/encode.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/ruler.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/token.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/_mdurl@1.0.1@mdurl/format.js","webpack:///./node_modules/_uc.micro@1.0.6@uc.micro/categories/Cf/regex.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/linkify.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Article.js","webpack:///./src/components/Header.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/Content.js","webpack:///./src/components/ProgressBar.js","webpack:///./src/layouts/withENLayout.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/parser_block.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/common/utils.js","webpack:///./src/lang/en.js","webpack:///./node_modules/_@formatjs_intl-relativetimeformat@8.0.0@@formatjs/intl-relativetimeformat/locale-data/en.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/code.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_deburrLetter.js","webpack:///./node_modules/_uc.micro@1.0.6@uc.micro/categories/Cc/regex.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/index.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_asciiWords.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_unicodeWords.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/renderer.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/parser_core.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/presets/zero.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/parser_inline.js","webpack:///./node_modules/_punycode@1.4.1@punycode/punycode.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/_mdurl@1.0.1@mdurl/index.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/fence.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_basePropertyOf.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/presets/default.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_arrayReduce.js","webpack:///./node_modules/_lodash@4.17.20@lodash/deburr.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/_lodash@4.17.20@lodash/_hasUnicodeWord.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/table.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/_uc.micro@1.0.6@uc.micro/properties/Any/regex.js","webpack:///./node_modules/_markdown-it@12.0.4@markdown-it/lib/rules_block/list.js","webpack:///./node_modules/_uc.micro@1.0.6@uc.micro/index.js","webpack:///./src/app/MarkdownEditor/View.js","webpack:///./node_modules/_@loadable_component@5.14.1@@loadable/component/dist/loadable.esm.js","webpack:///./src/pages/app.js"],"names":["module","exports","state","token","inlineMode","Token","content","src","map","children","tokens","push","md","block","parse","env","NEWLINES_RE","NULL_RE","str","replace","opts","re","src_Any","source","src_Cc","src_Z","src_P","src_ZPCc","join","src_ZCc","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","Url","this","protocol","slashes","auth","port","hostname","hash","search","pathname","protocolPattern","portPattern","simplePathPattern","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","prototype","url","slashesDenoteHost","i","l","lowerProto","hec","rest","trim","split","length","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","indexOf","lastIndexOf","slice","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","charCodeAt","validParts","notHost","bit","unshift","qm","u","parseLinkLabel","parseLinkDestination","parseLinkTitle","EMAIL_RE","AUTOLINK_RE","silent","fullUrl","ch","start","max","pos","posMax","test","normalizeLink","validateLink","attrs","markup","info","normalizeLinkText","unescapeAll","code","level","result","ok","lines","marker","normalizeReference","isSpace","label","labelEnd","labelStart","ref","res","title","href","oldPos","helpers","references","inline","kebabCase","createCompounder","word","index","asciiWords","hasUnicodeWord","toString","unicodeWords","string","pattern","guard","undefined","decodeCache","decode","exclude","cache","defaultChars","String","fromCharCode","toUpperCase","getDecodeCache","seq","b1","b2","b3","b4","chr","parseInt","componentChars","postProcess","delimiters","startDelim","endDelim","isStrong","end","type","tag","nesting","tokenize","scanned","scanDelims","jump","open","can_open","close","can_close","curr","tokens_meta","arrayReduce","deburr","words","reApos","RegExp","callback","assign","obj","sources","Array","call","arguments","forEach","Object","keys","key","_class","isFunction","escapeRE","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","self","tail","http","no_http","mailto","tlds_default","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","schema_test","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","__last_index__","schema","__schema__","lastIndex","raw","createMatch","LinkifyIt","schemas","options","reduce","acc","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","testSchemaAt","list","keepOld","isArray","sort","el","idx","arr","reverse","ESCAPED","pending","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","encodeCache","encode","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","parseReference","startLine","endLine","tmp","bMarks","tShift","eMarks","sCount","blkIndent","skipSpacesBack","skipCharsBack","line","pmax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","chain","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","enable","ignoreInvalid","enableOnly","disable","getRules","chainName","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","maxNesting","components","core","rules","rules2","_endLine","destEndPos","destEndLineNo","oldParentType","terminate","terminatorRules","nextLine","lineMax","ruler","parentType","isEmpty","getLines","skipChars","skipSpaces","meta","hidden","attrIndex","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateBlock","s","indent","offset","indent_found","bsCount","tight","ddIndent","listIndent","skipEmptyLines","from","min","begin","keepLastLF","lineIndent","first","last","queue","lineStart","tok","arrayReplaceAt","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","urlText","links","blockTokens","Subline","styled","div","props","theme","fontSize","small","colors","grey","light","sectionTitle","Post","article","Title","h2","Initiale","span","Excerpt","p","Article","date","excerpt","slug","timeToRead","category","firstChar","charAt","to","RelativeTimeStamp","time","id","values","Wrapper","header","darken","primary","lighten","Content","Header","Prev","Next","PrevNext","prev","fields","frontmatter","defaultProps","SectionTitle","dark","ultraLight","bg","media","tablet","phone","Progress","ProgressBar","prop","style","transform","progress","Component","i18nMessages","messages","_rules","ParserBlock","hasEmptyLines","outTokens","State","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","escaped","entity","replaceEntityPattern","escapeHtml","newElements","isWhiteSpace","isMdAsciiPunct","isPunctChar","selectLanguage","greeting","categories","contact","readTime","blog","docs","mainPage","copyrights","login","logout","account","delete","yes","no","tools","checkInBanner","saving","saved","waiting","Intl","RelativeTimeFormat","__addLocaleData","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","deburrLetter","basePropertyOf","utils","Renderer","ParserCore","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","toASCII","er","format","toUnicode","MarkdownIt","presetName","renderer","configure","presets","ruler2","missed","use","plugin","args","apply","process","render","parseInline","renderInline","reAsciiWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","rsEmoji","reUnicodeWord","loneMarkers","pop","block_names","HTML_SEQUENCES","lineText","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","blkIdx","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","disableNested","found","prevPos","skipToken","Core","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","_rules2","pushPending","root","nodeType","freeGlobal","global","window","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","error","RangeError","array","mapDomain","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","out","basic","oldi","w","baseMinusT","codePoint","inputLength","n","bias","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","StateCore","cnt","params","mem","haveEndMarker","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","lc","isLetter","iteratee","accumulator","initAccum","reLatin","reComboMark","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","reHasUnicodeWord","getLine","escapedSplit","isEscaped","current","substring","columns","columnCount","aligns","tableLines","tbodyLines","DIGITAL_RE","NAMED_RE","isTerminatorChar","skipBulletListMarker","skipOrderedListMarker","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","markTightParagraphs","Any","Cc","Cf","P","Z","mdParser","View","useParams","useQuery","data","isLoading","dangerouslySetInnerHTML","__html","invariant","condition","message","framesToPop","Context","createContext","LOADABLE_SHARED","initialChunks","identity","v","createLoadable","_ref","_ref$defaultResolveCo","defaultResolveComponent","_render","onLoad","loadable","loadableConstructor","ctor","requireAsync","resolve","chunkName","resolveConstructor","_getCacheKey","cacheKey","Loadable","resolveComponent","preload","InnerLoadable","_React$Component","_this","loading","__chunkExtractor","requireSync","ssr","loadSync","addChunk","isReady","getDerivedStateFromProps","_proto","componentDidMount","mounted","cachedPromise","getCache","status","setCache","loadAsync","componentDidUpdate","prevProps","prevState","componentWillUnmount","safeSetState","nextState","setState","getCacheKey","triggerOnLoad","_this2","setTimeout","console","fileName","_this3","promise","resolveAsync","then","loadedModule","_this4","_this$props","forwardedRef","_this$props2","propFallback","fallback","_this$state","suspense","EnhancedInnerLoadable","createElement","Consumer","extractor","forwardRef","load","lazy","_createLoadable","__esModule","_createLoadable$1","loadable$1","lazy$1","loadable$2","MarkDownEditorLiteImpl","withENLayout","basepath","Profile","path","Account","Bookmarks","Login","Register","MarkdownEditor"],"mappings":"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","file":"component---src-pages-app-js-b0068c51fd7c19b8d2e1.js","sourcesContent":["module.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;","'use strict';\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};","// Normalize input string\n'use strict'; // https://spec.commonmark.org/0.29/#line-ending\n\nvar NEWLINES_RE = /\\r\\n?|\\n/g;\nvar NULL_RE = /\\0/g;\n\nmodule.exports = function normalize(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};","'use strict';\n\nmodule.exports = function (opts) {\n  var re = {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z = require('uc.micro/categories/Z/regex').source;\n  re.src_P = require('uc.micro/categories/P/regex').source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n  // github has ... in commit range links,\n  // Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // - params separator\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]).|' + (opts && opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + '\\\\,(?!' + re.src_ZCc + ').|' + // allow `,,,` in paths\n  '\\\\!+(?!' + re.src_ZCc + '|[!]).|' + // allow `!!!` in paths, but not at the end\n  '\\\\?(?!' + re.src_ZCc + '|[?]).' + ')+' + '|\\\\/' + ')?'; // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' + '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;","// Just a shortcut for bulk export\n'use strict';\n\nexports.parseLinkLabel = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle = require('./parse_link_title');","// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\nmodule.exports = function autolink(state, silent) {\n  var url,\n      fullUrl,\n      token,\n      ch,\n      start,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n    ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C\n    /* < */\n    ) return false;\n    if (ch === 0x3E\n    /* > */\n    ) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};","// Parse link destination\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code,\n      level,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3C\n        /* < */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n\n        if (level > 32) {\n          return result;\n        }\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28\n    /* ( */\n    && marker === 0x29\n    /* ) */\n    ) {\n        return result;\n      } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","'use strict';\n\nmodule.exports = require('./lib/');","var createCompounder = require('./_createCompounder');\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\n\n\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\nmodule.exports = kebabCase;","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\n\n\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;","module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = require('entities/lib/maps/entities.json');","'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","// Process *this* and _that_\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump: i,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && delimiters[i - 1].token === startDelim.token - 1 && delimiters[startDelim.end + 1].token === endDelim.token + 1 && delimiters[i - 1].marker === startDelim.marker;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n/** Used to compose unicode capture groups. */\n\n\nvar rsApos = \"['\\u2019]\";\n/** Used to match apostrophes. */\n\nvar reApos = RegExp(rsApos, 'g');\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\n\nfunction createCompounder(callback) {\n  return function (string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;","'use strict'; ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;","// Process escaped chars and hardbreaks\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) {\n      return false;\n    }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) {\n        state.pending += state.src[pos];\n      }\n\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++; // skip leading whitespaces from next line\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += '\\\\';\n  }\n\n  state.pos++;\n  return true;\n};","// Regexps to match html elements\n'use strict';\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        } // [link](  <href>  \"title\"  )\n        //                ^^ skipping these spaces\n\n\n        start = pos;\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        } // [link](  <href>  \"title\"  )\n        //                  ^^^^^^^ parsing link title\n\n\n        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n        if (pos < max && start !== pos && res.ok) {\n          title = res.str;\n          pos = res.pos; // [link](  <href>  \"title\"  )\n          //                         ^^ skipping these spaces\n\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n\n            if (!isSpace(code) && code !== 0x0A) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.md.inline.tokenize(state);\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// heading (#, ##, ...)\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};","// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'text_collapse']\n    }\n  }\n};","'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};","// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};","// Token class\n'use strict';\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;","// Parser state class\n'use strict';\n\nvar Token = require('../token');\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};","'use strict';\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};","module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport { FormattedMessage } from 'react-intl'\n\nimport Subline from './Subline'\nimport RelativeTimeStamp from './RelativeTimeStamp'\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0)\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        <RelativeTimeStamp time={date}></RelativeTimeStamp>{' '}\n        <FormattedMessage\n          id=\"readTime\"\n          values={{ time: timeToRead }}\n        ></FormattedMessage>{' '}\n        &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  )\n}\n\nexport default Article\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { darken, lighten } from 'polished'\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`\n\nconst Header = ({ children }) => (\n  <Wrapper>\n    <Content>{children}</Content>\n  </Wrapper>\n)\n\nexport default Header\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node])\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport Button from '@material-ui/core/Button'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>\n          <Button>{prev.frontmatter.title}</Button>\n        </Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>\n          <Button>{next.frontmatter.title}</Button>\n        </Link>\n      </Next>\n    )}\n  </Wrapper>\n)\n\nexport default PrevNext\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object\n}\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null\n}\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0;\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components'\nimport { media } from '../utils/media'\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 20;\n  margin-top: -3rem;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`\n\nexport default Content\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Progress = styled.div`\n  position: fixed;\n  /* background-color: ${props => props.theme.colors.secondary}; */\n  background-color: #4EA6EC;\n  height: 2px;\n  z-index: 200;\n  width: 100%;\n  transition: 0.2s;\n  left: -100%;\n`\n\nexport default function ProgressBar(prop) {\n  return (\n    <Progress style={{ transform: `translateX(${prop.progress}%)` }}></Progress>\n  )\n}\n","import React from 'react'\n\nimport messages from '../lang/en'\n\nimport Layout from './index'\nimport '@formatjs/intl-relativetimeformat/polyfill'\nimport '@formatjs/intl-relativetimeformat/locale-data/en' // locale-data for en\n\nexport default Component => props => {\n  return (\n    <Layout {...props} i18nMessages={messages}>\n      <Component {...props}></Component>\n    </Layout>\n  )\n}\n\n// export default props => <Layout {...props} i18nMessages={messages} />\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', require('./rules_block/table'), ['paragraph', 'reference']], ['code', require('./rules_block/code')], ['fence', require('./rules_block/fence'), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'reference', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'reference', 'blockquote']], ['reference', require('./rules_block/reference')], ['heading', require('./rules_block/heading'), ['paragraph', 'reference', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['html_block', require('./rules_block/html_block'), ['paragraph', 'reference', 'blockquote']], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        break;\n      }\n    } // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = require('./rules_block/state_block');\nmodule.exports = ParserBlock;","// Utilities\n//\n'use strict';\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex'); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = require('mdurl');\nexports.lib.ucmicro = require('uc.micro');\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;","module.exports = {\n  selectLanguage: 'Select your language',\n  greeting: 'Howdy',\n  categories: 'Categories',\n  contact: 'Contact',\n  readTime: '{time} Min Read',\n  blog: 'Blog',\n  docs: 'Docs',\n  mainPage: 'Home',\n  copyrights: '@SerializedOwen 2020. All rights reserved.',\n  login: 'Login',\n  logout: 'Logout',\n  account: 'Account',\n  delete: 'Delete',\n  yes: 'Yes',\n  no: 'No',\n  tools: 'Tools',\n  checkInBanner: 'You have checked in for {days} days in a row!',\n  'nginx-regex-tester': 'Nginx Regex Tester',\n  saving: 'Saving',\n  saved: 'Saved',\n  waiting: 'Waiting for finish typing',\n  'markdown-editor': 'Markdown'\n}\n","/* @generated */\n// prettier-ignore\nif (Intl.RelativeTimeFormat && typeof Intl.RelativeTimeFormat.__addLocaleData === 'function') {\n  Intl.RelativeTimeFormat.__addLocaleData({\n    \"data\": {\n      \"nu\": [\"latn\"],\n      \"year\": {\n        \"0\": \"this year\",\n        \"1\": \"next year\",\n        \"future\": {\n          \"one\": \"in {0} year\",\n          \"other\": \"in {0} years\"\n        },\n        \"past\": {\n          \"one\": \"{0} year ago\",\n          \"other\": \"{0} years ago\"\n        },\n        \"-1\": \"last year\"\n      },\n      \"year-short\": {\n        \"0\": \"this yr.\",\n        \"1\": \"next yr.\",\n        \"future\": {\n          \"one\": \"in {0} yr.\",\n          \"other\": \"in {0} yr.\"\n        },\n        \"past\": {\n          \"one\": \"{0} yr. ago\",\n          \"other\": \"{0} yr. ago\"\n        },\n        \"-1\": \"last yr.\"\n      },\n      \"year-narrow\": {\n        \"0\": \"this yr.\",\n        \"1\": \"next yr.\",\n        \"future\": {\n          \"one\": \"in {0} yr.\",\n          \"other\": \"in {0} yr.\"\n        },\n        \"past\": {\n          \"one\": \"{0} yr. ago\",\n          \"other\": \"{0} yr. ago\"\n        },\n        \"-1\": \"last yr.\"\n      },\n      \"quarter\": {\n        \"0\": \"this quarter\",\n        \"1\": \"next quarter\",\n        \"future\": {\n          \"one\": \"in {0} quarter\",\n          \"other\": \"in {0} quarters\"\n        },\n        \"past\": {\n          \"one\": \"{0} quarter ago\",\n          \"other\": \"{0} quarters ago\"\n        },\n        \"-1\": \"last quarter\"\n      },\n      \"quarter-short\": {\n        \"0\": \"this qtr.\",\n        \"1\": \"next qtr.\",\n        \"future\": {\n          \"one\": \"in {0} qtr.\",\n          \"other\": \"in {0} qtrs.\"\n        },\n        \"past\": {\n          \"one\": \"{0} qtr. ago\",\n          \"other\": \"{0} qtrs. ago\"\n        },\n        \"-1\": \"last qtr.\"\n      },\n      \"quarter-narrow\": {\n        \"0\": \"this qtr.\",\n        \"1\": \"next qtr.\",\n        \"future\": {\n          \"one\": \"in {0} qtr.\",\n          \"other\": \"in {0} qtrs.\"\n        },\n        \"past\": {\n          \"one\": \"{0} qtr. ago\",\n          \"other\": \"{0} qtrs. ago\"\n        },\n        \"-1\": \"last qtr.\"\n      },\n      \"month\": {\n        \"0\": \"this month\",\n        \"1\": \"next month\",\n        \"future\": {\n          \"one\": \"in {0} month\",\n          \"other\": \"in {0} months\"\n        },\n        \"past\": {\n          \"one\": \"{0} month ago\",\n          \"other\": \"{0} months ago\"\n        },\n        \"-1\": \"last month\"\n      },\n      \"month-short\": {\n        \"0\": \"this mo.\",\n        \"1\": \"next mo.\",\n        \"future\": {\n          \"one\": \"in {0} mo.\",\n          \"other\": \"in {0} mo.\"\n        },\n        \"past\": {\n          \"one\": \"{0} mo. ago\",\n          \"other\": \"{0} mo. ago\"\n        },\n        \"-1\": \"last mo.\"\n      },\n      \"month-narrow\": {\n        \"0\": \"this mo.\",\n        \"1\": \"next mo.\",\n        \"future\": {\n          \"one\": \"in {0} mo.\",\n          \"other\": \"in {0} mo.\"\n        },\n        \"past\": {\n          \"one\": \"{0} mo. ago\",\n          \"other\": \"{0} mo. ago\"\n        },\n        \"-1\": \"last mo.\"\n      },\n      \"week\": {\n        \"0\": \"this week\",\n        \"1\": \"next week\",\n        \"future\": {\n          \"one\": \"in {0} week\",\n          \"other\": \"in {0} weeks\"\n        },\n        \"past\": {\n          \"one\": \"{0} week ago\",\n          \"other\": \"{0} weeks ago\"\n        },\n        \"-1\": \"last week\"\n      },\n      \"week-short\": {\n        \"0\": \"this wk.\",\n        \"1\": \"next wk.\",\n        \"future\": {\n          \"one\": \"in {0} wk.\",\n          \"other\": \"in {0} wk.\"\n        },\n        \"past\": {\n          \"one\": \"{0} wk. ago\",\n          \"other\": \"{0} wk. ago\"\n        },\n        \"-1\": \"last wk.\"\n      },\n      \"week-narrow\": {\n        \"0\": \"this wk.\",\n        \"1\": \"next wk.\",\n        \"future\": {\n          \"one\": \"in {0} wk.\",\n          \"other\": \"in {0} wk.\"\n        },\n        \"past\": {\n          \"one\": \"{0} wk. ago\",\n          \"other\": \"{0} wk. ago\"\n        },\n        \"-1\": \"last wk.\"\n      },\n      \"day\": {\n        \"0\": \"today\",\n        \"1\": \"tomorrow\",\n        \"future\": {\n          \"one\": \"in {0} day\",\n          \"other\": \"in {0} days\"\n        },\n        \"past\": {\n          \"one\": \"{0} day ago\",\n          \"other\": \"{0} days ago\"\n        },\n        \"-1\": \"yesterday\"\n      },\n      \"day-short\": {\n        \"0\": \"today\",\n        \"1\": \"tomorrow\",\n        \"future\": {\n          \"one\": \"in {0} day\",\n          \"other\": \"in {0} days\"\n        },\n        \"past\": {\n          \"one\": \"{0} day ago\",\n          \"other\": \"{0} days ago\"\n        },\n        \"-1\": \"yesterday\"\n      },\n      \"day-narrow\": {\n        \"0\": \"today\",\n        \"1\": \"tomorrow\",\n        \"future\": {\n          \"one\": \"in {0} day\",\n          \"other\": \"in {0} days\"\n        },\n        \"past\": {\n          \"one\": \"{0} day ago\",\n          \"other\": \"{0} days ago\"\n        },\n        \"-1\": \"yesterday\"\n      },\n      \"hour\": {\n        \"0\": \"this hour\",\n        \"future\": {\n          \"one\": \"in {0} hour\",\n          \"other\": \"in {0} hours\"\n        },\n        \"past\": {\n          \"one\": \"{0} hour ago\",\n          \"other\": \"{0} hours ago\"\n        }\n      },\n      \"hour-short\": {\n        \"0\": \"this hour\",\n        \"future\": {\n          \"one\": \"in {0} hr.\",\n          \"other\": \"in {0} hr.\"\n        },\n        \"past\": {\n          \"one\": \"{0} hr. ago\",\n          \"other\": \"{0} hr. ago\"\n        }\n      },\n      \"hour-narrow\": {\n        \"0\": \"this hour\",\n        \"future\": {\n          \"one\": \"in {0} hr.\",\n          \"other\": \"in {0} hr.\"\n        },\n        \"past\": {\n          \"one\": \"{0} hr. ago\",\n          \"other\": \"{0} hr. ago\"\n        }\n      },\n      \"minute\": {\n        \"0\": \"this minute\",\n        \"future\": {\n          \"one\": \"in {0} minute\",\n          \"other\": \"in {0} minutes\"\n        },\n        \"past\": {\n          \"one\": \"{0} minute ago\",\n          \"other\": \"{0} minutes ago\"\n        }\n      },\n      \"minute-short\": {\n        \"0\": \"this minute\",\n        \"future\": {\n          \"one\": \"in {0} min.\",\n          \"other\": \"in {0} min.\"\n        },\n        \"past\": {\n          \"one\": \"{0} min. ago\",\n          \"other\": \"{0} min. ago\"\n        }\n      },\n      \"minute-narrow\": {\n        \"0\": \"this minute\",\n        \"future\": {\n          \"one\": \"in {0} min.\",\n          \"other\": \"in {0} min.\"\n        },\n        \"past\": {\n          \"one\": \"{0} min. ago\",\n          \"other\": \"{0} min. ago\"\n        }\n      },\n      \"second\": {\n        \"0\": \"now\",\n        \"future\": {\n          \"one\": \"in {0} second\",\n          \"other\": \"in {0} seconds\"\n        },\n        \"past\": {\n          \"one\": \"{0} second ago\",\n          \"other\": \"{0} seconds ago\"\n        }\n      },\n      \"second-short\": {\n        \"0\": \"now\",\n        \"future\": {\n          \"one\": \"in {0} sec.\",\n          \"other\": \"in {0} sec.\"\n        },\n        \"past\": {\n          \"one\": \"{0} sec. ago\",\n          \"other\": \"{0} sec. ago\"\n        }\n      },\n      \"second-narrow\": {\n        \"0\": \"now\",\n        \"future\": {\n          \"one\": \"in {0} sec.\",\n          \"other\": \"in {0} sec.\"\n        },\n        \"past\": {\n          \"one\": \"{0} sec. ago\",\n          \"other\": \"{0} sec. ago\"\n        }\n      }\n    },\n    \"locale\": \"en\"\n  });\n}","// Parse backticks\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      token,\n      matchStart,\n      matchEnd,\n      openerLength,\n      closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax; // scan marker length\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos; // Nothing found in the cache, scan until the end of the line (or until marker is found)\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1; // scan marker length\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n\n      state.pos = matchEnd;\n      return true;\n    } // Some different length found, put it in cache as upper limit of where closer can be found\n\n\n    state.backticks[closerLength] = matchStart;\n  } // Scanned through the end, didn't find anything\n\n\n  state.backticksScanned = true;\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map = [startLine, state.line];\n  return true;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","var basePropertyOf = require('./_basePropertyOf');\n/** Used to map Latin Unicode letters to basic Latin letters. */\n\n\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 's'\n};\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\n\nvar deburrLetter = basePropertyOf(deburredLetters);\nmodule.exports = deburrLetter;","module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;","// Main parser class\n'use strict';\n\nvar utils = require('./common/utils');\n\nvar helpers = require('./helpers');\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar LinkifyIt = require('linkify-it');\n\nvar mdurl = require('mdurl');\n\nvar punycode = require('punycode');\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  } // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n\n\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;","// Paragraph\n'use strict';\n\nmodule.exports = function paragraph(state, startLine\n/*, endLine*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;","/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = \"\\\\u2700-\\\\u27bf\",\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = \"\\\\u2000-\\\\u206f\",\n    rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\",\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n/** Used to compose unicode capture groups. */\n\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n/** Used to match complex or compound words. */\n\nvar reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;","// ~~strike through~~\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      jump: i / 2,\n      // for `~~` 1 marker = 2 characters\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// HTML block\n'use strict';\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\nvar assign = require('./common/utils').assign;\n\nvar unescapeAll = require('./common/utils').unescapeAll;\n\nvar escapeHtml = require('./common/utils').escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted,\n      i,\n      arr,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx,\n      openerIdx,\n      closer,\n      opener,\n      minOpenerIdx,\n      newMinOpenerIdx,\n      isOddMatch,\n      lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx]; // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n\n    closer.length = closer.length || 0;\n    if (!closer.close) continue; // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    openerIdx = closerIdx - closer.jump - 1; // avoid crash if `closer.jump` is pointing outside of the array, see #742\n\n    if (openerIdx < -1) openerIdx = -1;\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n        isOddMatch = false; // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? delimiters[openerIdx - 1].jump + 1 : 0;\n          closer.jump = closerIdx - openerIdx + lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.jump = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'text_collapse']\n    }\n  }\n};","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\nvar Ruler = require('./ruler'); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['strikethrough', require('./rules_inline/strikethrough').tokenize], ['emphasis', require('./rules_inline/emphasis').tokenize], ['link', require('./rules_inline/link')], ['image', require('./rules_inline/image')], ['autolink', require('./rules_inline/autolink')], ['html_inline', require('./rules_inline/html_inline')], ['entity', require('./rules_inline/entity')]];\nvar _rules2 = [['balance_pairs', require('./rules_inline/balance_pairs')], ['strikethrough', require('./rules_inline/strikethrough').postProcess], ['emphasis', require('./rules_inline/emphasis').postProcess], ['text_collapse', require('./rules_inline/text_collapse')]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\nmodule.exports = ParserInline;","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","// Block quotes\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos++) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  } // set offset past spaces and \">\"\n\n\n  initial = offset = state.sCount[startLine] + 1; // skip one optional space after '>'\n\n  if (state.src.charCodeAt(pos) === 0x20\n  /* space */\n  ) {\n      // ' >   test '\n      //     ^ -- position start of line here:\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n      spaceAfterMarker = true;\n    } else if (state.src.charCodeAt(pos) === 0x09\n  /* tab */\n  ) {\n      spaceAfterMarker = true;\n\n      if ((state.bsCount[startLine] + offset) % 4 === 3) {\n        // '  >\\t  test '\n        //       ^ -- position start of line here (tab has width===1)\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n      } else {\n        // ' >\\t  test '\n        //    ^ -- position start of line here + shift bsCount slightly\n        //         to make extra space appear\n        adjustTab = true;\n      }\n    } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [state.bMarks[startLine]];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [state.bsCount[startLine]];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n  lastLineEmpty = pos >= max;\n  oldSCount = [state.sCount[startLine]];\n  state.sCount[startLine] = offset - initial;\n  oldTShift = [state.tShift[startLine]];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote'; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !isOutdented) {\n      // This line is inside the blockquote.\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1; // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            offset++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\nmodule.exports = function text_collapse(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;","// Horizontal rule\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};","'use strict';\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse = require('./parse');","// fences (``` lang, ~~~ lang)\n'use strict';\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60\n  /* ` */\n  ) {\n      if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n        return false;\n      }\n    } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;","// Process html tags\n'use strict';\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","// markdown-it default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\n\n\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n/** Used to compose unicode character classes. */\n\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n/** Used to compose unicode capture groups. */\n\nvar rsCombo = '[' + rsComboRange + ']';\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\n\nvar reComboMark = RegExp(rsCombo, 'g');\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;","// Inline parser state\n'use strict';\n\nvar Token = require('../token');\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.cache = {}; // List of emphasis-like delimiters for current tag\n\n  this.delimiters = []; // Stack of delimiter lists for upper level tags\n\n  this._prev_delimiters = []; // backtick length => last seen position\n\n  this.backticks = {};\n  this.backticksScanned = false;\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n\n    this._prev_delimiters.push(this.delimiters);\n\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\") // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\n\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;","// GFM table, https://github.github.com/gfm/#tables-extension-\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c\n    /* | */\n    ) {\n        if (!isEscaped) {\n          // pipe separating cells, '|'\n          result.push(current + str.substring(lastPos, pos));\n          current = '';\n          lastPos = pos + 1;\n        } else {\n          // escaped pipe, '\\|'\n          current += str.substring(lastPos, pos - 1);\n          lastPos = pos;\n        }\n      }\n\n    isEscaped = ch === 0x5c\n    /* \\ */\n    ;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch !== 0x7C\n  /* | */\n  && ch !== 0x2D\n  /* - */\n  && ch !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop(); // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n\n  columnCount = columns.length;\n\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table'; // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (!lineText) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [startLine + 2, 0];\n    }\n\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [nextLine, nextLine + 1];\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) {\n      return false;\n    }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23\n    /* # */\n    ) {\n        match = state.src.slice(pos).match(DIGITAL_RE);\n\n        if (match) {\n          if (!silent) {\n            code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n            state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) {\n            state.pending += entities[match[1]];\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) {\n    state.pending += '&';\n  }\n\n  state.pos++;\n  return true;\n};","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/","module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;","// Lists\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n\n\n  if (state.listIndent >= 0 && state.sCount[startLine] - state.listIndent >= 4 && state.sCount[startLine] < state.blkIndent) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately\n\n  if (silent) {\n    return true;\n  } // Start list\n\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [startLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [startLine, 0]; // change current state, then restore it after parser subcall\n\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine]; //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // if it's indented more than 3 spaces, it should be a code block\n\n\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc = require('./categories/Cc/regex');\nexports.Cf = require('./categories/Cf/regex');\nexports.P = require('./categories/P/regex');\nexports.Z = require('./categories/Z/regex');","import React from 'react'\nimport MarkdownIt from 'markdown-it'\nimport { useParams } from '@reach/router'\nimport http from 'src/utils/http'\nimport { useQuery } from 'react-query'\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */)\n\nexport default function View() {\n  const { id } = useParams()\n  const { data, isLoading, error } = useQuery(`MD_${id}`, () =>\n    http.get(`/markdown/${id}`)\n  )\n\n  return (\n    !isLoading &&\n    !error && (\n      <article\n        dangerouslySetInnerHTML={{ __html: mdParser.render(data.data.content) }}\n      ></article>\n    )\n  )\n}\n","import React from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { isValidElementType } from 'react-is';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n/* eslint-disable import/prefer-default-export */\n\nfunction invariant(condition, message) {\n  if (condition) return;\n  var error = new Error(\"loadable: \" + message);\n  error.framesToPop = 1;\n  error.name = 'Invariant Violation';\n  throw error;\n}\n\nfunction warn(message) {\n  // eslint-disable-next-line no-console\n  console.warn(\"loadable: \" + message);\n}\n\nvar Context = /*#__PURE__*/React.createContext();\nvar LOADABLE_REQUIRED_CHUNKS_KEY = '__LOADABLE_REQUIRED_CHUNKS__';\n\nfunction getRequiredChunkKey(namespace) {\n  return \"\" + namespace + LOADABLE_REQUIRED_CHUNKS_KEY;\n}\n\nvar sharedInternals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getRequiredChunkKey: getRequiredChunkKey,\n  invariant: invariant,\n  Context: Context\n});\nvar LOADABLE_SHARED = {\n  initialChunks: {}\n};\nvar STATUS_PENDING = 'PENDING';\nvar STATUS_RESOLVED = 'RESOLVED';\nvar STATUS_REJECTED = 'REJECTED';\n\nfunction resolveConstructor(ctor) {\n  if (typeof ctor === 'function') {\n    return {\n      requireAsync: ctor,\n      resolve: function resolve() {\n        return undefined;\n      },\n      chunkName: function chunkName() {\n        return undefined;\n      }\n    };\n  }\n\n  return ctor;\n}\n\nvar withChunkExtractor = function withChunkExtractor(Component) {\n  return function (props) {\n    return React.createElement(Context.Consumer, null, function (extractor) {\n      return React.createElement(Component, Object.assign({\n        __chunkExtractor: extractor\n      }, props));\n    });\n  };\n};\n\nvar identity = function identity(v) {\n  return v;\n};\n\nfunction createLoadable(_ref) {\n  var _ref$defaultResolveCo = _ref.defaultResolveComponent,\n      defaultResolveComponent = _ref$defaultResolveCo === void 0 ? identity : _ref$defaultResolveCo,\n      _render = _ref.render,\n      onLoad = _ref.onLoad;\n\n  function loadable(loadableConstructor, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var ctor = resolveConstructor(loadableConstructor);\n    var cache = {};\n    /**\n     * Cachekey represents the component to be loaded\n     * if key changes - component has to be reloaded\n     * @param props\n     * @returns {null|Component}\n     */\n\n    function _getCacheKey(props) {\n      if (options.cacheKey) {\n        return options.cacheKey(props);\n      }\n\n      if (ctor.resolve) {\n        return ctor.resolve(props);\n      }\n\n      return 'static';\n    }\n    /**\n     * Resolves loaded `module` to a specific `Component\n     * @param module\n     * @param props\n     * @param Loadable\n     * @returns Component\n     */\n\n\n    function resolve(module, props, Loadable) {\n      var Component = options.resolveComponent ? options.resolveComponent(module, props) : defaultResolveComponent(module);\n\n      if (options.resolveComponent && !isValidElementType(Component)) {\n        throw new Error(\"resolveComponent returned something that is not a React component!\");\n      }\n\n      hoistNonReactStatics(Loadable, Component, {\n        preload: true\n      });\n      return Component;\n    }\n\n    var InnerLoadable = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(InnerLoadable, _React$Component);\n\n      InnerLoadable.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n        var cacheKey = _getCacheKey(props);\n\n        return _extends({}, state, {\n          cacheKey: cacheKey,\n          // change of a key triggers loading state automatically\n          loading: state.loading || state.cacheKey !== cacheKey\n        });\n      };\n\n      function InnerLoadable(props) {\n        var _this;\n\n        _this = _React$Component.call(this, props) || this;\n        _this.state = {\n          result: null,\n          error: null,\n          loading: true,\n          cacheKey: _getCacheKey(props)\n        };\n        invariant(!props.__chunkExtractor || ctor.requireSync, 'SSR requires `@loadable/babel-plugin`, please install it'); // Server-side\n\n        if (props.__chunkExtractor) {\n          // This module has been marked with no SSR\n          if (options.ssr === false) {\n            return _assertThisInitialized(_this);\n          } // We run load function, we assume that it won't fail and that it\n          // triggers a synchronous loading of the module\n\n\n          ctor.requireAsync(props)[\"catch\"](function () {\n            return null;\n          }); // So we can require now the module synchronously\n\n          _this.loadSync();\n\n          props.__chunkExtractor.addChunk(ctor.chunkName(props));\n\n          return _assertThisInitialized(_this);\n        } // Client-side with `isReady` method present (SSR probably)\n        // If module is already loaded, we use a synchronous loading\n        // Only perform this synchronous loading if the component has not\n        // been marked with no SSR, else we risk hydration mismatches\n\n\n        if (options.ssr !== false && ( // is ready - was loaded in this session\n        ctor.isReady && ctor.isReady(props) || // is ready - was loaded during SSR process\n        ctor.chunkName && LOADABLE_SHARED.initialChunks[ctor.chunkName(props)])) {\n          _this.loadSync();\n        }\n\n        return _this;\n      }\n\n      var _proto = InnerLoadable.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        this.mounted = true; // retrieve loading promise from a global cache\n\n        var cachedPromise = this.getCache(); // if promise exists, but rejected - clear cache\n\n        if (cachedPromise && cachedPromise.status === STATUS_REJECTED) {\n          this.setCache();\n        } // component might be resolved synchronously in the constructor\n\n\n        if (this.state.loading) {\n          this.loadAsync();\n        }\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n        // Component has to be reloaded on cacheKey change\n        if (prevState.cacheKey !== this.state.cacheKey) {\n          this.loadAsync();\n        }\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        this.mounted = false;\n      };\n\n      _proto.safeSetState = function safeSetState(nextState, callback) {\n        if (this.mounted) {\n          this.setState(nextState, callback);\n        }\n      }\n      /**\n       * returns a cache key for the current props\n       * @returns {Component|string}\n       */\n      ;\n\n      _proto.getCacheKey = function getCacheKey() {\n        return _getCacheKey(this.props);\n      }\n      /**\n       * access the persistent cache\n       */\n      ;\n\n      _proto.getCache = function getCache() {\n        return cache[this.getCacheKey()];\n      }\n      /**\n       * sets the cache value. If called without value sets it as undefined\n       */\n      ;\n\n      _proto.setCache = function setCache(value) {\n        if (value === void 0) {\n          value = undefined;\n        }\n\n        cache[this.getCacheKey()] = value;\n      };\n\n      _proto.triggerOnLoad = function triggerOnLoad() {\n        var _this2 = this;\n\n        if (onLoad) {\n          setTimeout(function () {\n            onLoad(_this2.state.result, _this2.props);\n          });\n        }\n      }\n      /**\n       * Synchronously loads component\n       * target module is expected to already exists in the module cache\n       * or be capable to resolve synchronously (webpack target=node)\n       */\n      ;\n\n      _proto.loadSync = function loadSync() {\n        // load sync is expecting component to be in the \"loading\" state already\n        // sounds weird, but loading=true is the initial state of InnerLoadable\n        if (!this.state.loading) return;\n\n        try {\n          var loadedModule = ctor.requireSync(this.props);\n          var result = resolve(loadedModule, this.props, Loadable);\n          this.state.result = result;\n          this.state.loading = false;\n        } catch (error) {\n          console.error('loadable-components: failed to synchronously load component, which expected to be available', {\n            fileName: ctor.resolve(this.props),\n            chunkName: ctor.chunkName(this.props),\n            error: error ? error.message : error\n          });\n          this.state.error = error;\n        }\n      }\n      /**\n       * Asynchronously loads a component.\n       */\n      ;\n\n      _proto.loadAsync = function loadAsync() {\n        var _this3 = this;\n\n        var promise = this.resolveAsync();\n        promise.then(function (loadedModule) {\n          var result = resolve(loadedModule, _this3.props, {\n            Loadable: Loadable\n          });\n\n          _this3.safeSetState({\n            result: result,\n            loading: false\n          }, function () {\n            return _this3.triggerOnLoad();\n          });\n        })[\"catch\"](function (error) {\n          return _this3.safeSetState({\n            error: error,\n            loading: false\n          });\n        });\n        return promise;\n      }\n      /**\n       * Asynchronously resolves(not loads) a component.\n       * Note - this function does not change the state\n       */\n      ;\n\n      _proto.resolveAsync = function resolveAsync() {\n        var _this4 = this;\n\n        var _this$props = this.props,\n            __chunkExtractor = _this$props.__chunkExtractor,\n            forwardedRef = _this$props.forwardedRef,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"__chunkExtractor\", \"forwardedRef\"]);\n\n        var promise = this.getCache();\n\n        if (!promise) {\n          promise = ctor.requireAsync(props);\n          promise.status = STATUS_PENDING;\n          this.setCache(promise);\n          promise.then(function () {\n            promise.status = STATUS_RESOLVED;\n          }, function (error) {\n            console.error('loadable-components: failed to asynchronously load component', {\n              fileName: ctor.resolve(_this4.props),\n              chunkName: ctor.chunkName(_this4.props),\n              error: error ? error.message : error\n            });\n            promise.status = STATUS_REJECTED;\n          });\n        }\n\n        return promise;\n      };\n\n      _proto.render = function render() {\n        var _this$props2 = this.props,\n            forwardedRef = _this$props2.forwardedRef,\n            propFallback = _this$props2.fallback,\n            __chunkExtractor = _this$props2.__chunkExtractor,\n            props = _objectWithoutPropertiesLoose(_this$props2, [\"forwardedRef\", \"fallback\", \"__chunkExtractor\"]);\n\n        var _this$state = this.state,\n            error = _this$state.error,\n            loading = _this$state.loading,\n            result = _this$state.result;\n\n        if (options.suspense) {\n          var cachedPromise = this.getCache() || this.loadAsync();\n\n          if (cachedPromise.status === STATUS_PENDING) {\n            throw this.loadAsync();\n          }\n        }\n\n        if (error) {\n          throw error;\n        }\n\n        var fallback = propFallback || options.fallback || null;\n\n        if (loading) {\n          return fallback;\n        }\n\n        return _render({\n          fallback: fallback,\n          result: result,\n          options: options,\n          props: _extends({}, props, {\n            ref: forwardedRef\n          })\n        });\n      };\n\n      return InnerLoadable;\n    }(React.Component);\n\n    var EnhancedInnerLoadable = withChunkExtractor(InnerLoadable);\n    var Loadable = React.forwardRef(function (props, ref) {\n      return React.createElement(EnhancedInnerLoadable, Object.assign({\n        forwardedRef: ref\n      }, props));\n    }); // In future, preload could use `<link rel=\"preload\">`\n\n    Loadable.preload = function (props) {\n      ctor.requireAsync(props);\n    };\n\n    Loadable.load = function (props) {\n      return ctor.requireAsync(props);\n    };\n\n    return Loadable;\n  }\n\n  function lazy(ctor, options) {\n    return loadable(ctor, _extends({}, options, {\n      suspense: true\n    }));\n  }\n\n  return {\n    loadable: loadable,\n    lazy: lazy\n  };\n}\n\nfunction defaultResolveComponent(loadedModule) {\n  // eslint-disable-next-line no-underscore-dangle\n  return loadedModule.__esModule ? loadedModule[\"default\"] : loadedModule[\"default\"] || loadedModule;\n}\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\n\nvar _createLoadable = /*#__PURE__*/createLoadable({\n  defaultResolveComponent: defaultResolveComponent,\n  render: function render(_ref) {\n    var Component = _ref.result,\n        props = _ref.props;\n    return React.createElement(Component, props);\n  }\n}),\n    loadable = _createLoadable.loadable,\n    lazy = _createLoadable.lazy;\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\n\nvar _createLoadable$1 = /*#__PURE__*/createLoadable({\n  onLoad: function onLoad(result, props) {\n    if (result && props.forwardedRef) {\n      if (typeof props.forwardedRef === 'function') {\n        props.forwardedRef(result);\n      } else {\n        props.forwardedRef.current = result;\n      }\n    }\n  },\n  render: function render(_ref) {\n    var result = _ref.result,\n        props = _ref.props;\n\n    if (props.children) {\n      return props.children(result);\n    }\n\n    return null;\n  }\n}),\n    loadable$1 = _createLoadable$1.loadable,\n    lazy$1 = _createLoadable$1.lazy;\n/* eslint-disable no-underscore-dangle, camelcase */\n\n\nvar BROWSER = typeof window !== 'undefined';\n\nfunction loadableReady(done, _temp) {\n  if (done === void 0) {\n    done = function done() {};\n  }\n\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? '' : _ref$namespace;\n\n  if (!BROWSER) {\n    warn('`loadableReady()` must be called in browser only');\n    done();\n    return Promise.resolve();\n  }\n\n  var requiredChunks = null;\n\n  if (BROWSER) {\n    var id = getRequiredChunkKey(namespace);\n    var dataElement = document.getElementById(id);\n\n    if (dataElement) {\n      requiredChunks = JSON.parse(dataElement.textContent);\n      var extElement = document.getElementById(id + \"_ext\");\n\n      if (extElement) {\n        var _JSON$parse = JSON.parse(extElement.textContent),\n            namedChunks = _JSON$parse.namedChunks;\n\n        namedChunks.forEach(function (chunkName) {\n          LOADABLE_SHARED.initialChunks[chunkName] = true;\n        });\n      } else {\n        // version mismatch\n        throw new Error('loadable-component: @loadable/server does not match @loadable/component');\n      }\n    }\n  }\n\n  if (!requiredChunks) {\n    warn('`loadableReady()` requires state, please use `getScriptTags` or `getScriptElements` server-side');\n    done();\n    return Promise.resolve();\n  }\n\n  var resolved = false;\n  return new Promise(function (resolve) {\n    window.__LOADABLE_LOADED_CHUNKS__ = window.__LOADABLE_LOADED_CHUNKS__ || [];\n    var loadedChunks = window.__LOADABLE_LOADED_CHUNKS__;\n    var originalPush = loadedChunks.push.bind(loadedChunks);\n\n    function checkReadyState() {\n      if (requiredChunks.every(function (chunk) {\n        return loadedChunks.some(function (_ref2) {\n          var chunks = _ref2[0];\n          return chunks.indexOf(chunk) > -1;\n        });\n      })) {\n        if (!resolved) {\n          resolved = true;\n          resolve();\n        }\n      }\n    }\n\n    loadedChunks.push = function () {\n      originalPush.apply(void 0, arguments);\n      checkReadyState();\n    };\n\n    checkReadyState();\n  }).then(done);\n}\n/* eslint-disable no-underscore-dangle */\n\n\nvar loadable$2 = loadable;\nloadable$2.lib = loadable$1;\nvar lazy$2 = lazy;\nlazy$2.lib = lazy$1;\nvar __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sharedInternals;\nexport default loadable$2;\nexport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, lazy$2 as lazy, loadableReady };","import React from 'react'\nimport { Router } from '@reach/router'\nimport Account from 'src/app/Account'\nimport Bookmarks from 'src/app/Bookmarks'\nimport Login from 'src/app/Login'\nimport Register from 'src/app/Register'\nimport withENLayout from 'src/layouts/withENLayout'\nimport Profile from 'src/app/Profile'\nimport MarkdownEditor from 'src/app/MarkdownEditor'\nimport View from 'src/app/MarkdownEditor/View'\nimport Loadable from '@loadable/component'\n\nconst MarkDownEditorLiteImpl = Loadable(() =>\n  import('src/app/MarkdownEditor/MarkDownEditorLiteImpl')\n)\n\nfunction App() {\n  return (\n    <Router basepath=\"/app\">\n      <Profile path=\"/account/:id\"></Profile>\n      <Account path=\"/account\"></Account>\n      <Bookmarks path=\"/bookmarks\"></Bookmarks>\n      <Login path=\"/login\"></Login>\n      <Register path=\"/register\"></Register>\n      <MarkdownEditor path=\"/markdown\">\n        <MarkDownEditorLiteImpl path=\"/\"></MarkDownEditorLiteImpl>\n        <View path=\"/:id\"></View>\n        <MarkDownEditorLiteImpl path=\"/:id/edit\"></MarkDownEditorLiteImpl>\n      </MarkdownEditor>\n    </Router>\n  )\n}\n\nexport default withENLayout(App)\n"],"sourceRoot":""}