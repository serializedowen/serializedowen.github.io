{"version":3,"sources":["webpack:///./src/pages/categories.js"],"names":["Title","styled","h3","Category","group","data","allMarkdownRemark","title","config","siteTitle","to","map","category","key","fieldValue","kebabCase","totalCount","postQuery"],"mappings":"2FAAA,6KAUMA,EAAQC,IAAOC,GAAV,wEAAGD,CAAH,uFAgCIE,UA1BE,SAAC,GAAD,IAEQC,EAFR,EACfC,KACEC,kBAAqBF,MAFR,OAMf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQG,MAAK,gBAAkBC,IAAOC,YACtC,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KAAKF,IAAOC,YAEvB,kBAAC,IAAD,KACE,kBAAC,IAAD,mBACCL,EAAMO,KAAI,SAAAC,GAAQ,OACjB,kBAACZ,EAAD,CAAOa,IAAKD,EAASE,YACnB,kBAAC,OAAD,CAAMJ,GAAE,eAAiBK,IAAUH,EAASE,aACzCF,EAASE,YACJ,IAHV,IAIIF,EAASI,WAJb,WAsBD,IAAMC,EAAS","file":"component---src-pages-categories-js-7544392b38a4a32053b3.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport kebabCase from 'lodash/kebabCase'\nimport { Layout, Wrapper, Header, SectionTitle, Content } from 'components'\n\nimport config from '../../config/SiteConfig'\n\nconst Title = styled.h3`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`\n\nconst Category = ({\n  data: {\n    allMarkdownRemark: { group }\n  }\n}) => (\n  // <Layout>\n  <Wrapper>\n    <Helmet title={`Categories | ${config.siteTitle}`} />\n    <Header>\n      <Link to=\"/\">{config.siteTitle}</Link>\n    </Header>\n    <Content>\n      <SectionTitle>Categories</SectionTitle>\n      {group.map(category => (\n        <Title key={category.fieldValue}>\n          <Link to={`/categories/${kebabCase(category.fieldValue)}`}>\n            {category.fieldValue}\n          </Link>{' '}\n          ({category.totalCount})\n        </Title>\n      ))}\n    </Content>\n  </Wrapper>\n  // </Layout>\n)\n\nexport default Category\n\nCategory.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.array.isRequired\n    })\n  }).isRequired\n}\n\nexport const postQuery = graphql`\n  query CategoriesPage {\n    allMarkdownRemark {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}