{"version":3,"sources":["webpack:///./src/layouts/withENLayout.js","webpack:///./src/lang/en.js","webpack:///./src/pages/index.js"],"names":["Component","props","i18nMessages","messages","module","exports","selectLanguage","greeting","categories","contact","readTime","blog","docs","mainPage","copyrights","Hero","styled","div","media","phone","tablet","IndexPage","postEdges","data","allMarkdownRemark","edges","style","color","id","to","big","width","height","viewBox","xmlns","d","console","log","node","frontmatter","date","filter","post","index","map","title","excerpt","timeToRead","slug","fields","category","key","withENLayout","IndexQuery"],"mappings":"2FAAA,0DAUe,aAAAA,GAAS,OAAI,SAAAC,GAC1B,OACE,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,aAAcC,MAC/B,kBAACH,EAAcC,O,mBCbrBG,EAAOC,QAAU,CACfC,eAAgB,uBAChBC,SAAU,QACVC,WAAY,aACZC,QAAS,UACTC,SAAU,kBACVC,KAAM,OACNC,KAAM,OACNC,SAAU,OACVC,WAAY,+C,kCCTd,6LASMC,EAAOC,IAAOC,IAAV,kEAAGD,CAAH,0LAQGE,IAAMC,MAGND,IAAME,QAMbC,EAAY,SAAC,GAAD,IAEcC,EAFd,EAChBC,KACEC,kBAAqBC,MAFP,OAKhB,kBAAC,IAAD,KACE,kBAACV,EAAD,KACE,wBAAIW,MAAO,CAAEC,MAAO,UAClB,kBAAC,IAAD,CAAkBC,GAAG,cAGvB,uBAAGF,MAAO,CAAEC,MAAO,UAAnB,yFAMA,kBAAC,OAAD,CAAME,GAAG,YACP,kBAAC,IAAD,CAAQC,KAAG,GACT,yBACEC,MAAM,OACNC,OAAO,OACPC,QAAQ,gBACRC,MAAM,8BAEN,0BAAMC,EAAE,4NAEV,kBAAC,IAAD,CAAkBP,GAAG,eAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,uBAECQ,QAAQC,IAAIf,EAAU,GAAGgB,KAAKC,YAAYC,MAC1ClB,EACEmB,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,MAChCC,KAAI,SAAAF,GAAI,OACP,kBAAC,IAAD,CACEG,MAAOH,EAAKJ,KAAKC,YAAYM,MAC7BL,KAAME,EAAKJ,KAAKC,YAAYC,KAC5BM,QAASJ,EAAKJ,KAAKQ,QACnBC,WAAYL,EAAKJ,KAAKS,WACtBC,KAAMN,EAAKJ,KAAKW,OAAOD,KACvBE,SAAUR,EAAKJ,KAAKC,YAAYW,SAChCC,IAAKT,EAAKJ,KAAKW,OAAOD,aAOnBI,sBAAa/B,GAWrB,IAAMgC,EAAU","file":"component---src-pages-index-js-370b817435d1bd41209b.js","sourcesContent":["import React from 'react'\nimport { addLocaleData } from 'react-intl'\nimport messages from '../lang/en'\n// import en from 'react-intl/locale-data/en'\nimport Layout from './index'\n\n// import 'intl/locale-data/jsonp/en';\n\n// addLocaleData(en)\n\nexport default Component => props => {\n  return (\n    <Layout {...props} i18nMessages={messages}>\n      <Component {...props}></Component>\n    </Layout>\n  )\n}\n\n// export default props => <Layout {...props} i18nMessages={messages} />\n","module.exports = {\n  selectLanguage: 'Select your language',\n  greeting: 'Howdy',\n  categories: 'Categories',\n  contact: 'Contact',\n  readTime: '{time} Min Read',\n  blog: 'Blog',\n  docs: 'Docs',\n  mainPage: 'Home',\n  copyrights: '@SerializedOwen 2020. All rights reserved.'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { FormattedMessage } from 'react-intl'\nimport { Article, Wrapper, Button, SectionTitle, Content } from 'components'\nimport { media } from '../utils/media'\nimport withENLayout from 'src/layouts/withENLayout'\n\nconst Hero = styled.div`\n  grid-column: 2;\n  padding: 3rem 2rem 6rem 2rem;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n\n  p {\n    font-size: 1.68rem;\n    margin-top: -1rem;\n    @media ${media.phone} {\n      font-size: 1.25rem;\n    }\n    @media ${media.tablet} {\n      font-size: 1.45rem;\n    }\n  }\n`\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges: postEdges }\n  }\n}) => (\n  <Wrapper>\n    <Hero>\n      <h1 style={{ color: 'white' }}>\n        <FormattedMessage id=\"greeting\"></FormattedMessage>\n        {/* Howdy. */}\n      </h1>\n      <p style={{ color: 'white' }}>\n        I'm SerializedOwen, a Full-stack Web Developer with five years of\n        industry experience\n      </p>\n\n      {/* <Button>test</Button> */}\n      <Link to=\"/contact\">\n        <Button big>\n          <svg\n            width=\"1792\"\n            height=\"1792\"\n            viewBox=\"0 0 1792 1792\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\" />\n          </svg>\n          <FormattedMessage id=\"contact\"></FormattedMessage>\n        </Button>\n      </Link>\n    </Hero>\n    <Content>\n      <SectionTitle>Latest stories</SectionTitle>\n\n      {console.log(postEdges[0].node.frontmatter.date)}\n      {postEdges\n        .filter((post, index) => index < 10)\n        .map(post => (\n          <Article\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            slug={post.node.fields.slug}\n            category={post.node.frontmatter.category}\n            key={post.node.fields.slug}\n          />\n        ))}\n    </Content>\n  </Wrapper>\n)\n\nexport default withENLayout(IndexPage)\nexport { IndexPage }\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired\n    })\n  }).isRequired\n}\n\nexport const IndexQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            category\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}