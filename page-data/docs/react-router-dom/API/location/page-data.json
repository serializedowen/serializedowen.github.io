{"componentChunkName":"component---src-templates-doc-js","path":"/docs/react-router-dom/API/location","result":{"data":{"markdownRemark":{"html":"<h3 id=\"location\" style=\"position:relative;\"><a href=\"#location\" aria-label=\"location permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">location</code></h3>\n<p>location 对象表示应用程序现在所在的位置，您希望其运行的位置，甚至是以前的位置。看起来像这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ac3df4\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"pathname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/somewhere\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"search\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"?some=search-string\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#howdy\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"state\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>userDefined<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>react router 会在以下几个场景中为您注入 location 对象：</p>\n<ul>\n<li>Route 组件中：<code class=\"language-text\">this.props.location</code></li>\n<li>Route 组件的 render 方法中：<code class=\"language-text\">({ location }) =&gt; ()</code></li>\n<li>Route 组件的子组件中：<code class=\"language-text\">({ location }) =&gt; ()</code></li>\n<li>withRoutor 高阶组件中： <code class=\"language-text\">this.props.location</code></li>\n</ul>\n<p>你也可以在 history.location 中找到他，但你不应该使用他，因为他是可变对象。<a href=\"https://reactrouter.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">扩展阅读</a></p>\n<p>位置对象永远不会发生变化，因此您可以在生命周期挂钩中使用它来确定导航发生的时间，这对于数据获取和动画处理非常有用。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentWillReceiveProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nextProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nextProps<span class=\"token punctuation\">.</span>location <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// navigated!</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>你可以在以下场景中提供 location 对象来进行导航：</p>\n<ul>\n<li><code class=\"language-text\">&lt;Link to={}</code></li>\n<li><code class=\"language-text\">&lt;Redirect to={}</code></li>\n<li><code class=\"language-text\">history.push()</code></li>\n<li><code class=\"language-text\">history.replace()</code></li>\n</ul>\n<p>通常情况下你应该使用字符串，但如果你需要在 location 之前持久化一些数据，那你可以使用 location 对象。如果您要基于导航历史而不是仅基于路径（如模式）来分支 UI，这将非常有用。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 通常你仅需要</span>\n<span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/somewhere\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 但你也可以：</span>\n<span class=\"token keyword\">const</span> location <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  pathname<span class=\"token operator\">:</span> <span class=\"token string\">'/somewhere'</span><span class=\"token punctuation\">,</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> fromDashboard<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Redirect to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>location<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span></code></pre></div>\n<p>最后，您可以将 location 传递给以下组件：</p>\n<ul>\n<li><code class=\"language-text\">&lt;Switch&gt;</code></li>\n<li><code class=\"language-text\">&lt;Route&gt;</code></li>\n</ul>\n<p>这样可以防止他们在路由器状态下使用实际 location 对象。这对于动画和未完成的导航非常有用，或者在您想要诱使组件在与 location 对象不同的位置进行渲染时，这很有用。</p>","timeToRead":2,"tableOfContents":"<ul>\n<li><a href=\"/docs/react-router-dom/API/location/#location\"><code class=\"language-text\">location</code></a></li>\n</ul>","lastModified":"2020-09-24T08:06:10.989Z","headings":[{"id":"location","depth":3}]},"allMarkdownRemark":{"totalCount":40,"edges":[{"node":{"frontmatter":{"title":"快速开始"},"fields":{"slug":"/docs/react-router-dom/向导/快速开始"}}},{"node":{"frontmatter":{"title":"核心组件"},"fields":{"slug":"/docs/react-router-dom/向导/核心组件"}}},{"node":{"frontmatter":{"title":"服务端渲染"},"fields":{"slug":"/docs/react-router-dom/向导/服务端渲染"}}},{"node":{"frontmatter":{"title":"代码分割"},"fields":{"slug":"/docs/react-router-dom/向导/代码分割"}}},{"node":{"frontmatter":{"title":"滚动回溯"},"fields":{"slug":"/docs/react-router-dom/向导/滚动回溯"}}},{"node":{"frontmatter":{"title":"代码哲学"},"fields":{"slug":"/docs/react-router-dom/向导/代码哲学"}}},{"node":{"frontmatter":{"title":"测试"},"fields":{"slug":"/docs/react-router-dom/向导/测试"}}},{"node":{"frontmatter":{"title":"深度redux整合"},"fields":{"slug":"/docs/react-router-dom/向导/深度redux整合"}}},{"node":{"frontmatter":{"title":"静态路由"},"fields":{"slug":"/docs/react-router-dom/向导/静态路由"}}},{"node":{"frontmatter":{"title":"基础"},"fields":{"slug":"/docs/react-router-dom/示例/基础"}}},{"node":{"frontmatter":{"title":"配置 URL 参数"},"fields":{"slug":"/docs/react-router-dom/示例/配置-url-参数"}}},{"node":{"frontmatter":{"title":"嵌套路由"},"fields":{"slug":"/docs/react-router-dom/示例/嵌套路由"}}},{"node":{"frontmatter":{"title":"重定向（鉴权）"},"fields":{"slug":"/docs/react-router-dom/示例/重定向（鉴权）"}}},{"node":{"frontmatter":{"title":"自定义 Link"},"fields":{"slug":"/docs/react-router-dom/示例/自定义-link"}}},{"node":{"frontmatter":{"title":"防止过渡动画"},"fields":{"slug":"/docs/react-router-dom/示例/防止过渡动画"}}},{"node":{"frontmatter":{"title":"404 页面"},"fields":{"slug":"/docs/react-router-dom/示例/404-页面"}}},{"node":{"frontmatter":{"title":"侧边栏"},"fields":{"slug":"/docs/react-router-dom/示例/侧边栏"}}},{"node":{"frontmatter":{"title":"动画过渡"},"fields":{"slug":"/docs/react-router-dom/示例/动画过渡"}}},{"node":{"frontmatter":{"title":"路由配置"},"fields":{"slug":"/docs/react-router-dom/示例/路由配置"}}},{"node":{"frontmatter":{"title":"弹窗路由（Modal）"},"fields":{"slug":"/docs/react-router-dom/示例/弹窗路由（-modal）"}}},{"node":{"frontmatter":{"title":"StaticRouter 上下文"},"fields":{"slug":"/docs/react-router-dom/示例/static-router-上下文"}}},{"node":{"frontmatter":{"title":"递归路径"},"fields":{"slug":"/docs/react-router-dom/示例/递归路径"}}},{"node":{"frontmatter":{"title":"页面查询参数"},"fields":{"slug":"/docs/react-router-dom/示例/页面查询参数"}}},{"node":{"frontmatter":{"title":"Hooks"},"fields":{"slug":"/docs/react-router-dom/API/hooks"}}},{"node":{"frontmatter":{"title":"<BrowserRouter>"},"fields":{"slug":"/docs/react-router-dom/API/browser-router"}}},{"node":{"frontmatter":{"title":"<HashRouter>"},"fields":{"slug":"/docs/react-router-dom/API/hash-router"}}},{"node":{"frontmatter":{"title":"<Link>"},"fields":{"slug":"/docs/react-router-dom/API/link"}}},{"node":{"frontmatter":{"title":"<NavLink>"},"fields":{"slug":"/docs/react-router-dom/API/nav-link"}}},{"node":{"frontmatter":{"title":"<Prompt>"},"fields":{"slug":"/docs/react-router-dom/API/prompt"}}},{"node":{"frontmatter":{"title":"<MemoryRouter>"},"fields":{"slug":"/docs/react-router-dom/API/memory-router"}}},{"node":{"frontmatter":{"title":"<Redirect>"},"fields":{"slug":"/docs/react-router-dom/API/redirect"}}},{"node":{"frontmatter":{"title":"<Route>"},"fields":{"slug":"/docs/react-router-dom/API/route"}}},{"node":{"frontmatter":{"title":"<Router>"},"fields":{"slug":"/docs/react-router-dom/API/router"}}},{"node":{"frontmatter":{"title":"<StaticRouter>"},"fields":{"slug":"/docs/react-router-dom/API/static-router"}}},{"node":{"frontmatter":{"title":"<Switch>"},"fields":{"slug":"/docs/react-router-dom/API/switch"}}},{"node":{"frontmatter":{"title":"history"},"fields":{"slug":"/docs/react-router-dom/API/history"}}},{"node":{"frontmatter":{"title":"location"},"fields":{"slug":"/docs/react-router-dom/API/location"}}},{"node":{"frontmatter":{"title":"match"},"fields":{"slug":"/docs/react-router-dom/API/match"}}},{"node":{"frontmatter":{"title":"matchPath"},"fields":{"slug":"/docs/react-router-dom/API/match-path"}}},{"node":{"frontmatter":{"title":"withRouter"},"fields":{"slug":"/docs/react-router-dom/API/with-router"}}}]}},"pageContext":{"slug":"/docs/react-router-dom/API/location","layout":"docs"}},"staticQueryHashes":["3969440572","3969440572"]}