{"componentChunkName":"component---src-templates-doc-js","path":"/docs/react-router-dom/API/route","result":{"data":{"markdownRemark":{"html":"<h3 id=\"route\" style=\"position:relative;\"><a href=\"#route\" aria-label=\"route permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Route&gt;</code></h3>\n<p><code class=\"language-text\">&lt;Route&gt;</code>组件应该是 react-router-dom 包里最重要的，最值得去认真学习和使用的组件。它最基本的责任就是在 URL 和自己的路径对应时渲染 UI。</p>\n<p>思考下列代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/news\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>NewsFeed <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  node\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>如果应用程序的位置是/，则 UI 层次结构会类似于：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> react<span class=\"token operator\">-</span>empty<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>如果应用程序的位置是/news，则 UI 层次结构会类似于：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> react<span class=\"token operator\">-</span>empty<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>NewsFeed <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>“ react-empty”注释只是 React null 渲染的实现细节。但这有助于我们说明 react-router 的实现细节。因为事实上在 react-router 的实现，不管<code class=\"language-text\">&lt;Route&gt;</code>匹配与否，他对应的组件是一直渲染的。（不匹配时渲染 null， 匹配时渲染<code class=\"language-text\">&lt;Route&gt;</code> 对应的组件）</p>\n<p>如果相同的组件在组件树的同一个层级中被当做多个<code class=\"language-text\">&lt;Route&gt;</code>的子组件，那么 React 会把他们当做相同的组件，因此，在切换路由时候它的 state 值会被保留。如果这不是你的期望，你可以在<code class=\"language-text\">&lt;Route&gt;</code>加上唯一的 key 属性，来告诉 react 他们属于不同的组件。</p>\n<h4 id=\"route-render-方法\" style=\"position:relative;\"><a href=\"#route-render-%E6%96%B9%E6%B3%95\" aria-label=\"route render 方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Route&gt;</code> render 方法</h4>\n<p>我们推荐使用子组件为<code class=\"language-text\">&lt;Route&gt;</code>提供渲染的组件，就像上述的案例中那样。但是，我们也为您提供了其他更多可选的方法（他们存在的主要意义是为了支持那些使用旧版本 react-router 编写的程序）</p>\n<ul>\n<li><code class=\"language-text\">&lt;Route component&gt;</code></li>\n<li><code class=\"language-text\">&lt;Route render&gt;</code></li>\n<li><code class=\"language-text\">&lt;Route children&gt;</code> function</li>\n</ul>\n<p>您只应该使用上述方法中的一种来为<code class=\"language-text\">&lt;Route&gt;</code>提供渲染的子组件。下面的案例会帮助您理解他们之间的区别：</p>\n<h4 id=\"参数\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E6%95%B0\" aria-label=\"参数 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参数</h4>\n<p>下面几个参数会默认注入到<code class=\"language-text\">&lt;Route&gt;</code>包含的子组件渲染中</p>\n<ul>\n<li><a href=\"./match\">match</a></li>\n<li><a href=\"./location\">location</a></li>\n<li><a href=\"./history\">history</a></li>\n</ul>\n<h4 id=\"route-component-渲染\" style=\"position:relative;\"><a href=\"#route-component-%E6%B8%B2%E6%9F%93\" aria-label=\"route component 渲染 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Route component&gt;</code> 渲染</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token comment\">// 所有路由属性 (match, location and history) 会被注入 User 组件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">}</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/user/:username\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>User<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  node\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>当您使用 component（而不是下面的 render 或 children）时，路由器将使用 React.createElement 从给定的组件创建一个新的 React 元素。这意味着，如果为 component 提供的 props 中包含内联函数，则在每次渲染时都会创建一个新组件。这将导致现有组件的卸载和新组件的挂载，而不仅仅是更新现有组件。使用内联函数进行内联渲染时，请使用 render 或 children 道具（如下）。</p>\n<h4 id=\"route-render\" style=\"position:relative;\"><a href=\"#route-render\" aria-label=\"route render permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Route render&gt;</code></h4>\n<p>这样可以方便地进行内联渲染和包装，而不必进行上述不必要的重新挂载。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token comment\">// convenient inline rendering</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/home\"</span> render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  node\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// wrapping/composing</span>\n<span class=\"token comment\">// You can spread routeProps to make them available to your rendered Component</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">FadingRoute</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> component<span class=\"token operator\">:</span> Component<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Route\n      <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span>\n      render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">routeProps</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>FadeIn<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Component <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>routeProps<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FadeIn<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>FadingRoute path<span class=\"token operator\">=</span><span class=\"token string\">\"/cool\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Something<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  node\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>警告： <code class=\"language-text\">&lt;Route component&gt;</code>优先级高于<code class=\"language-text\">&lt;Route render&gt;</code>，因此请不要在同一个<code class=\"language-text\">&lt;Route&gt;</code>中使用两者。</p>\n</blockquote>\n<h4 id=\"route-children-function\" style=\"position:relative;\"><a href=\"#route-children-function\" aria-label=\"route children function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Route children&gt;</code> function</h4>\n<p>有时您可能希望无论 url 匹配与否都渲染组件。在这种情况下，您可以使用 children prop 功能。它的工作原理与 render 完全相同，只是 render 只在存在匹配项而被调用和渲染。</p>\n<p>children 属性接收 render 所有和 render 属性获得的一样的路由属性。唯一区别是，当路由不匹配的 URL 时，match 属性是 null。这使您可以根据路由是否匹配来动态调整 UI。active 如果路线匹配，我们在这里添加一个类</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Link<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">ListItemLink</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> to<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Route\n      path<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">}</span>\n      children<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>li className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>match <span class=\"token operator\">?</span> <span class=\"token string\">'active'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>to<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ListItemLink to<span class=\"token operator\">=</span><span class=\"token string\">\"/somewhere\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ListItemLink to<span class=\"token operator\">=</span><span class=\"token string\">\"/somewhere-else\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  node\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>这对动画也很有用:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route\n  children<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 动画会始终渲染，因此你可以使用生命周期来动画控制组件的挂载和卸载 */</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>Animate<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>match <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>Something <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>rest<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Animate<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<h4 id=\"path-string--string-\" style=\"position:relative;\"><a href=\"#path-string--string-\" aria-label=\"path string  string  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path: string | string []</h4>\n<p>所以可以被<a href=\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">path-to-regexp@^1.7.0 </a>识别的 url 都能使用。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users/:id\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>User <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"/users/:id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/profile/:id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>User <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span></code></pre></div>\n<h4 id=\"exact-bool\" style=\"position:relative;\"><a href=\"#exact-bool\" aria-label=\"exact bool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>exact: bool</h4>\n<p>当值为 true 时，仅当 location.pathname 和路由路径完全匹配时候渲染。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/one\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>About <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span></code></pre></div>\n<h4 id=\"strict-bool\" style=\"position:relative;\"><a href=\"#strict-bool\" aria-label=\"strict bool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>strict: bool</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route strict path<span class=\"token operator\">=</span><span class=\"token string\">\"/one/\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>About <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th>路由路径</th>\n<th>location.pathname</th>\n<th>匹配与否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/one/</td>\n<td>/one</td>\n<td>否</td>\n</tr>\n<tr>\n<td>/one/</td>\n<td>/one/</td>\n<td>是</td>\n</tr>\n<tr>\n<td>/one/</td>\n<td>/one/two</td>\n<td>是</td>\n</tr>\n</tbody>\n</table>\n<p>当值为 true 时，带有 path 斜杠的只会与 location.pathname 带有斜杠的匹配。当 location.pathname 中有其他网址段时，此选项无效。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Route exact strict path<span class=\"token operator\">=</span><span class=\"token string\">\"/one\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>About <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th>路由路径</th>\n<th>location.pathname</th>\n<th>匹配与否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/one/</td>\n<td>/one</td>\n<td>是</td>\n</tr>\n<tr>\n<td>/one/</td>\n<td>/one/</td>\n<td>否</td>\n</tr>\n<tr>\n<td>/one/</td>\n<td>/one/two</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"location-object\" style=\"position:relative;\"><a href=\"#location-object\" aria-label=\"location object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>location: object</h4>\n<p>一个<code class=\"language-text\">&lt;Route&gt;</code>元素尝试其匹配 path 到当前的历史位置（通常是当前浏览器 URL）。但是，也可以传递与 location.pathname 不同的值进行匹配。如需要将<code class=\"language-text\">&lt;Route&gt;</code>与当前历史记录位置以外的其他位置进行匹配时，这很有用，如<a href=\"https://reactrouter.com/web/example/animated-transitions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Animated Transitions</a>示例所示。如果<code class=\"language-text\">&lt;Route&gt;</code>元素包装在中，<code class=\"language-text\">&lt;Switch&gt;</code>并且与传递给的位<code class=\"language-text\">置&lt;Switch&gt;</code>（或当前历史记录位置）匹配，则 location 传递给<code class=\"language-text\">&lt;Route&gt;</code>的属性将被<code class=\"language-text\">&lt;Switch&gt;</code>上的属性 <a href=\"https://github.com/ReactTraining/react-router/blob/master/packages/react-router/modules/Switch.js#L51\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">代码</a>覆盖。</p>\n<h4 id=\"sensitive-bool\" style=\"position:relative;\"><a href=\"#sensitive-bool\" aria-label=\"sensitive bool permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>sensitive: bool</h4>\n<p>当值为 true 时，匹配时将区分大小写</p>\n<table>\n<thead>\n<tr>\n<th>路由路径</th>\n<th>location.pathname</th>\n<th>sensitive 的值</th>\n<th>匹配与否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/one/</td>\n<td>/one</td>\n<td>true</td>\n<td>是</td>\n</tr>\n<tr>\n<td>/one/</td>\n<td>/one/</td>\n<td>true</td>\n<td>否</td>\n</tr>\n<tr>\n<td>/one/</td>\n<td>/one/two</td>\n<td>false</td>\n<td>否</td>\n</tr>\n</tbody>\n</table>","timeToRead":6,"frontmatter":{"title":"<Route>"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/react-router-dom/API/route/#route\"><code class=\"language-text\">&lt;Route&gt;</code></a></p>\n<ul>\n<li><a href=\"/docs/react-router-dom/API/route/#route-render-%E6%96%B9%E6%B3%95\"><code class=\"language-text\">&lt;Route&gt;</code> render 方法</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#%E5%8F%82%E6%95%B0\">参数</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#route-component-%E6%B8%B2%E6%9F%93\"><code class=\"language-text\">&lt;Route component&gt;</code> 渲染</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#route-render\"><code class=\"language-text\">&lt;Route render&gt;</code></a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#route-children-function\"><code class=\"language-text\">&lt;Route children&gt;</code> function</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#path-string--string-\">path: string | string []</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#exact-bool\">exact: bool</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#strict-bool\">strict: bool</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#location-object\">location: object</a></li>\n<li><a href=\"/docs/react-router-dom/API/route/#sensitive-bool\">sensitive: bool</a></li>\n</ul>\n</li>\n</ul>","lastModified":"2020-10-09T04:07:27.702Z","headings":[{"id":"route","depth":3},{"id":"route-render-方法","depth":4},{"id":"参数","depth":4},{"id":"route-component-渲染","depth":4},{"id":"route-render","depth":4},{"id":"route-children-function","depth":4},{"id":"path-string--string-","depth":4},{"id":"exact-bool","depth":4},{"id":"strict-bool","depth":4},{"id":"location-object","depth":4},{"id":"sensitive-bool","depth":4}]},"allMarkdownRemark":{"totalCount":41,"edges":[{"node":{"frontmatter":{"title":"快速开始"},"fields":{"slug":"/docs/react-router-dom/向导/快速开始"}}},{"node":{"frontmatter":{"title":"核心组件"},"fields":{"slug":"/docs/react-router-dom/向导/核心组件"}}},{"node":{"frontmatter":{"title":"服务端渲染"},"fields":{"slug":"/docs/react-router-dom/向导/服务端渲染"}}},{"node":{"frontmatter":{"title":"代码分割"},"fields":{"slug":"/docs/react-router-dom/向导/代码分割"}}},{"node":{"frontmatter":{"title":"滚动回溯"},"fields":{"slug":"/docs/react-router-dom/向导/滚动回溯"}}},{"node":{"frontmatter":{"title":"设计理念"},"fields":{"slug":"/docs/react-router-dom/向导/设计理念"}}},{"node":{"frontmatter":{"title":"测试"},"fields":{"slug":"/docs/react-router-dom/向导/测试"}}},{"node":{"frontmatter":{"title":"深度redux整合"},"fields":{"slug":"/docs/react-router-dom/向导/深度redux整合"}}},{"node":{"frontmatter":{"title":"静态路由"},"fields":{"slug":"/docs/react-router-dom/向导/静态路由"}}},{"node":{"frontmatter":{"title":"基础"},"fields":{"slug":"/docs/react-router-dom/示例/基础"}}},{"node":{"frontmatter":{"title":""},"fields":{"slug":"/docs/react-router-dom/"}}},{"node":{"frontmatter":{"title":"配置 URL 参数"},"fields":{"slug":"/docs/react-router-dom/示例/配置-url-参数"}}},{"node":{"frontmatter":{"title":"嵌套路由"},"fields":{"slug":"/docs/react-router-dom/示例/嵌套路由"}}},{"node":{"frontmatter":{"title":"重定向（鉴权）"},"fields":{"slug":"/docs/react-router-dom/示例/重定向（鉴权）"}}},{"node":{"frontmatter":{"title":"自定义 Link"},"fields":{"slug":"/docs/react-router-dom/示例/自定义-link"}}},{"node":{"frontmatter":{"title":"防止过渡动画"},"fields":{"slug":"/docs/react-router-dom/示例/防止过渡动画"}}},{"node":{"frontmatter":{"title":"404 页面"},"fields":{"slug":"/docs/react-router-dom/示例/404-页面"}}},{"node":{"frontmatter":{"title":"侧边栏"},"fields":{"slug":"/docs/react-router-dom/示例/侧边栏"}}},{"node":{"frontmatter":{"title":"动画过渡"},"fields":{"slug":"/docs/react-router-dom/示例/动画过渡"}}},{"node":{"frontmatter":{"title":"路由配置"},"fields":{"slug":"/docs/react-router-dom/示例/路由配置"}}},{"node":{"frontmatter":{"title":"弹窗路由（Modal）"},"fields":{"slug":"/docs/react-router-dom/示例/弹窗路由（-modal）"}}},{"node":{"frontmatter":{"title":"StaticRouter 上下文"},"fields":{"slug":"/docs/react-router-dom/示例/static-router-上下文"}}},{"node":{"frontmatter":{"title":"递归路径"},"fields":{"slug":"/docs/react-router-dom/示例/递归路径"}}},{"node":{"frontmatter":{"title":"页面查询参数"},"fields":{"slug":"/docs/react-router-dom/示例/页面查询参数"}}},{"node":{"frontmatter":{"title":"Hooks"},"fields":{"slug":"/docs/react-router-dom/API/hooks"}}},{"node":{"frontmatter":{"title":"<BrowserRouter>"},"fields":{"slug":"/docs/react-router-dom/API/browser-router"}}},{"node":{"frontmatter":{"title":"<Link>"},"fields":{"slug":"/docs/react-router-dom/API/link"}}},{"node":{"frontmatter":{"title":"<HashRouter>"},"fields":{"slug":"/docs/react-router-dom/API/hash-router"}}},{"node":{"frontmatter":{"title":"<NavLink>"},"fields":{"slug":"/docs/react-router-dom/API/nav-link"}}},{"node":{"frontmatter":{"title":"<Prompt>"},"fields":{"slug":"/docs/react-router-dom/API/prompt"}}},{"node":{"frontmatter":{"title":"<Redirect>"},"fields":{"slug":"/docs/react-router-dom/API/redirect"}}},{"node":{"frontmatter":{"title":"<MemoryRouter>"},"fields":{"slug":"/docs/react-router-dom/API/memory-router"}}},{"node":{"frontmatter":{"title":"<Route>"},"fields":{"slug":"/docs/react-router-dom/API/route"}}},{"node":{"frontmatter":{"title":"<StaticRouter>"},"fields":{"slug":"/docs/react-router-dom/API/static-router"}}},{"node":{"frontmatter":{"title":"<Router>"},"fields":{"slug":"/docs/react-router-dom/API/router"}}},{"node":{"frontmatter":{"title":"<Switch>"},"fields":{"slug":"/docs/react-router-dom/API/switch"}}},{"node":{"frontmatter":{"title":"history"},"fields":{"slug":"/docs/react-router-dom/API/history"}}},{"node":{"frontmatter":{"title":"location"},"fields":{"slug":"/docs/react-router-dom/API/location"}}},{"node":{"frontmatter":{"title":"match"},"fields":{"slug":"/docs/react-router-dom/API/match"}}},{"node":{"frontmatter":{"title":"matchPath"},"fields":{"slug":"/docs/react-router-dom/API/match-path"}}},{"node":{"frontmatter":{"title":"withRouter"},"fields":{"slug":"/docs/react-router-dom/API/with-router"}}}]}},"pageContext":{"package":"react-router-dom","slug":"/docs/react-router-dom/API/route","prev":{"node":{"fileAbsolutePath":"/Users/owenwang/Documents/javascript/serializedowen.github.io/docs/react-router-dom/API/<MemoryRouter>.md","sourceType":"docs","fields":{"package":"react-router-dom","slug":"/docs/react-router-dom/API/memory-router"},"frontmatter":{"title":"<MemoryRouter>","category":"docs"}}},"next":{"node":{"fileAbsolutePath":"/Users/owenwang/Documents/javascript/serializedowen.github.io/docs/react-router-dom/API/<StaticRouter>.md","sourceType":"docs","fields":{"package":"react-router-dom","slug":"/docs/react-router-dom/API/static-router"},"frontmatter":{"title":"<StaticRouter>","category":"docs"}}},"layout":"docs"}},"staticQueryHashes":["1124436713","4274079806"]}