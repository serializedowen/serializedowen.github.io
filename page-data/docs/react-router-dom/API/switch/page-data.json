{"componentChunkName":"component---src-templates-doc-js","path":"/docs/react-router-dom/API/switch","result":{"data":{"markdownRemark":{"html":"<h3 id=\"switch\" style=\"position:relative;\"><a href=\"#switch\" aria-label=\"switch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">&lt;Switch&gt;</code></h3>\n<p>渲染第一个和 location 匹配的子路由。</p>\n<p>这与仅使用一堆<code class=\"language-text\">&lt;Route&gt;</code>有何不同？</p>\n<p><code class=\"language-text\">&lt;Switch&gt;</code>独特之处在于它仅渲染一条路由。相反，每个<code class=\"language-text\">&lt;Route&gt;</code>与位置匹配的内容都包含在内。考虑以下路由：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n\n<span class=\"token keyword\">let</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>About <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/:user\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>User <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NoMatch <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>如果 URL 是 /about， 那么<code class=\"language-text\">&lt;About&gt;</code>, <code class=\"language-text\">&lt;User&gt;</code>, 和<code class=\"language-text\">&lt;NoMatch&gt;</code>都会被同时渲染。这是符合设计目标的，因为这会允许我们把<code class=\"language-text\">&lt;Route&gt;</code>以多种方式结合在应用中，例如侧边栏，面包屑和引导标签等等。</p>\n<p>但是，有时我们只想选择一个<code class=\"language-text\">&lt;Route&gt;</code>进行渲染。如果我们不在，/about 我们也不想匹配/:user（或显示“ 404”页面）。这是使用以下方法的方法 Switch：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n\n<span class=\"token keyword\">let</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>About <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/:user\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>User <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NoMatch <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>现在，如果我们在/about，<code class=\"language-text\">&lt;Switch&gt;</code>将开始寻找匹配项<code class=\"language-text\">&lt;Route&gt;</code>。<code class=\"language-text\">&lt;Route path=&quot;/about&quot;/&gt;</code>将匹配并<code class=\"language-text\">&lt;Switch&gt;</code>停止寻找匹配项和渲染<code class=\"language-text\">&lt;About&gt;</code>。\n同样，如果我们在/michael 那时，<code class=\"language-text\">&lt;User&gt;</code>将进行渲染。这对于动画过渡也很有用，因为匹配<code class=\"language-text\">&lt;Route&gt;</code>的渲染位置与上一个相同。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Fade<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 只会渲染一条路由项 */</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>Route <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Fade<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Fade<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 这里会一直有2条路由项被渲染，尽管可能其中一条返回了null，这将给添加动画带来很大的困扰 */</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>Route <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Fade<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n<h4 id=\"location-object\" style=\"position:relative;\"><a href=\"#location-object\" aria-label=\"location object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>location: object</h4>\n<p>一个用于匹配子路由的 location 对象，替换掉当前 history.location 中的值（通常是浏览器的 URL 值）</p>\n<h4 id=\"children-node\" style=\"position:relative;\"><a href=\"#children-node\" aria-label=\"children node permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>children: node</h4>\n<p>所有<code class=\"language-text\">&lt;Switch&gt;</code>的子组件都应该是<code class=\"language-text\">&lt;Route&gt;</code>或者<code class=\"language-text\">&lt;Redirect&gt;</code>组件。只有第一个与 location 对象匹配的组件会被渲染、</p>\n<p><code class=\"language-text\">&lt;Route&gt;</code>组件使用 path 属性来匹配 location，<code class=\"language-text\">&lt;Redirect&gt;</code>组件使用 from 属性。 一个没有 path 属性的<code class=\"language-text\">&lt;Route&gt;</code>和一个没有 from 属性的<code class=\"language-text\">&lt;Redirect&gt;</code>会一直匹配当前 location。</p>\n<p>如果将 location 属性提供给<code class=\"language-text\">&lt;Switch&gt;</code>，它将覆盖 location 匹配的子元素上的属性。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Redirect<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n\n<span class=\"token keyword\">let</span> routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Users <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Redirect <span class=\"token keyword\">from</span><span class=\"token operator\">=</span><span class=\"token string\">\"/accounts\"</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"/users\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n    <span class=\"token operator\">&lt;</span>Route<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NoMatch <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>","timeToRead":2,"tableOfContents":"<ul>\n<li>\n<p><a href=\"/docs/react-router-dom/API/switch/#switch\"><code class=\"language-text\">&lt;Switch&gt;</code></a></p>\n<ul>\n<li><a href=\"/docs/react-router-dom/API/switch/#location-object\">location: object</a></li>\n<li><a href=\"/docs/react-router-dom/API/switch/#children-node\">children: node</a></li>\n</ul>\n</li>\n</ul>","lastModified":"2020-09-24T07:14:37.923Z","headings":[{"id":"switch","depth":3},{"id":"location-object","depth":4},{"id":"children-node","depth":4}]},"allMarkdownRemark":{"totalCount":40,"edges":[{"node":{"frontmatter":{"title":"快速开始"},"fields":{"slug":"/docs/react-router-dom/向导/快速开始"}}},{"node":{"frontmatter":{"title":"核心组件"},"fields":{"slug":"/docs/react-router-dom/向导/核心组件"}}},{"node":{"frontmatter":{"title":"服务端渲染"},"fields":{"slug":"/docs/react-router-dom/向导/服务端渲染"}}},{"node":{"frontmatter":{"title":"代码分割"},"fields":{"slug":"/docs/react-router-dom/向导/代码分割"}}},{"node":{"frontmatter":{"title":"滚动回溯"},"fields":{"slug":"/docs/react-router-dom/向导/滚动回溯"}}},{"node":{"frontmatter":{"title":"代码哲学"},"fields":{"slug":"/docs/react-router-dom/向导/代码哲学"}}},{"node":{"frontmatter":{"title":"测试"},"fields":{"slug":"/docs/react-router-dom/向导/测试"}}},{"node":{"frontmatter":{"title":"深度redux整合"},"fields":{"slug":"/docs/react-router-dom/向导/深度redux整合"}}},{"node":{"frontmatter":{"title":"静态路由"},"fields":{"slug":"/docs/react-router-dom/向导/静态路由"}}},{"node":{"frontmatter":{"title":"基础"},"fields":{"slug":"/docs/react-router-dom/示例/基础"}}},{"node":{"frontmatter":{"title":"配置 URL 参数"},"fields":{"slug":"/docs/react-router-dom/示例/配置-url-参数"}}},{"node":{"frontmatter":{"title":"嵌套路由"},"fields":{"slug":"/docs/react-router-dom/示例/嵌套路由"}}},{"node":{"frontmatter":{"title":"重定向（鉴权）"},"fields":{"slug":"/docs/react-router-dom/示例/重定向（鉴权）"}}},{"node":{"frontmatter":{"title":"自定义 Link"},"fields":{"slug":"/docs/react-router-dom/示例/自定义-link"}}},{"node":{"frontmatter":{"title":"防止过渡动画"},"fields":{"slug":"/docs/react-router-dom/示例/防止过渡动画"}}},{"node":{"frontmatter":{"title":"404 页面"},"fields":{"slug":"/docs/react-router-dom/示例/404-页面"}}},{"node":{"frontmatter":{"title":"侧边栏"},"fields":{"slug":"/docs/react-router-dom/示例/侧边栏"}}},{"node":{"frontmatter":{"title":"动画过渡"},"fields":{"slug":"/docs/react-router-dom/示例/动画过渡"}}},{"node":{"frontmatter":{"title":"路由配置"},"fields":{"slug":"/docs/react-router-dom/示例/路由配置"}}},{"node":{"frontmatter":{"title":"弹窗路由（Modal）"},"fields":{"slug":"/docs/react-router-dom/示例/弹窗路由（-modal）"}}},{"node":{"frontmatter":{"title":"StaticRouter 上下文"},"fields":{"slug":"/docs/react-router-dom/示例/static-router-上下文"}}},{"node":{"frontmatter":{"title":"递归路径"},"fields":{"slug":"/docs/react-router-dom/示例/递归路径"}}},{"node":{"frontmatter":{"title":"页面查询参数"},"fields":{"slug":"/docs/react-router-dom/示例/页面查询参数"}}},{"node":{"frontmatter":{"title":"Hooks"},"fields":{"slug":"/docs/react-router-dom/API/hooks"}}},{"node":{"frontmatter":{"title":"<BrowserRouter>"},"fields":{"slug":"/docs/react-router-dom/API/browser-router"}}},{"node":{"frontmatter":{"title":"<HashRouter>"},"fields":{"slug":"/docs/react-router-dom/API/hash-router"}}},{"node":{"frontmatter":{"title":"<Link>"},"fields":{"slug":"/docs/react-router-dom/API/link"}}},{"node":{"frontmatter":{"title":"<NavLink>"},"fields":{"slug":"/docs/react-router-dom/API/nav-link"}}},{"node":{"frontmatter":{"title":"<Prompt>"},"fields":{"slug":"/docs/react-router-dom/API/prompt"}}},{"node":{"frontmatter":{"title":"<MemoryRouter>"},"fields":{"slug":"/docs/react-router-dom/API/memory-router"}}},{"node":{"frontmatter":{"title":"<Redirect>"},"fields":{"slug":"/docs/react-router-dom/API/redirect"}}},{"node":{"frontmatter":{"title":"<Route>"},"fields":{"slug":"/docs/react-router-dom/API/route"}}},{"node":{"frontmatter":{"title":"<Router>"},"fields":{"slug":"/docs/react-router-dom/API/router"}}},{"node":{"frontmatter":{"title":"<StaticRouter>"},"fields":{"slug":"/docs/react-router-dom/API/static-router"}}},{"node":{"frontmatter":{"title":"<Switch>"},"fields":{"slug":"/docs/react-router-dom/API/switch"}}},{"node":{"frontmatter":{"title":"history"},"fields":{"slug":"/docs/react-router-dom/API/history"}}},{"node":{"frontmatter":{"title":"location"},"fields":{"slug":"/docs/react-router-dom/API/location"}}},{"node":{"frontmatter":{"title":"match"},"fields":{"slug":"/docs/react-router-dom/API/match"}}},{"node":{"frontmatter":{"title":"matchPath"},"fields":{"slug":"/docs/react-router-dom/API/match-path"}}},{"node":{"frontmatter":{"title":"withRouter"},"fields":{"slug":"/docs/react-router-dom/API/with-router"}}}]}},"pageContext":{"slug":"/docs/react-router-dom/API/switch","layout":"docs"}},"staticQueryHashes":["3969440572","3969440572"]}