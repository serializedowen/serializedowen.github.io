{"componentChunkName":"component---src-templates-doc-js","path":"/docs/react-router-dom/向导/核心组件","result":{"data":{"markdownRemark":{"html":"<h3 id=\"核心组件\" style=\"position:relative;\"><a href=\"#%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6\" aria-label=\"核心组件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>核心组件</h3>\n<p>react-router 中有三种主要类型的组件，分别是</p>\n<ul>\n<li>路由： 如 <code class=\"language-text\">&lt;BrouwserRouter&gt;,</code> <code class=\"language-text\">&lt;HashRouter&gt;</code></li>\n<li>路由匹配器： 如 <code class=\"language-text\">&lt;Route&gt;</code>, <code class=\"language-text\">&lt;Switch&gt;</code></li>\n<li>导航：如 <code class=\"language-text\">&lt;Link&gt;</code>, <code class=\"language-text\">&lt;NavLink&gt;</code>, <code class=\"language-text\">&lt;Redirect&gt;</code></li>\n</ul>\n<p>通常，导航也称为路径变更器。</p>\n<p>所有在 web 应用中使用的组件都应该从 react-router-dom 包中引入</p>\n<br/>\n<h3 id=\"路由\" style=\"position:relative;\"><a href=\"#%E8%B7%AF%E7%94%B1\" aria-label=\"路由 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>路由</h3>\n<p>所有 react-router 应用的核心组件都是路由组件。 对于 web 应用，react-router-dom 提供了<HashRouter>和<BrowserRouter> 两种路由器。他们的区别在于如何存储 url 和如何与 web 服务器通信。</p>\n<ul>\n<li><code class=\"language-text\">&lt;BrowserRouter&gt;</code> 使用 url 路径来导航。通常情况下，这是最美观和优雅的方式。但是前提是 web 服务器的被正确的配置。也就是说，你的 web 服务器必须将所有 react-router-dom 在客户端管理的路由指向相同的页面（index.html），否则在你刷新页面的时候就会因为无法找到服务器资源而返回 404 错误。Create React App 在开发环境中已经默认开启了这项配置，同时也提供了在生产环境中的<a href=\"&#x27;https://create-react-app.dev/docs/deployment#serving-apps-with-client-side-routing\">配置向导</a></li>\n<li><code class=\"language-text\">&lt;HashRouter</code> 在 url 中的 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hash</a> 部分存储路径， 所以路径长得会像是这样: <code class=\"language-text\">http://example.com/#/your/page</code>。 因为 hash 部分在发起服务器请求是会被自动忽略，所以服务端不需要特殊的配置即可支持这种路由。</li>\n</ul>\n<p>使用路由的过程中，请确保路由组件正确包裹所有需要渲染的路由路径。通常情况下，我们推荐用路由组件包裹整个 react 项目的根组件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello React Router<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>BrowserRouter<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>BrowserRouter<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"路径匹配器\" style=\"position:relative;\"><a href=\"#%E8%B7%AF%E5%BE%84%E5%8C%B9%E9%85%8D%E5%99%A8\" aria-label=\"路径匹配器 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>路径匹配器</h3>\n<p>react-router-dom 提供了两个路由匹配组件：Switch 和 Route。当<code class=\"language-text\">&lt;Switch&gt;</code>被渲染，它会搜索其 children <code class=\"language-text\">&lt;Route&gt;</code>内容找到一个其 path 当前的 URL 匹配。当找到时，它将渲染该对象。 而<code class=\"language-text\">&lt;Route&gt;</code>而忽略所有其他对象。这意味着您应将<code class=\"language-text\">&lt;Route&gt;</code> 的特定性更高（通常情况下代表更长的）放在不那么特定的路径之前。(比如<code class=\"language-text\">/post/aaa/bbb</code>应该放在<code class=\"language-text\">/post/aaa</code>之前，防止 Switch 组件渲染后者对应的组件)</p>\n<blockquote>\n<p>如果没有<code class=\"language-text\">&lt;Route&gt;</code>匹配项，则<code class=\"language-text\">&lt;Switch&gt;</code>渲染器不呈现任何内容</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Switch<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* If the current URL is /about, this route is rendered\n            while the rest are ignored */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/about\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>About <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* Note how these two routes are ordered. The more specific\n            path=\"/contact/:id\" comes before path=\"/contact\" so that\n            route will render when viewing an individual contact */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/contact/:id\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Contact <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/contact\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>AllContacts <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* If none of the previous routes render anything,\n            this route acts as a fallback.\n\n            Important: A route with path=\"/\" will *always* match\n            the URL because all URLs begin with a /. So that's\n            why we put this one last of all */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>注意： <code class=\"language-text\">&lt;Route path&gt;</code> 仅仅代表从路由的开头开始匹配，而不是匹配整个 url。 所以 <code class=\"language-text\">&lt;Route path=&quot;/&quot;&gt;</code>会始终匹配所有的 url。因此，我们通常将其放在<code class=\"language-text\">&lt;Switch&gt;</code>的最后一项。另一种可能的解决方案是使用<code class=\"language-text\">&lt;Route exact path=&quot;/&quot;&gt;</code></p>\n</blockquote>\n<blockquote>\n<p>注：尽管 react-router 支持在<code class=\"language-text\">&lt;Switch&gt;</code>组件之外渲染<code class=\"language-text\">&lt;Route&gt;</code>，在 5.1 版本之后，我们建议您使用 <a href=\"https://reactrouter.com/react-router/web/guides/primary-components/TODO\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">useRouteMatch()</a> hook。并且。我们不建议您渲染没有 path 的<code class=\"language-text\">&lt;Route&gt;</code>，而是使用 hooks 来获得你需要的与路由相关的参数。</p>\n</blockquote>\n<h3 id=\"导航\" style=\"position:relative;\"><a href=\"#%E5%AF%BC%E8%88%AA\" aria-label=\"导航 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导航</h3>\n<p>react-router 提供了<code class=\"language-text\">&lt;Link&gt;</code>组件在 web 应用中提供路由跳转。<code class=\"language-text\">&lt;Link&gt;</code>组件会在你的 dom 中生成一个<code class=\"language-text\">&lt;a&gt;</code>元素。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n<span class=\"token comment\">// &lt;a href=\"/\">Home&lt;/a></span></code></pre></div>\n<p><code class=\"language-text\">&lt;NavLink&gt;</code>是一种特殊的<code class=\"language-text\">&lt;Link&gt;</code>，当他代表的路由正在被渲染是他会获得 active 的 css 类名，</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>NavLink to<span class=\"token operator\">=</span><span class=\"token string\">\"/react\"</span> activeClassName<span class=\"token operator\">=</span><span class=\"token string\">\"hurray\"</span><span class=\"token operator\">></span>\n  React\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavLink<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// When the URL is /react, this renders:</span>\n<span class=\"token comment\">// &lt;a href=\"/react\" className=\"hurray\">React&lt;/a></span>\n\n<span class=\"token comment\">// When it's something else:</span>\n<span class=\"token comment\">// &lt;a href=\"/react\">React&lt;/a></span></code></pre></div>\n<p>当你想要强制路由跳转时，你可以渲染一个<code class=\"language-text\">&lt;Redirect&gt;</code>组件，他会将页面跳转到 to 属性描述的路由中</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Redirect to<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>","timeToRead":4,"frontmatter":{"title":"核心组件"},"tableOfContents":"<ul>\n<li><a href=\"/docs/react-router-dom/%E5%90%91%E5%AF%BC/%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/#%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6\">核心组件</a></li>\n<li><a href=\"/docs/react-router-dom/%E5%90%91%E5%AF%BC/%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/#%E8%B7%AF%E7%94%B1\">路由</a></li>\n<li><a href=\"/docs/react-router-dom/%E5%90%91%E5%AF%BC/%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/#%E8%B7%AF%E5%BE%84%E5%8C%B9%E9%85%8D%E5%99%A8\">路径匹配器</a></li>\n<li><a href=\"/docs/react-router-dom/%E5%90%91%E5%AF%BC/%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6/#%E5%AF%BC%E8%88%AA\">导航</a></li>\n</ul>","lastModified":"2020-10-09T04:07:27.705Z","headings":[{"id":"核心组件","depth":3},{"id":"路由","depth":3},{"id":"路径匹配器","depth":3},{"id":"导航","depth":3}]},"allMarkdownRemark":{"totalCount":41,"edges":[{"node":{"frontmatter":{"title":"快速开始"},"fields":{"slug":"/docs/react-router-dom/向导/快速开始"}}},{"node":{"frontmatter":{"title":"核心组件"},"fields":{"slug":"/docs/react-router-dom/向导/核心组件"}}},{"node":{"frontmatter":{"title":"服务端渲染"},"fields":{"slug":"/docs/react-router-dom/向导/服务端渲染"}}},{"node":{"frontmatter":{"title":"代码分割"},"fields":{"slug":"/docs/react-router-dom/向导/代码分割"}}},{"node":{"frontmatter":{"title":"滚动回溯"},"fields":{"slug":"/docs/react-router-dom/向导/滚动回溯"}}},{"node":{"frontmatter":{"title":"设计理念"},"fields":{"slug":"/docs/react-router-dom/向导/设计理念"}}},{"node":{"frontmatter":{"title":"测试"},"fields":{"slug":"/docs/react-router-dom/向导/测试"}}},{"node":{"frontmatter":{"title":"深度redux整合"},"fields":{"slug":"/docs/react-router-dom/向导/深度redux整合"}}},{"node":{"frontmatter":{"title":"静态路由"},"fields":{"slug":"/docs/react-router-dom/向导/静态路由"}}},{"node":{"frontmatter":{"title":""},"fields":{"slug":"/docs/react-router-dom/"}}},{"node":{"frontmatter":{"title":"基础"},"fields":{"slug":"/docs/react-router-dom/示例/基础"}}},{"node":{"frontmatter":{"title":"配置 URL 参数"},"fields":{"slug":"/docs/react-router-dom/示例/配置-url-参数"}}},{"node":{"frontmatter":{"title":"嵌套路由"},"fields":{"slug":"/docs/react-router-dom/示例/嵌套路由"}}},{"node":{"frontmatter":{"title":"重定向（鉴权）"},"fields":{"slug":"/docs/react-router-dom/示例/重定向（鉴权）"}}},{"node":{"frontmatter":{"title":"自定义 Link"},"fields":{"slug":"/docs/react-router-dom/示例/自定义-link"}}},{"node":{"frontmatter":{"title":"防止过渡动画"},"fields":{"slug":"/docs/react-router-dom/示例/防止过渡动画"}}},{"node":{"frontmatter":{"title":"404 页面"},"fields":{"slug":"/docs/react-router-dom/示例/404-页面"}}},{"node":{"frontmatter":{"title":"侧边栏"},"fields":{"slug":"/docs/react-router-dom/示例/侧边栏"}}},{"node":{"frontmatter":{"title":"动画过渡"},"fields":{"slug":"/docs/react-router-dom/示例/动画过渡"}}},{"node":{"frontmatter":{"title":"路由配置"},"fields":{"slug":"/docs/react-router-dom/示例/路由配置"}}},{"node":{"frontmatter":{"title":"弹窗路由（Modal）"},"fields":{"slug":"/docs/react-router-dom/示例/弹窗路由（-modal）"}}},{"node":{"frontmatter":{"title":"StaticRouter 上下文"},"fields":{"slug":"/docs/react-router-dom/示例/static-router-上下文"}}},{"node":{"frontmatter":{"title":"递归路径"},"fields":{"slug":"/docs/react-router-dom/示例/递归路径"}}},{"node":{"frontmatter":{"title":"页面查询参数"},"fields":{"slug":"/docs/react-router-dom/示例/页面查询参数"}}},{"node":{"frontmatter":{"title":"Hooks"},"fields":{"slug":"/docs/react-router-dom/API/hooks"}}},{"node":{"frontmatter":{"title":"<BrowserRouter>"},"fields":{"slug":"/docs/react-router-dom/API/browser-router"}}},{"node":{"frontmatter":{"title":"<HashRouter>"},"fields":{"slug":"/docs/react-router-dom/API/hash-router"}}},{"node":{"frontmatter":{"title":"<Link>"},"fields":{"slug":"/docs/react-router-dom/API/link"}}},{"node":{"frontmatter":{"title":"<NavLink>"},"fields":{"slug":"/docs/react-router-dom/API/nav-link"}}},{"node":{"frontmatter":{"title":"<Prompt>"},"fields":{"slug":"/docs/react-router-dom/API/prompt"}}},{"node":{"frontmatter":{"title":"<Redirect>"},"fields":{"slug":"/docs/react-router-dom/API/redirect"}}},{"node":{"frontmatter":{"title":"<MemoryRouter>"},"fields":{"slug":"/docs/react-router-dom/API/memory-router"}}},{"node":{"frontmatter":{"title":"<Route>"},"fields":{"slug":"/docs/react-router-dom/API/route"}}},{"node":{"frontmatter":{"title":"<StaticRouter>"},"fields":{"slug":"/docs/react-router-dom/API/static-router"}}},{"node":{"frontmatter":{"title":"<Router>"},"fields":{"slug":"/docs/react-router-dom/API/router"}}},{"node":{"frontmatter":{"title":"<Switch>"},"fields":{"slug":"/docs/react-router-dom/API/switch"}}},{"node":{"frontmatter":{"title":"history"},"fields":{"slug":"/docs/react-router-dom/API/history"}}},{"node":{"frontmatter":{"title":"location"},"fields":{"slug":"/docs/react-router-dom/API/location"}}},{"node":{"frontmatter":{"title":"match"},"fields":{"slug":"/docs/react-router-dom/API/match"}}},{"node":{"frontmatter":{"title":"matchPath"},"fields":{"slug":"/docs/react-router-dom/API/match-path"}}},{"node":{"frontmatter":{"title":"withRouter"},"fields":{"slug":"/docs/react-router-dom/API/with-router"}}}]}},"pageContext":{"package":"react-router-dom","slug":"/docs/react-router-dom/向导/核心组件","prev":{"node":{"fileAbsolutePath":"/Users/owenwang/Documents/javascript/serializedowen.github.io/docs/react-router-dom/向导/快速开始.md","sourceType":"docs","fields":{"package":"react-router-dom","slug":"/docs/react-router-dom/向导/快速开始"},"frontmatter":{"title":"快速开始","category":"docs"}}},"next":{"node":{"fileAbsolutePath":"/Users/owenwang/Documents/javascript/serializedowen.github.io/docs/react-router-dom/向导/服务端渲染.md","sourceType":"docs","fields":{"package":"react-router-dom","slug":"/docs/react-router-dom/向导/服务端渲染"},"frontmatter":{"title":"服务端渲染","category":"docs"}}},"layout":"docs"}},"staticQueryHashes":["1124436713","4274079806"]}