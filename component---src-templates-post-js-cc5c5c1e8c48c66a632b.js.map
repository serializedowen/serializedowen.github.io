{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/layouts/withENLayout.js","webpack:///./src/lang/en.js"],"names":["func","Title","styled","h1","PostContent","div","Post","props","state","progress","componentDidMount","setTimeout","height","document","body","clientHeight","innerHeight","window","console","log","setState","Number","scrollY","addEventListener","componentWillUnmount","this","editor","removeEventListener","render","pageContext","slug","prev","next","postNode","data","markdownRemark","post","frontmatter","postPath","postSEO","title","config","siteTitle","to","id","date","timeToRead","kebabCase","category","className","dangerouslySetInnerHTML","__html","html","Component","withENLayout","defaultProps","PropTypes","shape","postQuery","i18nMessages","messages","module","exports","selectLanguage","greeting","categories","contact","readTime","blog","docs","mainPage","copyrights"],"mappings":"0OA6BIA,E,2LATEC,EAAQC,IAAOC,GAAV,8DAAGD,CAAH,yBAILE,EAAcF,IAAOG,IAAV,oEAAGH,CAAH,mCAOXI,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,SAAU,GAFR,E,4CAKnBC,kBAAA,WAAqB,IAAD,OAQlBC,YAAW,WACT,IAAMC,EAASC,SAASC,KAAKC,aACrBC,EAAgBC,OAAhBD,YAERE,QAAQC,IAAIP,EAAQI,GACpBhB,EAAO,WACL,EAAKoB,SAAS,CACZX,SAAUY,OAAyB,IAAjBJ,OAAOK,SAAkBV,EAASI,OAGxDC,OAAOM,iBAAiB,SAAUvB,KACjC,M,EAGLwB,qBAAA,WACEC,KAAKC,OAAS,KACd1B,GAAQiB,OAAOU,oBAAoB,SAAU3B,I,EAG/C4B,OAAA,WAAU,IAAD,EAIHH,KAAKlB,MAJF,IAELsB,YAAeC,EAFV,EAEUA,KAAMC,EAFhB,EAEgBA,KAAMC,EAFtB,EAEsBA,KACHC,EAHnB,EAGLC,KAAQC,eAGF1B,EAAagB,KAAKjB,MAAlBC,SACF2B,EAAOH,EAASI,YACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAa5B,SAAUA,IACvB,kBAAC,IAAD,CAAK6B,SAAUR,EAAMG,SAAUA,EAAUM,SAAO,IAChD,kBAAC,IAAD,CAAQC,MAAUJ,EAAKI,MAAV,MAAqBC,IAAOC,YACzC,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KAAKF,IAAOC,YAEvB,kBAAC,IAAD,KACE,kBAACzC,EAAD,KAAQmC,EAAKI,OACb,yBAAKI,GAAG,mBACR,kBAAC,IAAD,KACGR,EAAKS,KADR,MACuBZ,EAASa,WADhC,iBACgE,IAC9D,kBAAC,OAAD,CAAMH,GAAE,eAAiBI,IAAUX,EAAKY,WACrCZ,EAAKY,WAGV,kBAAC5C,EAAD,CACE6C,UAAU,WACVC,wBAAyB,CAAEC,OAAQlB,EAASmB,QAE9C,kBAAC,IAAD,CAAUrB,KAAMA,EAAMC,KAAMA,O,GA9DnBqB,aAsEJC,sBAAahD,GAa5BA,EAAKiD,aAAe,CAClB1B,YAAa2B,IAAUC,MAAM,CAC3BzB,KAAM,KACND,KAAM,QAIH,IAAM2B,EAAS,Y,kCCzHtB,0DAUe,aAAAL,GAAS,OAAI,SAAA9C,GAC1B,OACE,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBoD,aAAcC,MAC/B,kBAACP,EAAc9C,O,mBCbrBsD,EAAOC,QAAU,CACfC,eAAgB,uBAChBC,SAAU,QACVC,WAAY,aACZC,QAAS,UACTC,SAAU,kBACVC,KAAM,OACNC,KAAM,OACNC,SAAU,OACVC,WAAY","file":"component---src-templates-post-js-cc5c5c1e8c48c66a632b.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport kebabCase from 'lodash/kebabCase'\nimport {\n  ProgressBar,\n  Wrapper,\n  Header,\n  Subline,\n  SEO,\n  PrevNext,\n  Content\n} from 'components'\nimport config from '../../config/SiteConfig'\nimport '../utils/medium-editor.css'\nimport 'medium-editor/dist/css/medium-editor.min.css'\nimport withENLayout from 'src/layouts/withENLayout'\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`\n\nconst PostContent = styled.div`\n  outline: none;\n  margin-top: 4rem;\n`\n\nlet func\n\nclass Post extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { progress: 0 }\n  }\n\n  componentDidMount() {\n    // using import cause failure at production build\n    /* eslint global-require:0 */\n    // const MediumEditor = require('medium-editor')\n    // this.editor = new MediumEditor('.editable', {\n    //   elementsContainer: document.querySelector('#medium-toolbar')\n    // })\n\n    setTimeout(() => {\n      const height = document.body.clientHeight\n      const { innerHeight } = window\n\n      console.log(height, innerHeight)\n      func = () => {\n        this.setState({\n          progress: Number((window.scrollY * 100) / (height - innerHeight))\n        })\n      }\n      window.addEventListener('scroll', func)\n    }, 500)\n  }\n\n  componentWillUnmount() {\n    this.editor = null\n    func && window.removeEventListener('scroll', func)\n  }\n\n  render() {\n    const {\n      pageContext: { slug, prev, next },\n      data: { markdownRemark: postNode }\n    } = this.props\n\n    const { progress } = this.state\n    const post = postNode.frontmatter\n    return (\n      <Wrapper>\n        <ProgressBar progress={progress}></ProgressBar>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <Helmet title={`${post.title} | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <Title>{post.title}</Title>\n          <div id=\"medium-toolbar\" />\n          <Subline>\n            {post.date} &mdash; {postNode.timeToRead} Min Read &mdash; In{' '}\n            <Link to={`/categories/${kebabCase(post.category)}`}>\n              {post.category}\n            </Link>\n          </Subline>\n          <PostContent\n            className=\"editable\"\n            dangerouslySetInnerHTML={{ __html: postNode.html }}\n          />\n          <PrevNext prev={prev} next={next} />\n        </Content>\n      </Wrapper>\n    )\n  }\n}\n\nexport { Post }\nexport default withENLayout(Post)\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    next: PropTypes.object,\n    prev: PropTypes.object\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired\n  }).isRequired\n}\n\nPost.defaultProps = {\n  pageContext: PropTypes.shape({\n    next: null,\n    prev: null\n  })\n}\n\nexport const postQuery = graphql`\n  query postBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n      }\n      timeToRead\n    }\n  }\n`\n","import React from 'react'\nimport { addLocaleData } from 'react-intl'\nimport messages from '../lang/en'\n// import en from 'react-intl/locale-data/en'\nimport Layout from './index'\n\n// import 'intl/locale-data/jsonp/en';\n\n// addLocaleData(en)\n\nexport default Component => props => {\n  return (\n    <Layout {...props} i18nMessages={messages}>\n      <Component {...props}></Component>\n    </Layout>\n  )\n}\n\n// export default props => <Layout {...props} i18nMessages={messages} />\n","module.exports = {\n  selectLanguage: 'Select your language',\n  greeting: 'Howdy',\n  categories: 'Categories',\n  contact: 'Contact',\n  readTime: '{time} Min Read',\n  blog: 'Blog',\n  docs: 'Docs',\n  mainPage: 'Home',\n  copyrights: '@SerializedOwen 2020. All rights reserved.'\n}\n"],"sourceRoot":""}