{"version":3,"sources":["webpack:///./src/templates/category.js"],"names":["Category","category","pageContext","allMarkdownRemark","data","edges","totalCount","subline","title","config","siteTitle","to","sectionTitle","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","key","postQuery"],"mappings":"4FAAA,4IAkDeA,UApCE,SAAC,GAGX,IAFUC,EAEX,EAFJC,YAAeD,SACPE,EACJ,EADJC,KAAQD,kBAEAE,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,WACTC,EAAaD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEIL,EAFJ,IAIb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQO,MAAUP,EAAL,MAAmBQ,IAAOC,YACvC,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAG,KAAKF,IAAOC,YAEvB,kBAAC,IAAD,KACE,kBAAC,IAAD,mBAAgCT,GAChC,kBAAC,IAAD,CAASW,cAAY,GAClBL,EADH,SACiB,kBAAC,OAAD,CAAMI,GAAG,eAAT,kBADjB,KAGCN,EAAMQ,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CACEN,MAAOM,EAAKC,KAAKC,YAAYR,MAC7BS,KAAMH,EAAKC,KAAKC,YAAYC,KAC5BC,QAASJ,EAAKC,KAAKG,QACnBC,WAAYL,EAAKC,KAAKI,WACtBC,KAAMN,EAAKC,KAAKM,OAAOD,KACvBnB,SAAUa,EAAKC,KAAKC,YAAYf,SAChCqB,IAAKR,EAAKC,KAAKM,OAAOD,aAsB3B,IAAMG,EAAS","file":"component---src-templates-category-js-dfa4994011239f8b0b39.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport {\n  Wrapper,\n  Header,\n  Subline,\n  Article,\n  SectionTitle,\n  Content\n} from 'components'\nimport config from '../../config/SiteConfig'\n\nconst Category = ({\n  pageContext: { category },\n  data: { allMarkdownRemark }\n}) => {\n  const { edges, totalCount } = allMarkdownRemark\n  const subline = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${category}\"`\n\n  return (\n    <Wrapper>\n      <Helmet title={`${category} | ${config.siteTitle}`} />\n      <Header>\n        <Link to=\"/\">{config.siteTitle}</Link>\n      </Header>\n      <Content>\n        <SectionTitle>Category &ndash; {category}</SectionTitle>\n        <Subline sectionTitle>\n          {subline} (See <Link to=\"/categories\">all categories</Link>)\n        </Subline>\n        {edges.map(post => (\n          <Article\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            slug={post.node.fields.slug}\n            category={post.node.frontmatter.category}\n            key={post.node.fields.slug}\n          />\n        ))}\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default Category\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired\n    })\n  }).isRequired\n}\n\nexport const postQuery = graphql`\n  query CategoryPage($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}