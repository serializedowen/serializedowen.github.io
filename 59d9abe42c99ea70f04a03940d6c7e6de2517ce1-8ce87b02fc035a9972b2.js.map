{"version":3,"sources":["webpack:///./node_modules/_core-js@3.7.0@core-js/internals/new-promise-capability.js","webpack:///./node_modules/_core-js@3.7.0@core-js/modules/es.promise.finally.js","webpack:///./node_modules/_core-js@3.7.0@core-js/internals/native-promise-constructor.js","webpack:///./node_modules/_@material-ui_core@4.11.0@@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/types.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/utils.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/config.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/notifyManager.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/queryObserver.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/query.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/queryCache.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/setFocusHandler.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/core/setOnlineHandler.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/reactBatchedUpdates.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/ReactQueryCacheProvider.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/ReactQueryConfigProvider.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/ReactQueryErrorResetBoundary.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/utils.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/useBaseQuery.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/react/useQuery.js","webpack:///./node_modules/_react-query@2.26.3@react-query/es/index.js","webpack:///./node_modules/_core-js@3.7.0@core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/_core-js@3.7.0@core-js/internals/well-known-symbol.js","webpack:///./node_modules/_core-js@3.7.0@core-js/internals/native-symbol.js","webpack:///./node_modules/_core-js@3.7.0@core-js/internals/species-constructor.js","webpack:///./node_modules/_core-js@3.7.0@core-js/internals/promise-resolve.js"],"names":["aFunction","PromiseCapability","C","resolve","reject","this","promise","$$resolve","$$reject","undefined","TypeError","module","exports","f","$","IS_PURE","NativePromise","fails","getBuiltIn","speciesConstructor","promiseResolve","redefine","target","proto","real","forced","prototype","call","then","onFinally","isFunction","x","e","global","Promise","CardActions","props","ref","_props$disableSpacing","disableSpacing","classes","className","other","root","spacing","display","alignItems","padding","marginLeft","name","QueryStatus","CancelledError","silent","isServer","window","noop","Console","console","error","warn","log","functionalUpdate","updater","input","stableStringifyReplacer","_key","value","Error","isPlainObject","Object","keys","sort","reduce","result","key","isValidTimeout","Infinity","isDocumentVisible","document","includes","visibilityState","isOnline","navigator","onLine","getQueryArgs","arg1","arg2","arg3","arg4","queryKey","queryFn","config","options","o","hasObjectPrototype","ctor","constructor","prot","hasOwnProperty","toString","isCancelledError","getStatusProps","status","isLoading","Loading","isSuccess","Success","isError","isIdle","Idle","createSetHandler","fn","removePreviousHandler","callback","scheduleMicrotask","catch","setTimeout","DEFAULT_CONFIG","queries","cacheTime","enabled","notifyOnStatusChange","queryKeySerializerFn","arrayQueryKey","Array","isArray","queryHash","JSON","stringify","parse","_unused","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","retry","retryDelay","attemptIndex","Math","min","pow","staleTime","structuralSharing","queryCache","contextConfig","queryCacheConfig","getDefaultConfig","resolvedConfig","shared","notifyManager","NotifyManager","queue","transactions","_proto","batch","flush","schedule","notify","push","length","forEach","QueryObserver","isStale","initialUpdateCount","remove","bind","refetch","fetchMore","unsubscribe","updateQuery","subscribe","listener","currentQuery","subscribeObserver","forceFetchOnMount","fetch","optionalFetch","updateTimers","clearTimers","unsubscribeObserver","updateConfig","prevConfig","prevQuery","Boolean","isResolvedQueryConfig","getResolvedQueryConfig","updateStaleTimeout","refetchInterval","updateRefetchInterval","getCurrentQuery","getCurrentResult","currentResult","clear","fetchMoreVariable","_DEFAULT_CONFIG$queri","data","suspense","isFetched","observers","_this","clearStaleTimeout","timeElapsed","Date","now","updatedAt","timeUntilStale","timeout","max","staleTimeoutId","updateResult","globalListeners","_this2","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","clearTimeout","clearInterval","_this$previousQueryRe","state","isPreviousData","isPlaceholderData","keepPreviousData","isInitialData","previousQueryResult","placeholderData","canFetchMore","failureCount","updateCount","isFetchedAfterMount","isFetching","isFetchingMore","query","getQueryByHash","createQuery","initialStale","isStaleByTime","onQueryUpdate","action","type","prevResult","notifyOptions","onSuccess","onError","onSettled","notifyGlobalListeners","_empty","ActionType","_awaitIgnored","direct","_invoke","body","_await","_catch","recover","_async","args","i","arguments","apply","Query","initialData","hasMorePages","isInvalidated","getDefaultState","scheduleGc","dispatch","_action$updatedAt","throwInErrorBoundary","queryReducer","observer","clearGcTimeout","gcTimeout","cancel","cancelFetch","continue","_this$continueFetch","continueFetch","clearTimersObservers","setData","_this$config$isDataEq","_this$config","prevData","replaceEqualDeep","a","b","array","aSize","bItems","bSize","copy","equalItems","isDataEqual","removeQuery","destroy","isActive","some","onInteraction","staleObserver","find","filter","isTransportCancelable","invalidate","throwOnError","previous","_exit2","_this4","_result2","queryFnParamsFilter","params","infinite","startInfiniteFetch","_this4$startInfiniteF","startFetch","_this4$startFetch","_options","tryFetchData","_ref","prevPages","fetchPage","pages","prepend","cursor","lastPage","getLastPage","getFetchMore","concat","page","_this5","outerResolve","outerReject","continueLoop","cancelTransport","resolved","done","run","promiseOrValue","_promiseOrValue","continueResolve","QueryCache","queriesArray","getQueries","acc","q","defaultConfig","removeQueries","predicate","predicateFn","anyKey","exact","active","stale","deepIncludes","getQuery","getQueryData","_this$getQuery","_this3","cancelQueries","invalidateQueries","_ref2","_ref2$refetchActive","refetchActive","_ref2$refetchInactive","refetchInactive","refetchOptions","refetchQueries","promises","all","resetErrorBoundaries","buildQuery","frozen","fetchQuery","_getQueryArgs","prefetchQuery","_getQueryArgs2","force","watchQuery","_getQueryArgs3","setQueryData","defaultQueryCache","queryCaches","onVisibilityOrOnlineChange","setFocusHandler","handleFocus","_window","addEventListener","removeEventListener","setOnlineHandler","handleOnline","unstable_batchedUpdates","queryCacheContext","createContext","useContext","configContext","useContextConfig","createValue","_isReset","clearReset","reset","isReset","context","useIsMounted","mountedRef","useRef","isMounted","useCallback","current","useBaseQuery","rerender","useReducer","c","cache","errorResetBoundary","observerRef","firstRender","useEffect","useErrorBoundary","finally","useQuery","NATIVE_SYMBOL","Symbol","sham","iterator","has","uid","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","getOwnPropertySymbols","String","anObject","SPECIES","wellKnownSymbol","O","defaultConstructor","S","isObject","newPromiseCapability","promiseCapability"],"mappings":"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","file":"59d9abe42c99ea70f04a03940d6c7e6de2517ce1-8ce87b02fc035a9972b2.js","sourcesContent":["'use strict';\n\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}; // 25.4.1.5 NewPromiseCapability(C)\n\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};","'use strict';\n\nrequire(\"core-js/modules/es.promise.finally\");\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar NativePromise = require('../internals/native-promise-constructor');\n\nvar fails = require('../internals/fails');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar promiseResolve = require('../internals/promise-resolve');\n\nvar redefine = require('../internals/redefine'); // Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\n\n\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({\n    then: function then() {\n      /* empty */\n    }\n  }, function () {\n    /* empty */\n  });\n}); // `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n\n$({\n  target: 'Promise',\n  proto: true,\n  real: true,\n  forced: NON_GENERIC\n}, {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n}); // patch native Promise.prototype for native async functions\n\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}","var global = require('../internals/global');\n\nmodule.exports = global.Promise;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","export var QueryStatus;\n\n(function (QueryStatus) {\n  QueryStatus[\"Idle\"] = \"idle\";\n  QueryStatus[\"Loading\"] = \"loading\";\n  QueryStatus[\"Error\"] = \"error\";\n  QueryStatus[\"Success\"] = \"success\";\n})(QueryStatus || (QueryStatus = {}));","import \"core-js/modules/es.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { QueryStatus } from './types'; // TYPES\n\nexport var CancelledError = function CancelledError(silent) {\n  this.silent = silent;\n}; // UTILS\n\nvar _uid = 0;\nexport function uid() {\n  return _uid++;\n}\nexport var isServer = typeof window === 'undefined';\nexport function noop() {\n  return undefined;\n}\nexport var Console = console || {\n  error: noop,\n  warn: noop,\n  log: noop\n};\nexport function setConsole(c) {\n  Console = c;\n}\nexport function functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\n\nfunction stableStringifyReplacer(_key, value) {\n  if (typeof value === 'function') {\n    throw new Error();\n  }\n\n  if (isPlainObject(value)) {\n    return Object.keys(value).sort().reduce(function (result, key) {\n      result[key] = value[key];\n      return result;\n    }, {});\n  }\n\n  return value;\n}\n\nexport function stableStringify(value) {\n  return JSON.stringify(value, stableStringifyReplacer);\n}\nexport function deepIncludes(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (typeof a === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !deepIncludes(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\nexport function isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nexport function isDocumentVisible() {\n  // document global can be unavailable in react native\n  if (typeof document === 'undefined') {\n    return true;\n  }\n\n  return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n}\nexport function isOnline() {\n  return navigator.onLine === undefined || navigator.onLine;\n}\nexport function getQueryArgs(arg1, arg2, arg3, arg4) {\n  var queryKey;\n  var queryFn;\n  var config;\n  var options;\n\n  if (isPlainObject(arg1)) {\n    queryKey = arg1.queryKey;\n    queryFn = arg1.queryFn;\n    config = arg1.config;\n    options = arg2;\n  } else if (isPlainObject(arg2)) {\n    queryKey = arg1;\n    config = arg2;\n    options = arg3;\n  } else {\n    queryKey = arg1;\n    queryFn = arg2;\n    config = arg3;\n    options = arg4;\n  }\n\n  config = config || {};\n\n  if (queryFn) {\n    config = _extends({}, config, {\n      queryFn: queryFn\n    });\n  }\n\n  return [queryKey, config, options];\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nexport function replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nexport function isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport function isError(value) {\n  return value instanceof Error;\n}\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nexport function sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\nexport function getStatusProps(status) {\n  return {\n    status: status,\n    isLoading: status === QueryStatus.Loading,\n    isSuccess: status === QueryStatus.Success,\n    isError: status === QueryStatus.Error,\n    isIdle: status === QueryStatus.Idle\n  };\n}\nexport function createSetHandler(fn) {\n  var removePreviousHandler;\n  return function (callback) {\n    // Unsub the old handler\n    if (removePreviousHandler) {\n      removePreviousHandler();\n    } // Sub the new handler\n\n\n    removePreviousHandler = callback(fn);\n  };\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nexport function scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n} // Default to a dummy \"batch\" implementation that just runs the callback\n\nvar batchedUpdates = function batchedUpdates(callback) {\n  callback();\n}; // Allow injecting another batching function later\n\n\nexport function setBatchedUpdates(fn) {\n  batchedUpdates = fn;\n} // Supply a getter just to skip dealing with ESM bindings\n\nexport function getBatchedUpdates() {\n  return batchedUpdates;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stableStringify } from './utils'; // CONFIG\n\nexport var defaultQueryKeySerializerFn = function defaultQueryKeySerializerFn(queryKey) {\n  try {\n    var arrayQueryKey = Array.isArray(queryKey) ? queryKey : [queryKey];\n    var queryHash = stableStringify(arrayQueryKey);\n    arrayQueryKey = JSON.parse(queryHash);\n    return [queryHash, arrayQueryKey];\n  } catch (_unused) {\n    throw new Error('A valid query key is required!');\n  }\n};\n/**\n * Config merging strategy\n *\n * When using hooks the config will be merged in the following order:\n *\n * 1. These defaults.\n * 2. Defaults from the hook query cache.\n * 3. Combined defaults from any config providers in the tree.\n * 4. Query/mutation config provided to the hook.\n *\n * When using a query cache directly the config will be merged in the following order:\n *\n * 1. These defaults.\n * 2. Defaults from the query cache.\n * 3. Query/mutation config provided to the query cache method.\n */\n\nexport var DEFAULT_CONFIG = {\n  queries: {\n    cacheTime: 5 * 60 * 1000,\n    enabled: true,\n    notifyOnStatusChange: true,\n    queryFn: function queryFn() {\n      return Promise.reject();\n    },\n    queryKeySerializerFn: defaultQueryKeySerializerFn,\n    refetchOnMount: true,\n    refetchOnReconnect: true,\n    refetchOnWindowFocus: true,\n    retry: 3,\n    retryDelay: function retryDelay(attemptIndex) {\n      return Math.min(1000 * Math.pow(2, attemptIndex), 30000);\n    },\n    staleTime: 0,\n    structuralSharing: true\n  }\n};\nexport function getDefaultReactQueryConfig() {\n  return {\n    queries: _extends({}, DEFAULT_CONFIG.queries),\n    mutations: _extends({}, DEFAULT_CONFIG.mutations)\n  };\n}\nexport function mergeReactQueryConfigs(a, b) {\n  return {\n    shared: _extends({}, a.shared, b.shared),\n    queries: _extends({}, a.queries, b.queries),\n    mutations: _extends({}, a.mutations, b.mutations)\n  };\n}\nexport function getResolvedQueryConfig(queryCache, queryKey, contextConfig, config) {\n  var queryCacheConfig = queryCache.getDefaultConfig();\n\n  var resolvedConfig = _extends({}, DEFAULT_CONFIG.queries, queryCacheConfig == null ? void 0 : queryCacheConfig.shared, queryCacheConfig == null ? void 0 : queryCacheConfig.queries, contextConfig == null ? void 0 : contextConfig.shared, contextConfig == null ? void 0 : contextConfig.queries, config);\n\n  var result = resolvedConfig.queryKeySerializerFn(queryKey);\n  resolvedConfig.queryCache = queryCache;\n  resolvedConfig.queryHash = result[0];\n  resolvedConfig.queryKey = result[1];\n  return resolvedConfig;\n}\nexport function isResolvedQueryConfig(config) {\n  return Boolean(config.queryHash);\n}\nexport function getResolvedMutationConfig(queryCache, contextConfig, config) {\n  var queryCacheConfig = queryCache.getDefaultConfig();\n  return _extends({}, DEFAULT_CONFIG.mutations, queryCacheConfig == null ? void 0 : queryCacheConfig.shared, queryCacheConfig == null ? void 0 : queryCacheConfig.mutations, contextConfig == null ? void 0 : contextConfig.shared, contextConfig == null ? void 0 : contextConfig.mutations, config);\n}","import { getBatchedUpdates, scheduleMicrotask } from './utils'; // TYPES\n// CLASS\n\nexport var NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    this.transactions++;\n    var result = callback();\n    this.transactions--;\n\n    if (!this.transactions) {\n      this.flush();\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(notify) {\n    if (this.transactions) {\n      this.queue.push(notify);\n    } else {\n      scheduleMicrotask(function () {\n        notify();\n      });\n    }\n  };\n\n  _proto.flush = function flush() {\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      scheduleMicrotask(function () {\n        var batchedUpdates = getBatchedUpdates();\n        batchedUpdates(function () {\n          queue.forEach(function (notify) {\n            notify();\n          });\n        });\n      });\n    }\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nexport var notifyManager = new NotifyManager();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getStatusProps, isDocumentVisible, isServer, isValidTimeout, noop } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryStatus } from './types';\nimport { DEFAULT_CONFIG, isResolvedQueryConfig } from './config';\nexport var QueryObserver = /*#__PURE__*/function () {\n  function QueryObserver(config) {\n    this.config = config;\n    this.isStale = true;\n    this.initialUpdateCount = 0; // Bind exposed methods\n\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n    this.fetchMore = this.fetchMore.bind(this);\n    this.unsubscribe = this.unsubscribe.bind(this); // Subscribe to the query\n\n    this.updateQuery();\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    this.listener = listener || noop;\n    this.currentQuery.subscribeObserver(this);\n\n    if (this.config.enabled && (this.config.forceFetchOnMount || this.config.refetchOnMount === 'always')) {\n      this.fetch();\n    } else {\n      this.optionalFetch();\n    }\n\n    this.updateTimers();\n    return this.unsubscribe;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    this.listener = undefined;\n    this.clearTimers();\n    this.currentQuery.unsubscribeObserver(this);\n  };\n\n  _proto.updateConfig = function updateConfig(config) {\n    var prevConfig = this.config;\n    var prevQuery = this.currentQuery;\n    this.config = isResolvedQueryConfig(config) ? config : this.config.queryCache.getResolvedQueryConfig(this.config.queryKey, config);\n    this.updateQuery(); // Take no further actions if there is no subscriber\n\n    if (!this.listener) {\n      return;\n    } // If we subscribed to a new query, optionally fetch and update refetch\n\n\n    if (this.currentQuery !== prevQuery) {\n      this.optionalFetch();\n      this.updateTimers();\n      return;\n    } // Optionally fetch if the query became enabled\n\n\n    if (config.enabled && !prevConfig.enabled) {\n      this.optionalFetch();\n    } // Update stale interval if needed\n\n\n    if (config.enabled !== prevConfig.enabled || config.staleTime !== prevConfig.staleTime) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (config.enabled !== prevConfig.enabled || config.refetchInterval !== prevConfig.refetchInterval) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  }\n  /**\n   * @deprecated\n   */\n  ;\n\n  _proto.clear = function clear() {\n    this.remove();\n  };\n\n  _proto.remove = function remove() {\n    this.currentQuery.remove();\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.currentQuery.refetch(options, this.config);\n  };\n\n  _proto.fetchMore = function fetchMore(fetchMoreVariable, options) {\n    return this.currentQuery.fetchMore(fetchMoreVariable, options, this.config).catch(noop);\n  };\n\n  _proto.fetch = function fetch() {\n    var _DEFAULT_CONFIG$queri; // Never try to fetch if no query function has been set\n\n\n    if (this.config.queryFn === ((_DEFAULT_CONFIG$queri = DEFAULT_CONFIG.queries) == null ? void 0 : _DEFAULT_CONFIG$queri.queryFn)) {\n      return Promise.resolve(this.currentResult.data);\n    }\n\n    return this.currentQuery.fetch(undefined, this.config).catch(noop);\n  };\n\n  _proto.optionalFetch = function optionalFetch() {\n    if (this.config.enabled && // Only fetch if enabled\n    this.isStale && // Only fetch if stale\n    !(this.config.suspense && this.currentResult.isFetched) && ( // Don't refetch if in suspense mode and the data is already fetched\n    this.config.refetchOnMount || this.currentQuery.observers.length === 1)) {\n      this.fetch();\n    }\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearStaleTimeout();\n\n    if (this.isStale || !isValidTimeout(this.config.staleTime)) {\n      return;\n    }\n\n    var timeElapsed = Date.now() - this.currentResult.updatedAt;\n    var timeUntilStale = this.config.staleTime - timeElapsed + 1;\n    var timeout = Math.max(timeUntilStale, 0);\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this.isStale) {\n        _this.isStale = true;\n\n        _this.updateResult();\n\n        _this.notify({\n          listener: true,\n          globalListeners: true\n        });\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this2 = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearRefetchInterval();\n\n    if (!this.config.enabled || !isValidTimeout(this.config.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this2.config.refetchIntervalInBackground || isDocumentVisible()) {\n        _this2.fetch();\n      }\n    }, this.config.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.updateResult = function updateResult() {\n    var _this$previousQueryRe;\n\n    var state = this.currentQuery.state;\n    var data = state.data,\n        status = state.status,\n        updatedAt = state.updatedAt;\n    var isPreviousData = false;\n    var isPlaceholderData = false; // Keep previous data if needed\n\n    if (this.config.keepPreviousData && state.isInitialData && ((_this$previousQueryRe = this.previousQueryResult) == null ? void 0 : _this$previousQueryRe.isSuccess)) {\n      data = this.previousQueryResult.data;\n      updatedAt = this.previousQueryResult.updatedAt;\n      status = this.previousQueryResult.status;\n      isPreviousData = true;\n    }\n\n    if (status === 'loading' && this.config.placeholderData) {\n      var placeholderData = typeof this.config.placeholderData === 'function' ? this.config.placeholderData() : this.config.placeholderData;\n\n      if (typeof placeholderData !== 'undefined') {\n        status = QueryStatus.Success;\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    this.currentResult = _extends({}, getStatusProps(status), {\n      canFetchMore: state.canFetchMore,\n      clear: this.remove,\n      data: data,\n      error: state.error,\n      failureCount: state.failureCount,\n      fetchMore: this.fetchMore,\n      isFetched: state.updateCount > 0,\n      isFetchedAfterMount: state.updateCount > this.initialUpdateCount,\n      isFetching: state.isFetching,\n      isFetchingMore: state.isFetchingMore,\n      isInitialData: state.isInitialData,\n      isPreviousData: isPreviousData,\n      isPlaceholderData: isPlaceholderData,\n      isStale: this.isStale,\n      refetch: this.refetch,\n      remove: this.remove,\n      updatedAt: updatedAt\n    });\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var config = this.config;\n    var prevQuery = this.currentQuery;\n    var query = config.queryCache.getQueryByHash(config.queryHash);\n\n    if (!query) {\n      query = config.queryCache.createQuery(config);\n    }\n\n    if (query === prevQuery) {\n      return;\n    }\n\n    this.previousQueryResult = this.currentResult;\n    this.currentQuery = query;\n    this.initialUpdateCount = query.state.updateCount; // Update stale state on query switch\n\n    if (query.state.isInitialData) {\n      if (config.keepPreviousData && prevQuery) {\n        this.isStale = true;\n      } else if (typeof config.initialStale === 'function') {\n        this.isStale = config.initialStale();\n      } else if (typeof config.initialStale === 'boolean') {\n        this.isStale = config.initialStale;\n      } else {\n        this.isStale = typeof query.state.data === 'undefined';\n      }\n    } else {\n      this.isStale = query.isStaleByTime(config.staleTime);\n    }\n\n    this.updateResult();\n\n    if (this.listener) {\n      prevQuery == null ? void 0 : prevQuery.unsubscribeObserver(this);\n      this.currentQuery.subscribeObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var config = this.config;\n    var type = action.type; // Update stale state on success, error or invalidation\n\n    if (type === 2 || type === 3 || type === 4) {\n      this.isStale = this.currentQuery.isStaleByTime(config.staleTime);\n    } // Store current result and get new result\n\n\n    var prevResult = this.currentResult;\n    this.updateResult();\n    var currentResult = this.currentResult; // Update timers on success, error or invalidation\n\n    if (type === 2 || type === 3 || type === 4) {\n      this.updateTimers();\n    } // Do not notify if the query was invalidated but the stale state did not changed\n\n\n    if (type === 4 && currentResult.isStale === prevResult.isStale) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var notifyOptions = {};\n\n    if (type === 2) {\n      notifyOptions.onSuccess = true;\n    } else if (type === 3) {\n      notifyOptions.onError = true;\n    }\n\n    if ( // Always notify if notifyOnStatusChange is set\n    config.notifyOnStatusChange || // Otherwise only notify on data or error change\n    currentResult.data !== prevResult.data || currentResult.error !== prevResult.error) {\n      notifyOptions.listener = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.notify = function notify(options) {\n    var config = this.config,\n        currentResult = this.currentResult,\n        currentQuery = this.currentQuery,\n        listener = this.listener;\n    var onSuccess = config.onSuccess,\n        onSettled = config.onSettled,\n        onError = config.onError;\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (options.onSuccess) {\n        if (onSuccess) {\n          notifyManager.schedule(function () {\n            onSuccess(currentResult.data);\n          });\n        }\n\n        if (onSettled) {\n          notifyManager.schedule(function () {\n            onSettled(currentResult.data, null);\n          });\n        }\n      } else if (options.onError) {\n        if (onError) {\n          notifyManager.schedule(function () {\n            onError(currentResult.error);\n          });\n        }\n\n        if (onSettled) {\n          notifyManager.schedule(function () {\n            onSettled(undefined, currentResult.error);\n          });\n        }\n      } // Then trigger the listener\n\n\n      if (options.listener && listener) {\n        notifyManager.schedule(function () {\n          listener(currentResult);\n        });\n      } // Then the global listeners\n\n\n      if (options.globalListeners) {\n        config.queryCache.notifyGlobalListeners(currentQuery);\n      }\n    });\n  };\n\n  return QueryObserver;\n}();","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { CancelledError, Console, functionalUpdate, isCancelable, isCancelledError, isDocumentVisible, isOnline, isServer, isValidTimeout, noop, replaceEqualDeep, sleep } from './utils';\nimport { QueryStatus } from './types';\nimport { QueryObserver } from './queryObserver';\nimport { notifyManager } from './notifyManager'; // TYPES\n\nfunction _empty() {}\n\nvar ActionType = {\n  Failed: 0,\n  Fetch: 1,\n  Success: 2,\n  Error: 3,\n  Invalidate: 4\n}; // CLASS\n\nfunction _awaitIgnored(value, direct) {\n  if (!direct) {\n    return value && value.then ? value.then(_empty) : Promise.resolve();\n  }\n}\n\nfunction _invoke(body, then) {\n  var result = body();\n\n  if (result && result.then) {\n    return result.then(then);\n  }\n\n  return then(result);\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nexport var Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.config = config;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.queryCache = config.queryCache;\n    this.cacheTime = config.cacheTime;\n    this.observers = [];\n    this.state = getDefaultState(config);\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.updateConfig = function updateConfig(config) {\n    this.config = config;\n    this.cacheTime = Math.max(this.cacheTime, config.cacheTime);\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this = this;\n\n    this.state = queryReducer(this.state, action);\n    notifyManager.batch(function () {\n      _this.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this.queryCache.notifyGlobalListeners(_this);\n    });\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this2 = this;\n\n    if (isServer) {\n      return;\n    }\n\n    this.clearGcTimeout();\n\n    if (this.observers.length > 0 || !isValidTimeout(this.cacheTime)) {\n      return;\n    }\n\n    this.gcTimeout = setTimeout(function () {\n      _this2.remove();\n    }, this.cacheTime);\n  };\n\n  _proto.cancel = function cancel(silent) {\n    var promise = this.promise;\n\n    if (promise && this.cancelFetch) {\n      this.cancelFetch(silent);\n      return promise.then(noop).catch(noop);\n    }\n\n    return Promise.resolve(undefined);\n  };\n\n  _proto.continue = function _continue() {\n    var _this$continueFetch;\n\n    (_this$continueFetch = this.continueFetch) == null ? void 0 : _this$continueFetch.call(this);\n  };\n\n  _proto.clearTimersObservers = function clearTimersObservers() {\n    this.observers.forEach(function (observer) {\n      observer.clearTimers();\n    });\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$config$isDataEq, _this$config;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = functionalUpdate(updater, prevData); // Structurally share data between prev and new data if needed\n\n    if (this.config.structuralSharing) {\n      data = replaceEqualDeep(prevData, data);\n    } // Use prev data if an isDataEqual function is defined and returns `true`\n\n\n    if ((_this$config$isDataEq = (_this$config = this.config).isDataEqual) == null ? void 0 : _this$config$isDataEq.call(_this$config, prevData, data)) {\n      data = prevData;\n    } // Try to determine if more data can be fetched\n\n\n    var canFetchMore = hasMorePages(this.config, data); // Set data and mark it as cached\n\n    this.dispatch({\n      type: ActionType.Success,\n      data: data,\n      canFetchMore: canFetchMore,\n      updatedAt: options == null ? void 0 : options.updatedAt\n    });\n  }\n  /**\n   * @deprecated\n   */\n  ;\n\n  _proto.clear = function clear() {\n    Console.warn('react-query: clear() has been deprecated, please use remove() instead');\n    this.remove();\n  };\n\n  _proto.remove = function remove() {\n    this.queryCache.removeQuery(this);\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.clearTimersObservers();\n    this.cancel();\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.config.enabled;\n    });\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || this.state.status !== QueryStatus.Success || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || this.state.status !== QueryStatus.Success || this.state.updatedAt + staleTime <= Date.now();\n  };\n\n  _proto.onInteraction = function onInteraction(type) {\n    // Execute the first observer which is enabled,\n    // stale and wants to refetch on this interaction.\n    var staleObserver = this.observers.find(function (observer) {\n      var config = observer.config;\n\n      var _observer$getCurrentR = observer.getCurrentResult(),\n          isStale = _observer$getCurrentR.isStale;\n\n      return config.enabled && (type === 'focus' && (config.refetchOnWindowFocus === 'always' || config.refetchOnWindowFocus && isStale) || type === 'online' && (config.refetchOnReconnect === 'always' || config.refetchOnReconnect && isStale));\n    });\n\n    if (staleObserver) {\n      staleObserver.fetch();\n    } // Continue any paused fetch\n\n\n    this.continue();\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.subscribe = function subscribe(listener) {\n    var observer = new QueryObserver(this.config);\n    observer.subscribe(listener);\n    return observer;\n  };\n\n  _proto.subscribeObserver = function subscribeObserver(observer) {\n    this.observers.push(observer); // Stop the query from being garbage collected\n\n    this.clearGcTimeout();\n  };\n\n  _proto.unsubscribeObserver = function unsubscribeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n\n    if (!this.observers.length) {\n      // If the transport layer does not support cancellation\n      // we'll let the query continue so the result can be cached\n      if (this.isTransportCancelable) {\n        this.cancel();\n      }\n\n      this.scheduleGc();\n    }\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: ActionType.Invalidate\n      });\n    }\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.refetch = function refetch(options, config) {\n    var promise = this.fetch(undefined, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n  /**\n   * @deprectated\n   */\n  ;\n\n  _proto.fetchMore = function fetchMore(fetchMoreVariable, options, config) {\n    return this.fetch({\n      fetchMore: {\n        fetchMoreVariable: fetchMoreVariable,\n        previous: (options == null ? void 0 : options.previous) || false\n      }\n    }, config);\n  };\n\n  _proto.fetch = function fetch(options, config) {\n    try {\n      var _exit2 = false;\n\n      var _this4 = this;\n\n      return _invoke(function () {\n        if (_this4.promise) {\n          return function () {\n            if ((options == null ? void 0 : options.fetchMore) && _this4.state.data) {\n              // Silently cancel current fetch if the user wants to fetch more\n              return _awaitIgnored(_this4.cancel(true));\n            } else {\n              // Return current promise if we are already fetching\n              _exit2 = true;\n              return _this4.promise;\n            }\n          }();\n        }\n      }, function (_result2) {\n        if (_exit2) return _result2; // Update config if passed, otherwise the config from the last execution is used\n\n        if (config) {\n          _this4.updateConfig(config);\n        }\n\n        config = _this4.config; // Get the query function params\n\n        var filter = config.queryFnParamsFilter;\n        var params = filter ? filter(_this4.queryKey) : _this4.queryKey;\n        _this4.promise = _async(function () {\n          return _catch(function () {\n            var data;\n            return _invoke(function () {\n              if (config.infinite) {\n                return _await(_this4.startInfiniteFetch(config, params, options), function (_this4$startInfiniteF) {\n                  data = _this4$startInfiniteF;\n                });\n              } else {\n                return _await(_this4.startFetch(config, params, options), function (_this4$startFetch) {\n                  data = _this4$startFetch;\n                });\n              }\n            }, function () {\n              // Set success state\n              _this4.setData(data); // Cleanup\n\n\n              delete _this4.promise; // Return data\n\n              return data;\n            });\n          }, function (error) {\n            // Set error state if needed\n            if (!(isCancelledError(error) && error.silent)) {\n              _this4.dispatch({\n                type: ActionType.Error,\n                error: error\n              });\n            } // Log error\n\n\n            if (!isCancelledError(error)) {\n              Console.error(error);\n            } // Cleanup\n\n\n            delete _this4.promise; // Propagate error\n\n            throw error;\n          });\n        })();\n        return _this4.promise;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.startFetch = function startFetch(config, params, _options) {\n    // Create function to fetch the data\n    var fetchData = function fetchData() {\n      return config.queryFn.apply(config, params);\n    }; // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching) {\n      this.dispatch({\n        type: ActionType.Fetch\n      });\n    } // Try to fetch the data\n\n\n    return this.tryFetchData(config, fetchData);\n  };\n\n  _proto.startInfiniteFetch = function startInfiniteFetch(config, params, options) {\n    var fetchMore = options == null ? void 0 : options.fetchMore;\n\n    var _ref = fetchMore || {},\n        previous = _ref.previous,\n        fetchMoreVariable = _ref.fetchMoreVariable;\n\n    var isFetchingMore = fetchMore ? previous ? 'previous' : 'next' : false;\n    var prevPages = this.state.data || []; // Create function to fetch a page\n\n    var fetchPage = _async(function (pages, prepend, cursor) {\n      var lastPage = getLastPage(pages, prepend);\n\n      if (typeof cursor === 'undefined' && typeof lastPage !== 'undefined' && config.getFetchMore) {\n        cursor = config.getFetchMore(lastPage, pages);\n      }\n\n      return !Boolean(cursor) && typeof lastPage !== 'undefined' ? pages : _await(config.queryFn.apply(config, params.concat([cursor])), function (page) {\n        return prepend ? [page].concat(pages) : [].concat(pages, [page]);\n      });\n    }); // Create function to fetch the data\n\n\n    var fetchData = function fetchData() {\n      if (isFetchingMore) {\n        return fetchPage(prevPages, previous, fetchMoreVariable);\n      } else if (!prevPages.length) {\n        return fetchPage([]);\n      } else {\n        var promise = fetchPage([]);\n\n        for (var i = 1; i < prevPages.length; i++) {\n          promise = promise.then(fetchPage);\n        }\n\n        return promise;\n      }\n    }; // Set to fetching state if not already in it\n\n\n    if (!this.state.isFetching || this.state.isFetchingMore !== isFetchingMore) {\n      this.dispatch({\n        type: ActionType.Fetch,\n        isFetchingMore: isFetchingMore\n      });\n    } // Try to get the data\n\n\n    return this.tryFetchData(config, fetchData);\n  };\n\n  _proto.tryFetchData = function tryFetchData(config, fn) {\n    var _this5 = this;\n\n    return new Promise(function (outerResolve, outerReject) {\n      var resolved = false;\n      var continueLoop;\n      var cancelTransport;\n\n      var done = function done() {\n        resolved = true;\n        delete _this5.cancelFetch;\n        delete _this5.continueFetch;\n        delete _this5.isTransportCancelable; // End loop if currently paused\n\n        continueLoop == null ? void 0 : continueLoop();\n      };\n\n      var resolve = function resolve(value) {\n        done();\n        outerResolve(value);\n      };\n\n      var reject = function reject(value) {\n        done();\n        outerReject(value);\n      }; // Create callback to cancel this fetch\n\n\n      _this5.cancelFetch = function (silent) {\n        reject(new CancelledError(silent));\n        cancelTransport == null ? void 0 : cancelTransport();\n      }; // Create callback to continue this fetch\n\n\n      _this5.continueFetch = function () {\n        continueLoop == null ? void 0 : continueLoop();\n      }; // Create loop function\n\n\n      var run = _async(function () {\n        return _catch(function () {\n          // Execute query\n          var promiseOrValue = fn(); // Check if the transport layer support cancellation\n\n          if (isCancelable(promiseOrValue)) {\n            cancelTransport = function cancelTransport() {\n              try {\n                promiseOrValue.cancel();\n              } catch (_unused) {}\n            };\n\n            _this5.isTransportCancelable = true;\n          } // Await data\n\n\n          return _await(promiseOrValue, function (_promiseOrValue) {\n            resolve(_promiseOrValue);\n          });\n        }, function (error) {\n          // Stop if the fetch is already resolved\n          if (resolved) {\n            return;\n          } // Do we need to retry the request?\n\n\n          var failureCount = _this5.state.failureCount;\n          var retry = config.retry,\n              retryDelay = config.retryDelay;\n          var shouldRetry = retry === true || failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n          if (!shouldRetry) {\n            // We are done if the query does not need to be retried\n            reject(error);\n            return;\n          } // Increase the failureCount\n\n\n          _this5.dispatch({\n            type: ActionType.Failed\n          }); // Delay\n\n\n          return _await(sleep(functionalUpdate(retryDelay, failureCount) || 0), function () {\n            // Pause retry if the document is not visible or when the device is offline\n            return _invoke(function () {\n              if (!isDocumentVisible() || !isOnline()) {\n                return _awaitIgnored(new Promise(function (continueResolve) {\n                  continueLoop = continueResolve;\n                }));\n              }\n            }, function () {\n              if (!resolved) {\n                run();\n              }\n            }); // Try again if not resolved yet\n          });\n        });\n      }); // Start loop\n\n\n      run();\n    });\n  };\n\n  return Query;\n}();\n\nfunction getLastPage(pages, previous) {\n  return previous ? pages[0] : pages[pages.length - 1];\n}\n\nfunction hasMorePages(config, pages, previous) {\n  if (config.infinite && config.getFetchMore && Array.isArray(pages)) {\n    return Boolean(config.getFetchMore(getLastPage(pages, previous), pages));\n  }\n}\n\nfunction getDefaultState(config) {\n  var data = typeof config.initialData === 'function' ? config.initialData() : config.initialData;\n  var status = typeof data !== 'undefined' ? QueryStatus.Success : config.enabled ? QueryStatus.Loading : QueryStatus.Idle;\n  return {\n    canFetchMore: hasMorePages(config, data),\n    data: data,\n    error: null,\n    failureCount: 0,\n    isFetching: status === QueryStatus.Loading,\n    isFetchingMore: false,\n    isInitialData: true,\n    isInvalidated: false,\n    status: status,\n    updateCount: 0,\n    updatedAt: Date.now()\n  };\n}\n\nexport function queryReducer(state, action) {\n  var _action$updatedAt;\n\n  switch (action.type) {\n    case ActionType.Failed:\n      return _extends({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case ActionType.Fetch:\n      return _extends({}, state, {\n        failureCount: 0,\n        isFetching: true,\n        isFetchingMore: action.isFetchingMore || false,\n        status: typeof state.data !== 'undefined' ? QueryStatus.Success : QueryStatus.Loading\n      });\n\n    case ActionType.Success:\n      return _extends({}, state, {\n        canFetchMore: action.canFetchMore,\n        data: action.data,\n        error: null,\n        failureCount: 0,\n        isFetching: false,\n        isFetchingMore: false,\n        isInitialData: false,\n        isInvalidated: false,\n        status: QueryStatus.Success,\n        updateCount: state.updateCount + 1,\n        updatedAt: (_action$updatedAt = action.updatedAt) != null ? _action$updatedAt : Date.now()\n      });\n\n    case ActionType.Error:\n      return _extends({}, state, {\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isFetching: false,\n        isFetchingMore: false,\n        status: QueryStatus.Error,\n        throwInErrorBoundary: true,\n        updateCount: state.updateCount + 1\n      });\n\n    case ActionType.Invalidate:\n      return _extends({}, state, {\n        isInvalidated: true\n      });\n\n    default:\n      return state;\n  }\n}","import \"core-js/modules/es.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { deepIncludes, getQueryArgs, isDocumentVisible, isOnline, isPlainObject, isServer, noop } from './utils';\nimport { getResolvedQueryConfig as _getResolvedQueryConfig } from './config';\nimport { Query } from './query';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver'; // TYPES\n// CLASS\n\nexport var QueryCache = /*#__PURE__*/function () {\n  function QueryCache(config) {\n    this.config = config || {};\n    this.globalListeners = [];\n    this.queries = {};\n    this.queriesArray = [];\n    this.isFetching = 0;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.notifyGlobalListeners = function notifyGlobalListeners(query) {\n    var _this = this;\n\n    this.isFetching = this.getQueries().reduce(function (acc, q) {\n      return q.state.isFetching ? acc + 1 : acc;\n    }, 0);\n    notifyManager.batch(function () {\n      _this.globalListeners.forEach(function (listener) {\n        notifyManager.schedule(function () {\n          listener(_this, query);\n        });\n      });\n    });\n  };\n\n  _proto.getDefaultConfig = function getDefaultConfig() {\n    return this.config.defaultConfig;\n  };\n\n  _proto.getResolvedQueryConfig = function getResolvedQueryConfig(queryKey, config) {\n    return _getResolvedQueryConfig(this, queryKey, undefined, config);\n  };\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this2 = this;\n\n    this.globalListeners.push(listener);\n    return function () {\n      _this2.globalListeners = _this2.globalListeners.filter(function (x) {\n        return x !== listener;\n      });\n    };\n  };\n\n  _proto.clear = function clear(options) {\n    this.removeQueries();\n\n    if (options == null ? void 0 : options.notify) {\n      this.notifyGlobalListeners();\n    }\n  };\n\n  _proto.getQueries = function getQueries(predicate, options) {\n    var anyKey = predicate === true || typeof predicate === 'undefined';\n\n    if (anyKey && !options) {\n      return this.queriesArray;\n    }\n\n    var predicateFn;\n\n    if (typeof predicate === 'function') {\n      predicateFn = predicate;\n    } else {\n      var _ref = options || {},\n          exact = _ref.exact,\n          active = _ref.active,\n          stale = _ref.stale;\n\n      var resolvedConfig = this.getResolvedQueryConfig(predicate);\n\n      predicateFn = function predicateFn(query) {\n        // Check query key if needed\n        if (!anyKey) {\n          if (exact) {\n            // Check if the query key matches exactly\n            if (query.queryHash !== resolvedConfig.queryHash) {\n              return false;\n            }\n          } else {\n            // Check if the query key matches partially\n            if (!deepIncludes(query.queryKey, resolvedConfig.queryKey)) {\n              return false;\n            }\n          }\n        } // Check active state if needed\n\n\n        if (typeof active === 'boolean' && query.isActive() !== active) {\n          return false;\n        } // Check stale state if needed\n\n\n        if (typeof stale === 'boolean' && query.isStale() !== stale) {\n          return false;\n        }\n\n        return true;\n      };\n    }\n\n    return this.queriesArray.filter(predicateFn);\n  };\n\n  _proto.getQuery = function getQuery(predicate) {\n    return this.getQueries(predicate, {\n      exact: true\n    })[0];\n  };\n\n  _proto.getQueryByHash = function getQueryByHash(queryHash) {\n    return this.queries[queryHash];\n  };\n\n  _proto.getQueryData = function getQueryData(predicate) {\n    var _this$getQuery;\n\n    return (_this$getQuery = this.getQuery(predicate)) == null ? void 0 : _this$getQuery.state.data;\n  };\n\n  _proto.removeQuery = function removeQuery(query) {\n    if (this.queries[query.queryHash]) {\n      query.destroy();\n      delete this.queries[query.queryHash];\n      this.queriesArray = this.queriesArray.filter(function (x) {\n        return x !== query;\n      });\n      this.notifyGlobalListeners(query);\n    }\n  };\n\n  _proto.removeQueries = function removeQueries(predicate, options) {\n    var _this3 = this;\n\n    this.getQueries(predicate, options).forEach(function (query) {\n      _this3.removeQuery(query);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(predicate, options) {\n    this.getQueries(predicate, options).forEach(function (query) {\n      query.cancel();\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the invalidated queries.\n   */\n  ;\n\n  _proto.invalidateQueries = function invalidateQueries(predicate, options) {\n    var queries = this.getQueries(predicate, options);\n    notifyManager.batch(function () {\n      queries.forEach(function (query) {\n        query.invalidate();\n      });\n    });\n\n    var _ref2 = options || {},\n        _ref2$refetchActive = _ref2.refetchActive,\n        refetchActive = _ref2$refetchActive === void 0 ? true : _ref2$refetchActive,\n        _ref2$refetchInactive = _ref2.refetchInactive,\n        refetchInactive = _ref2$refetchInactive === void 0 ? false : _ref2$refetchInactive;\n\n    if (!refetchInactive && !refetchActive) {\n      return Promise.resolve(queries);\n    }\n\n    var refetchOptions = _extends({}, options);\n\n    if (refetchActive && !refetchInactive) {\n      refetchOptions.active = true;\n    } else if (refetchInactive && !refetchActive) {\n      refetchOptions.active = false;\n    }\n\n    var promise = this.refetchQueries(predicate, refetchOptions);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(function () {\n        return queries;\n      });\n    }\n\n    return promise.then(function () {\n      return queries;\n    });\n  }\n  /**\n   * @return Promise resolving to an array with the refetched queries.\n   */\n  ;\n\n  _proto.refetchQueries = function refetchQueries(predicate, options) {\n    var _this4 = this;\n\n    var promises = [];\n    notifyManager.batch(function () {\n      _this4.getQueries(predicate, options).forEach(function (query) {\n        var promise = query.fetch().then(function () {\n          return query;\n        });\n\n        if (!(options == null ? void 0 : options.throwOnError)) {\n          promise = promise.catch(function () {\n            return query;\n          });\n        }\n\n        promises.push(promise);\n      });\n    });\n    return Promise.all(promises);\n  };\n\n  _proto.resetErrorBoundaries = function resetErrorBoundaries() {\n    this.getQueries().forEach(function (query) {\n      query.state.throwInErrorBoundary = false;\n    });\n  };\n\n  _proto.buildQuery = function buildQuery(queryKey, config) {\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    return query;\n  };\n\n  _proto.createQuery = function createQuery(config) {\n    var query = new Query(config); // A frozen cache does not add new queries to the cache\n\n    if (!this.config.frozen) {\n      this.queries[query.queryHash] = query;\n      this.queriesArray.push(query);\n      this.notifyGlobalListeners(query);\n    }\n\n    return query;\n  } // Parameter syntax\n  ; // Implementation\n\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs[0],\n        config = _getQueryArgs[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, _extends({\n      // https://github.com/tannerlinsley/react-query/issues/652\n      retry: false\n    }, config));\n    var query = this.getQueryByHash(resolvedConfig.queryHash);\n\n    if (!query) {\n      query = this.createQuery(resolvedConfig);\n    }\n\n    if (!query.isStaleByTime(config.staleTime)) {\n      return Promise.resolve(query.state.data);\n    }\n\n    return query.fetch(undefined, resolvedConfig);\n  } // Parameter syntax with optional prefetch options\n  ; // Implementation\n\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3, arg4) {\n    if (isPlainObject(arg2) && (arg2.hasOwnProperty('throwOnError') || arg2.hasOwnProperty('force'))) {\n      arg4 = arg2;\n      arg2 = undefined;\n      arg3 = undefined;\n    }\n\n    var _getQueryArgs2 = getQueryArgs(arg1, arg2, arg3, arg4),\n        queryKey = _getQueryArgs2[0],\n        config = _getQueryArgs2[1],\n        options = _getQueryArgs2[2];\n\n    if (options == null ? void 0 : options.force) {\n      config.staleTime = 0;\n    }\n\n    var promise = this.fetchQuery(queryKey, config);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  } // Parameter syntax\n  ; // Implementation\n\n\n  _proto.watchQuery = function watchQuery(arg1, arg2, arg3) {\n    var _getQueryArgs3 = getQueryArgs(arg1, arg2, arg3),\n        queryKey = _getQueryArgs3[0],\n        config = _getQueryArgs3[1];\n\n    var resolvedConfig = this.getResolvedQueryConfig(queryKey, config);\n    return new QueryObserver(resolvedConfig);\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, config) {\n    this.buildQuery(queryKey, config).setData(updater);\n  };\n\n  return QueryCache;\n}();\nvar defaultQueryCache = new QueryCache({\n  frozen: isServer\n});\nexport { defaultQueryCache as queryCache };\nexport var queryCaches = [defaultQueryCache];\n/**\n * @deprecated\n */\n\nexport function makeQueryCache(config) {\n  return new QueryCache(config);\n}\nexport function onVisibilityOrOnlineChange(type) {\n  if (isDocumentVisible() && isOnline()) {\n    notifyManager.batch(function () {\n      queryCaches.forEach(function (queryCache) {\n        queryCache.getQueries().forEach(function (query) {\n          query.onInteraction(type);\n        });\n      });\n    });\n  }\n}","import { createSetHandler, isServer } from './utils';\nimport { onVisibilityOrOnlineChange } from './queryCache';\nexport var setFocusHandler = createSetHandler(function () {\n  return onVisibilityOrOnlineChange('focus');\n});\nsetFocusHandler(function (handleFocus) {\n  var _window;\n\n  if (isServer || !((_window = window) == null ? void 0 : _window.addEventListener)) {\n    return;\n  } // Listen to visibillitychange and focus\n\n\n  window.addEventListener('visibilitychange', handleFocus, false);\n  window.addEventListener('focus', handleFocus, false);\n  return function () {\n    // Be sure to unsubscribe if a new handler is set\n    window.removeEventListener('visibilitychange', handleFocus);\n    window.removeEventListener('focus', handleFocus);\n  };\n});","import { createSetHandler, isServer } from './utils';\nimport { onVisibilityOrOnlineChange } from './queryCache';\nexport var setOnlineHandler = createSetHandler(function () {\n  return onVisibilityOrOnlineChange('online');\n});\nsetOnlineHandler(function (handleOnline) {\n  var _window;\n\n  if (isServer || !((_window = window) == null ? void 0 : _window.addEventListener)) {\n    return;\n  } // Listen to online\n\n\n  window.addEventListener('online', handleOnline, false);\n  return function () {\n    // Be sure to unsubscribe if a new handler is set\n    window.removeEventListener('online', handleOnline);\n  };\n});","import ReactDOM from 'react-dom';\nexport var unstable_batchedUpdates = ReactDOM.unstable_batchedUpdates;","import React from 'react';\nimport { QueryCache, queryCache as defaultQueryCache, queryCaches } from '../core';\nvar queryCacheContext = /*#__PURE__*/React.createContext(defaultQueryCache);\nexport var useQueryCache = function useQueryCache() {\n  return React.useContext(queryCacheContext);\n};\nexport var ReactQueryCacheProvider = function ReactQueryCacheProvider(_ref) {\n  var queryCache = _ref.queryCache,\n      children = _ref.children;\n  var resolvedQueryCache = React.useMemo(function () {\n    return queryCache || new QueryCache();\n  }, [queryCache]);\n  React.useEffect(function () {\n    queryCaches.push(resolvedQueryCache);\n    return function () {\n      // remove the cache from the active list\n      var i = queryCaches.indexOf(resolvedQueryCache);\n\n      if (i > -1) {\n        queryCaches.splice(i, 1);\n      } // if the resolvedQueryCache was created by us, we need to tear it down\n\n\n      if (queryCache == null) {\n        resolvedQueryCache.clear({\n          notify: false\n        });\n      }\n    };\n  }, [resolvedQueryCache, queryCache]);\n  return /*#__PURE__*/React.createElement(queryCacheContext.Provider, {\n    value: resolvedQueryCache\n  }, children);\n};","import React from 'react';\nimport { mergeReactQueryConfigs } from '../core/config';\nvar configContext = /*#__PURE__*/React.createContext(undefined);\nexport function useContextConfig() {\n  return React.useContext(configContext);\n}\nexport var ReactQueryConfigProvider = function ReactQueryConfigProvider(_ref) {\n  var config = _ref.config,\n      children = _ref.children;\n  var parentConfig = useContextConfig();\n  var mergedConfig = React.useMemo(function () {\n    return parentConfig ? mergeReactQueryConfigs(parentConfig, config) : config;\n  }, [config, parentConfig]);\n  return /*#__PURE__*/React.createElement(configContext.Provider, {\n    value: mergedConfig\n  }, children);\n};","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar context = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useErrorResetBoundary = function useErrorResetBoundary() {\n  return React.useContext(context);\n}; // COMPONENT\n\nexport var ReactQueryErrorResetBoundary = function ReactQueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { isServer } from '../core/utils';\nexport function useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\nexport function useMountedCallback(callback) {\n  var isMounted = useIsMounted();\n  return React.useCallback(function () {\n    if (isMounted()) {\n      return callback.apply(void 0, arguments);\n    }\n  }, [callback, isMounted]);\n}","import \"core-js/modules/es.promise.finally\";\nimport React from 'react';\nimport { useIsMounted } from './utils';\nimport { getResolvedQueryConfig } from '../core/config';\nimport { QueryObserver } from '../core/queryObserver';\nimport { useErrorResetBoundary } from './ReactQueryErrorResetBoundary';\nimport { useQueryCache } from './ReactQueryCacheProvider';\nimport { useContextConfig } from './ReactQueryConfigProvider';\nexport function useBaseQuery(queryKey, config) {\n  var _React$useReducer = React.useReducer(function (c) {\n    return c + 1;\n  }, 0),\n      rerender = _React$useReducer[1];\n\n  var isMounted = useIsMounted();\n  var cache = useQueryCache();\n  var contextConfig = useContextConfig();\n  var errorResetBoundary = useErrorResetBoundary(); // Get resolved config\n\n  var resolvedConfig = getResolvedQueryConfig(cache, queryKey, contextConfig, config); // Create query observer\n\n  var observerRef = React.useRef();\n  var firstRender = !observerRef.current;\n  var observer = observerRef.current || new QueryObserver(resolvedConfig);\n  observerRef.current = observer; // Subscribe to the observer\n\n  React.useEffect(function () {\n    errorResetBoundary.clearReset();\n    return observer.subscribe(function () {\n      if (isMounted()) {\n        rerender();\n      }\n    });\n  }, [isMounted, observer, rerender, errorResetBoundary]); // Update config\n\n  if (!firstRender) {\n    observer.updateConfig(resolvedConfig);\n  }\n\n  var result = observer.getCurrentResult(); // Handle suspense\n\n  if (resolvedConfig.suspense || resolvedConfig.useErrorBoundary) {\n    var query = observer.getCurrentQuery();\n\n    if (result.isError && !errorResetBoundary.isReset() && query.state.throwInErrorBoundary) {\n      throw result.error;\n    }\n\n    if (resolvedConfig.enabled && resolvedConfig.suspense && !result.isSuccess) {\n      errorResetBoundary.clearReset();\n      var unsubscribe = observer.subscribe();\n      throw observer.fetch().finally(unsubscribe);\n    }\n  }\n\n  return result;\n}","import { getQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // TYPES\n// Implementation\n\nexport function useQuery(arg1, arg2, arg3) {\n  var _getQueryArgs = getQueryArgs(arg1, arg2, arg3),\n      queryKey = _getQueryArgs[0],\n      config = _getQueryArgs[1];\n\n  return useBaseQuery(queryKey, config);\n}","import { setBatchedUpdates } from './core/index';\nimport { unstable_batchedUpdates } from './react/reactBatchedUpdates';\nsetBatchedUpdates(unstable_batchedUpdates);\nexport * from './core/index';\nexport * from './react/index';","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL // eslint-disable-next-line no-undef\n&& !Symbol.sham // eslint-disable-next-line no-undef\n&& typeof Symbol.iterator == 'symbol';","var global = require('../internals/global');\n\nvar shared = require('../internals/shared');\n\nvar has = require('../internals/has');\n\nvar uid = require('../internals/uid');\n\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  }\n\n  return WellKnownSymbolsStore[name];\n};","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});","var anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species'); // `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\n\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};","var anObject = require('../internals/an-object');\n\nvar isObject = require('../internals/is-object');\n\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};"],"sourceRoot":""}